{"version":3,"file":"default-src_app_user_user_service_ts-node_modules_primeng_fesm2015_primeng-table_js.js","mappings":"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","names":["UserService","constructor","api","commonService","this","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","getBookings","get","getBookingsUrl","_models_api_result_model__WEBPACK_IMPORTED_MODULE_3__","getBooking","id","getBookingUrl","cancelBooking","model","cancelBookingUrl","cancelReason","ticketBooking","ticketBookingUrl","isPaymentReceived","paymentMethod","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","CALENDAR_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","Calendar","multi","el","renderer","cd","zone","config","overlayService","EventEmitter","hours","pm","hourFormat","content","contentViewChild","isMonthNavigate","Promise","resolve","then","updateFocus","initFocusableCell","defaultDate","_defaultDate","initialized","date","Date","currentMonth","getMonth","currentYear","getFullYear","initTime","createMonths","minDate","_minDate","undefined","maxDate","_maxDate","disabledDates","_disabledDates","disabledDays","_disabledDays","yearRange","_yearRange","years","split","yearStart","parseInt","yearEnd","populateYearOptions","showTime","_showTime","currentHour","value","updateInputfield","locale","_locale","newLocale","console","warn","ngOnInit","view","createWeekDays","ticksTo1970","Math","floor","createMonthPickerValues","translationSubscription","translationObserver","subscribe","ngAfterContentInit","templates","forEach","item","getType","dateTemplate","template","disabledDateTemplate","headerTemplate","footerTemplate","getTranslation","option","start","end","yearOptions","i","push","weekDays","dayIndex","firstDayOfWeek","dayLabels","TranslationKeys","monthPickerValues","monthLabels","month","year","months","numberOfMonths","m","y","createMonth","getWeekNumber","checkDate","getTime","setDate","getDate","getDay","time","setMonth","round","dates","firstDay","getFirstDayOfMonthIndex","daysLength","getDaysCountInMonth","prevMonthDaysLength","getDaysCountInPrevMonth","dayNo","today","weekNumbers","monthRows","ceil","week","j","prev","getPreviousMonthAndYear","day","otherMonth","isToday","selectable","isSelectable","remainingDaysLength","length","next","getNextMonthAndYear","showWeek","getHours","currentMinute","getMinutes","currentSecond","getSeconds","setCurrentHourPM","timeOnly","navBackward","event","stopPropagation","disabled","preventDefault","decrementYear","setTimeout","onMonthChange","emit","navForward","incrementYear","yearNavigator","difference","onDateSelect","dateMeta","isMultipleSelection","isSelected","filter","isDateEquals","updateModel","shouldSelectDate","selectDate","isSingleSelection","hideOnDateTimeSelect","hideOverlay","mask","disableModality","markForCheck","maxDateCount","onMonthSelect","index","DomHandler","target","formattedValue","formatDateTime","multipleSeparator","isRangeSelection","startDate","endDate","rangeSeparator","inputFieldValue","updateFilledState","inputfieldViewChild","nativeElement","formatTime","formatDate","getDateFormat","setHours","setMinutes","setSeconds","onSelect","dataType","onModelChange","stringArrValue","map","setFullYear","getSundayIndex","daylightSavingAdjust","selected","isDateBetween","isMonthSelected","Array","isArray","selectionMode","validMin","validMax","validDate","validDay","selectOtherMonths","isDateDisabled","isDayDisabled","disabledDate","weekdayNumber","indexOf","onInputFocus","focus","showOnFocus","showOverlay","onFocus","onInputClick","overlayVisible","onInputBlur","onBlur","keepInvalid","onModelTouched","onButtonClick","inputfield","onOverlayClick","add","originalEvent","onPrevButtonClick","navigationState","backward","button","onNextButtonClick","onContainerButtonKeydown","which","inline","trapFocus","onInputKeydown","isKeydown","keyCode","tabIndex","onDateCellKeydown","groupIndex","cellContent","currentTarget","cell","parentElement","cellIndex","nextRow","nextElementSibling","focusCell","children","prevRow","previousElementSibling","prevCell","navigateToMonth","nextCell","onMonthCellKeydown","cells","prevMonthContainer","nextMonthContainer","selectedCell","todayCell","focusableElements","ownerDocument","activeElement","focusedIndex","shiftKey","focusTrap","onMonthDropdownChange","onYearDropdownChange","onYearChange","validateTime","hour","minute","second","convertedHour","convertTo24Hour","valueDateString","toDateString","incrementHour","prevHour","newHour","stepHour","newPM","onTimePickerElementMouseDown","type","direction","repeat","onTimePickerElementMouseUp","clearTimePickerTimer","updateTime","onTimePickerElementMouseLeave","timePickerTimer","interval","decrementHour","incrementMinute","decrementMinute","incrementSecond","decrementSecond","clearTimeout","newMinute","stepMinute","newSecond","stepSecond","slice","toggleAMPM","onUserInput","val","parseValueFromString","isValidSelection","updateUI","filled","onInput","isValid","every","v","text","trim","parseDateTime","tokens","token","parts","populateTime","dateFormat","ampm","pop","timeString","parseDate","join","parseTime","touchUI","toggle","onOverlayAnimationStart","toState","overlay","element","appendOverlay","autoZIndex","ZIndexUtils","baseZIndex","zIndex","modal","alignOverlay","onShow","onOverlayHide","onClose","onOverlayAnimationDone","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","appendTo","document","body","appendChild","restoreOverlayAppend","enableModality","createElement","style","String","maskStyleClass","maskClickListener","listen","animationEndListener","destroyMask","bind","addEventListener","removeChild","hasBlockerMasks","bodyChildren","bodyChild","unbindAnimationEndListener","unbindMaskClickListener","removeEventListener","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","format","iFormat","lookAhead","match","matches","charAt","formatNumber","len","num","formatName","shortNames","longNames","output","literal","minutes","seconds","showSeconds","validTokenLength","h","s","isNaN","toString","dim","extra","iValue","shortYearCutoff","doy","getNumber","isDoubled","size","digits","RegExp","substring","getName","arr","names","sort","a","b","name","substr","toLowerCase","checkLiteral","test","onTodayButtonClick","onTodayClick","onClearButtonClick","onClearClick","documentClickListener","runOutsideAngular","documentTarget","isOutsideClicked","run","onClickOutside","unbindDocumentClickListener","documentResizeListener","onWindowResize","window","unbindDocumentResizeListener","scrollHandler","ConnectedOverlayScrollHandler","containerViewChild","unbindScrollListener","isSameNode","isNavIconClicked","contains","ngOnDestroy","destroy","unsubscribe","i0","PrimeTemplate","i2","trigger","state","transform","opacity","transition","animate","CalendarModule","CommonModule","ButtonModule","SharedModule","RippleModule","SELECTBUTTON_VALUE_ACCESSOR","SelectButton","getOptionLabel","optionLabel","ObjectUtils","label","getOptionValue","optionValue","isOptionDisabled","optionDisabled","onItemClick","multiple","removeOption","onOptionClick","onChange","dataKey","TemplateRef","i1","SelectButtonModule","TRISTATECHECKBOX_VALUE_ACCESSOR","TriStateCheckbox","onClick","input","readonly","focused","onKeydown","onKeyup","TriStateCheckboxModule","TableService","Subject","sortSource","asObservable","selectionSource","contextMenuSource","valueSource","totalRecordsSource","columnsSource","resetSource","onSort","sortMeta","onSelectionChange","onResetChange","onContextMenu","data","onValueChange","onTotalRecordsChange","onColumnsChange","columns","Table","tableService","filterService","UniqueComponentId","lazy","lazyLoadOnInit","virtualScroll","onLazyLoad","createLazyLoadMetadata","restoringFilter","responsiveLayout","scrollable","createResponsiveStyle","captionTemplate","headerGroupedTemplate","bodyTemplate","loadingBodyTemplate","footerGroupedTemplate","summaryTemplate","colGroupTemplate","expandedRowTemplate","groupHeaderTemplate","rowspanTemplate","groupFooterTemplate","frozenRowsTemplate","frozenHeaderTemplate","frozenBodyTemplate","frozenFooterTemplate","frozenColGroupTemplate","frozenExpandedRowTemplate","emptyMessageTemplate","paginatorLeftTemplate","paginatorRightTemplate","paginatorDropdownItemTemplate","ngAfterViewInit","isStateful","resizableColumns","restoreColumnWidths","virtualScrollSubscription","virtualScrollBody","renderedRangeStream","range","top","virtualRowHeight","tableHeaderViewChild","ngOnChanges","simpleChange","stateRestored","restoreState","_value","currentValue","totalRecords","sortMode","sortField","groupRowsBy","sortSingle","multiSortMeta","sortMultiple","hasFilter","_filter","_columns","reorderableColumns","columnOrderStateRestored","restoreColumnOrder","_sortField","sortOrder","_sortOrder","groupRowsByOrder","_multiSortMeta","selection","_selection","preventSelectionSetterPropagation","updateSelectionKeys","cols","first","_first","rows","_rows","_totalRecords","dataToRender","filteredValue","paginator","selectionKeys","onPageChange","onPage","firstChange","rowsChange","saveState","anchorRowIndex","resetScrollTop","field","defaultSortOrder","resetPageOnSort","metaKey","ctrlKey","getSortMeta","order","getGroupRowsMeta","restoringSort","customSort","sortFunction","mode","data1","data2","value1","value2","result","localeCompare","multisortField","multisortmeta","isSorted","sorted","handleRowClick","targetNode","nodeName","parentNode","isMultipleSelectionMode","rangeRowIndex","clearSelectionRange","rowIndex","selectRange","rowData","metaSelection","rowTouched","metaKeySelection","dataKeyValue","isSingleSelectionMode","selectionChange","selectionIndex","findIndexInSelection","onRowUnselect","onRowSelect","handleRowTouchEnd","handleRowRightClick","contextMenu","contextMenuSelectionMode","contextMenuSelection","contextMenuSelectionChange","onContextMenuSelect","show","rangeStart","rangeEnd","rangeRowsData","rangeRowData","equals","toggleRowWithRadio","toggleRowWithCheckbox","toggleRowsWithCheckbox","check","onHeaderCheckboxToggle","checked","compareSelectionBy","matchMode","filterTimeout","isFilterBlank","filters","filterDelay","filterGlobal","globalFilterFieldsArray","global","globalFilterFields","Error","localMatch","globalMatch","localFiltered","prop","hasOwnProperty","filterField","filterMeta","meta","executeLocalFilter","operator","FilterOperator","globalFilterField","filterLocale","onFilter","filterValue","filterMatchMode","FilterMatchMode","dataFieldValue","filterConstraint","empty","globalFilter","clear","reset","exportCSV","options","csv","frozenColumns","selectionOnly","frozenValue","column","exportable","header","csvSeparator","record","cellData","exportFunction","replace","blob","Blob","link","display","download","setAttribute","URL","createObjectURL","exportFilename","click","open","encodeURI","scrollToVirtualIndex","scrollTo","scrollToIndex","onScrollIndexChange","virtualScrollTimeout","page","virtualScrollOffset","virtualScrollChunkSize","virtualPage","virtualScrollDelay","wrapperViewChild","scrollLeft","left","scrollTop","updateEditingCell","editingCell","editingCellData","editingCellField","editingCellRowIndex","bindDocumentEditListener","isEditingCellValid","documentEditListener","selfClick","onEditComplete","unbindDocumentEditListener","overlaySubscription","initRowEdit","editingRowKeys","saveRowEdit","rowElement","cancelRowEdit","toggleRow","expandedRowKeys","onRowCollapse","rowExpandMode","onRowExpand","isRowExpanded","isRowEditing","onColumnResizeBegin","containerLeft","resizeColumnElement","columnResizing","lastResizerHelperX","pageX","onColumnResize","resizeHelperViewChild","height","offsetHeight","onColumnResizeEnd","delta","offsetLeft","newColumnWidth","offsetWidth","minWidth","columnResizeMode","nextColumn","nextColumnWidth","resizeTableCells","width","tableWidth","tableViewChild","onColResize","colIndex","widths","tableHead","destroyStyleElement","createStyleElement","innerHTML","colWidth","styleElement","onColumnDragStart","columnElement","reorderIconWidth","reorderIndicatorUpViewChild","reorderIconHeight","reorderIndicatorDownViewChild","draggedColumn","dataTransfer","setData","onColumnDragEnter","dropHeader","containerOffset","dropHeaderOffset","dragIndex","dropIndex","targetLeft","columnCenter","dropPosition","dropEffect","onColumnDragLeave","onColumnDrop","dropColumn","allowDrop","onColReorder","draggable","onRowDragStart","rowDragging","draggedRowIndex","onRowDragOver","rowY","pageY","rowMidY","prevRowElement","droppedRowIndex","onRowDragLeave","onRowDragEnd","onRowDrop","onRowReorder","isEmpty","getBlockableElement","getStorage","stateStorage","localStorage","sessionStorage","stateKey","storage","saveColumnWidths","saveColumnOrder","Object","keys","setItem","JSON","stringify","onStateSave","clearState","removeItem","stateString","getItem","reviver","key","parse","columnWidthsState","columnWidths","tableWidthState","onStateRestore","columnOrder","reorderedColumns","col","findColumnByKey","head","responsiveStyleElement","breakpoint","destroyResponsiveStyle","CdkVirtualScrollViewport","core","TableBody","i3","dt","subscription","valueSource$","detectChanges","frozenRows","updateFrozenRowStickyPosition","rowGroupMode","updateFrozenRowGroupHeaderStickyPosition","shouldRenderRowGroupHeader","currentRowFieldData","prevRowData","shouldRenderRowGroupFooter","nextRowData","shouldRenderRowspan","calculateRowGroupSize","nextRowFieldData","groupRowSpan","tableHeaderHeight","rowGroupHeaderStyleObject","i4","RowGroupHeader","getFrozenRowGroupHeaderStickyPosition","FrozenColumn","frozen","_frozen","updateStickyPosition","alignFrozen","right","parseFloat","filterRow","SortableColumn","isEnabled","sortSource$","updateSortState","isFilterElement","onEnterKey","pSortableColumnDisabled","SortIcon","getMultiSortMetaIndex","showInitialSortBadge","getBadgeValue","isMultiSorted","SelectableRow","selectionSource$","onTouchEnd","onArrowDownKeyDown","row","findNextSelectableRow","onArrowUpKeyDown","findPrevSelectableRow","onEnterKeyDown","onPageDownKeyDown","elementRef","onSpaceKeydown","pSelectableRowDisabled","SelectableRowDblClick","ContextMenuRow","contextMenuSource$","pContextMenuRowDisabled","RowToggler","pRowTogglerDisabled","ResizableColumn","resizer","className","resizerMouseDownListener","onMouseDown","bindDocumentEvents","documentMouseMoveListener","onDocumentMouseMove","documentMouseUpListener","onDocumentMouseUp","unbindDocumentEvents","pResizableColumnDisabled","ReorderableColumn","bindEvents","mouseDownListener","dragStartListener","onDragStart","dragOverListener","onDragEnter","dragEnterListener","dragLeaveListener","onDragLeave","unbindEvents","onDragOver","onDrop","pReorderableColumnDisabled","EditableColumn","closeEditingCell","openCell","onEditInit","focusCellSelector","pFocusCellSelector","focusableElement","overlayEventListener","e","clickObservable","completed","onEditCancel","onEscapeKeyDown","onShiftKeyDown","moveToPreviousCell","moveToNextCell","onArrowDown","currentCell","findCell","targetCell","findNextEditableColumnByIndex","onArrowUp","findPrevEditableColumnByIndex","onArrowLeft","onArrowRight","findPreviousEditableColumn","findNextEditableColumn","previousRow","lastElementChild","firstElementChild","pEditableColumnDisabled","EditableRow","pEditableRowDisabled","InitEditableRow","editableRow","SaveEditableRow","CancelEditableRow","CellEditor","editableColumn","inputTemplate","outputTemplate","editing","editMode","TableRadioButton","boxViewChild","TableCheckbox","TableHeaderCheckbox","valueChangeSubscription","updateCheckedState","selectionChangeSubscription","isDisabled","isAllFilteredValuesChecked","ReorderableRowHandle","ReorderableRow","droppable","dragEndListener","onDragEnd","pReorderableRowDisabled","ColumnFilterFormElement","filterCallback","onTextInputEnterKeyDown","onNumericInputKeyDown","i5","ColumnFilter","initFieldFilterConstraint","generateMatchModeOptions","generateOperatorOptions","resetSubscription","resetSource$","clearFilter","matchModes","matchModeOptions","_a","filterMatchModeOptions","operatorOptions","filterTemplate","defaultMatchMode","getDefaultMatchMode","onMenuMatchModeChange","showApplyButton","onRowMatchModeChange","hide","onRowMatchModeKeyDown","nextItem","findNextItem","removeAttribute","prevItem","findPrevItem","onRowClearItemClick","isRowMatchModeSelected","addConstraint","getDefaultOperator","removeConstraint","onOperatorChange","toggleMenu","onToggleButtonKeyDown","focusable","altKey","onEscape","icon","onContentClick","onOverlayAnimationEnd","hasRowFilter","fieldConstraints","showRemoveIcon","showMenuButton","showMenu","isShowOperator","showOperator","isShowAddConstraint","showAddButton","maxConstraints","applyButtonLabel","clearButtonLabel","addRuleButtonLabel","removeRuleButtonLabel","noFilterLabel","fieldFilter","hideOnClear","applyFilter","i10","TableModule","PaginatorModule","InputTextModule","DropdownModule","ScrollingModule","FormsModule","InputNumberModule"],"sourceRoot":"webpack:///","sources":["./src/app/user/user.service.ts","./node_modules/src/app/components/calendar/calendar.ts","./node_modules/src/app/components/selectbutton/selectbutton.ts","./node_modules/src/app/components/tristatecheckbox/tristatecheckbox.ts","./node_modules/src/app/components/table/table.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiResultModel } from '../models/api-result.model';\r\nimport { ApiCallService } from '../services/api-call.service';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private getBookingsUrl = `${environment.bookingApiUrl}/Booking/GetAll`;\r\n  // private getBookingsUrl = this.commonService.bookingsApiEndPoint + '/Booking/GetBookings';\r\n  private getBookingUrl = `${environment.bookingApiUrl}/Booking/Get`;\r\n  private ticketBookingUrl = environment.bookingApiUrl + '/Booking/Book';\r\n  private cancelBookingUrl = environment.bookingApiUrl + '/Booking/Cancel';\r\n\r\n  constructor(\r\n    private api: ApiCallService,\r\n    private commonService: CommonService\r\n  ) {}\r\n\r\n  getBookings(): Observable<ApiResultModel> {\r\n    return this.api.get<ApiResultModel>(\r\n      this.getBookingsUrl,\r\n      'Get My Bookings',\r\n      new ApiResultModel()\r\n    );\r\n  }\r\n\r\n  getBooking(id: any): Observable<ApiResultModel> {\r\n    return this.api.get<ApiResultModel>(\r\n      `${this.getBookingUrl}?bookingId=${id}`,\r\n      'Get Booking',\r\n      new ApiResultModel()\r\n    );\r\n  }\r\n\r\n  cancelBooking(model: any): Observable<ApiResultModel> {\r\n    return this.api.get<ApiResultModel>(\r\n      `${this.cancelBookingUrl}?id=${model.id}&cancelReason=${model.cancelReason}`,\r\n      'Cancel Booking',\r\n      new ApiResultModel()\r\n    );\r\n  }\r\n\r\n  ticketBooking(model: any): Observable<ApiResultModel> {\r\n    return this.api.get<ApiResultModel>(\r\n      `${this.ticketBookingUrl}?id=${model.id}&isPaymentReceived=${model.isPaymentReceived}&paymentMethod=${model.paymentMethod}`,\r\n      'Ticket Booking',\r\n      new ApiResultModel()\r\n    );\r\n  }\r\n}\r\n","import {NgModule,Component,ElementRef,OnDestroy,OnInit,Input,Output,EventEmitter,forwardRef,Renderer2,\n        ViewChild,ChangeDetectorRef,TemplateRef,ContentChildren,QueryList,NgZone,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {ButtonModule} from 'primeng/button';\nimport {RippleModule} from 'primeng/ripple';\nimport {DomHandler, ConnectedOverlayScrollHandler} from 'primeng/dom';\nimport {SharedModule,PrimeTemplate,PrimeNGConfig,TranslationKeys, OverlayService} from 'primeng/api';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {ZIndexUtils} from 'primeng/utils';\n\nexport const CALENDAR_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Calendar),\n    multi: true\n};\n\nexport interface LocaleSettings {\n    firstDayOfWeek?: number;\n    dayNames?: string[];\n    dayNamesShort?: string[];\n    dayNamesMin?: string[];\n    monthNames?: string[];\n    monthNamesShort?: string[];\n    today?: string;\n    clear?: string;\n    dateFormat?: string;\n    weekHeader?: string;\n}\n\n@Component({\n    selector: 'p-calendar',\n    template:  `\n        <span #container [ngClass]=\"{'p-calendar':true, 'p-calendar-w-btn': showIcon, 'p-calendar-timeonly': timeOnly, 'p-calendar-disabled':disabled, 'p-focus': focus}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ng-template [ngIf]=\"!inline\">\n                <input #inputfield type=\"text\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.required]=\"required\" [attr.aria-required]=\"required\" [value]=\"inputFieldValue\" (focus)=\"onInputFocus($event)\" (keydown)=\"onInputKeydown($event)\" (click)=\"onInputClick()\" (blur)=\"onInputBlur($event)\"\n                    [readonly]=\"readonlyInput\" (input)=\"onUserInput($event)\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [placeholder]=\"placeholder||''\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.inputmode]=\"touchUI ? 'off' : null\"\n                    [ngClass]=\"'p-inputtext p-component'\" autocomplete=\"off\" [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    ><button type=\"button\" [attr.aria-label]=\"iconAriaLabel\" [icon]=\"icon\" pButton pRipple *ngIf=\"showIcon\" (click)=\"onButtonClick($event,inputfield)\" class=\"p-datepicker-trigger\"\n                    [disabled]=\"disabled\" tabindex=\"0\"></button>\n            </ng-template>\n            <div #contentWrapper [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" [ngClass]=\"{'p-datepicker p-component': true, 'p-datepicker-inline':inline,\n                'p-disabled':disabled,'p-datepicker-timeonly':timeOnly,'p-datepicker-multiple-month': this.numberOfMonths > 1, 'p-datepicker-monthpicker': (view === 'month'), 'p-datepicker-touch-ui': touchUI}\"\n                [@overlayAnimation]=\"touchUI ? {value: 'visibleTouchUI', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}:\n                                            {value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n                                            [@.disabled]=\"inline === true\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationDone($event)\" (click)=\"onOverlayClick($event)\" *ngIf=\"inline || overlayVisible\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ng-container *ngIf=\"!timeOnly\">\n                    <div class=\"p-datepicker-group-container\">\n                        <div class=\"p-datepicker-group\" *ngFor=\"let month of months; let i = index;\">\n                            <div class=\"p-datepicker-header\">\n                                <button (keydown)=\"onContainerButtonKeydown($event)\" class=\"p-datepicker-prev p-link\" (click)=\"onPrevButtonClick($event)\" *ngIf=\"i === 0\" type=\"button\" pRipple>\n                                    <span class=\"p-datepicker-prev-icon pi pi-chevron-left\"></span>\n                                </button>\n                                <div class=\"p-datepicker-title\">\n                                    <span class=\"p-datepicker-month\" *ngIf=\"!monthNavigator && (view !== 'month')\">{{getTranslation('monthNames')[month.month]}}</span>\n                                    <select tabindex=\"0\" class=\"p-datepicker-month\" *ngIf=\"monthNavigator && (view !== 'month') && numberOfMonths === 1\" (change)=\"onMonthDropdownChange($event.target.value)\">\n                                        <option [value]=\"i\" *ngFor=\"let monthName of getTranslation('monthNames');let i = index\" [selected]=\"i === month.month\">{{monthName}}</option>\n                                    </select>\n                                    <select tabindex=\"0\" class=\"p-datepicker-year\" *ngIf=\"yearNavigator && numberOfMonths === 1\" (change)=\"onYearDropdownChange($event.target.value)\">\n                                        <option [value]=\"year\" *ngFor=\"let year of yearOptions\" [selected]=\"year === currentYear\">{{year}}</option>\n                                    </select>\n                                    <span class=\"p-datepicker-year\" *ngIf=\"!yearNavigator\">{{view === 'month' ? currentYear : month.year}}</span>\n                                </div>\n                                <button (keydown)=\"onContainerButtonKeydown($event)\" class=\"p-datepicker-next p-link\" (click)=\"onNextButtonClick($event)\" *ngIf=\"numberOfMonths === 1 ? true : (i === numberOfMonths -1)\" type=\"button\" pRipple>\n                                    <span class=\"p-datepicker-next-icon pi pi-chevron-right\"></span>\n                                </button>\n                            </div>\n                            <div class=\"p-datepicker-calendar-container\" *ngIf=\"view ==='date'\">\n                                <table class=\"p-datepicker-calendar\">\n                                    <thead>\n                                        <tr>\n                                            <th *ngIf=\"showWeek\" class=\"p-datepicker-weekheader p-disabled\">\n                                                <span>{{getTranslation('weekHeader')}}</span>\n                                            </th>\n                                            <th scope=\"col\" *ngFor=\"let weekDay of weekDays;let begin = first; let end = last\">\n                                                <span>{{weekDay}}</span>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let week of month.dates; let j = index;\">\n                                            <td *ngIf=\"showWeek\" class=\"p-datepicker-weeknumber\">\n                                                <span class=\"p-disabled\">\n                                                    {{month.weekNumbers[j]}}\n                                                </span>\n                                            </td>\n                                            <td *ngFor=\"let date of week\" [ngClass]=\"{'p-datepicker-other-month': date.otherMonth,'p-datepicker-today':date.today}\">\n                                                <ng-container *ngIf=\"date.otherMonth ? showOtherMonths : true\">\n                                                    <span [ngClass]=\"{'p-highlight':isSelected(date), 'p-disabled': !date.selectable}\"\n                                                        (click)=\"onDateSelect($event,date)\" draggable=\"false\" (keydown)=\"onDateCellKeydown($event,date,i)\" pRipple>\n                                                        <ng-container *ngIf=\"!dateTemplate\">{{date.day}}</ng-container>\n                                                        <ng-container *ngTemplateOutlet=\"dateTemplate; context: {$implicit: date}\"></ng-container>\n                                                    </span>\n                                                </ng-container>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-monthpicker\" *ngIf=\"view === 'month'\">\n                        <span *ngFor=\"let m of monthPickerValues; let i = index\" (click)=\"onMonthSelect($event, i)\" (keydown)=\"onMonthCellKeydown($event,i)\" class=\"p-monthpicker-month\" [ngClass]=\"{'p-highlight': isMonthSelected(i), 'p-disabled':!isSelectable(1, i, this.currentYear, false)}\" pRipple>\n                            {{m}}\n                        </span>\n                    </div>\n                </ng-container>\n                <div class=\"p-timepicker\" *ngIf=\"showTime||timeOnly\">\n                    <div class=\"p-hour-picker\">\n                        <button class=\"p-link\" type=\"button\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementHour($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 0, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseleave)=\"onTimePickerElementMouseLeave()\" pRipple>\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </button>\n                        <span><ng-container *ngIf=\"currentHour < 10\">0</ng-container>{{currentHour}}</span>\n                        <button class=\"p-link\" type=\"button\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementHour($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 0, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseleave)=\"onTimePickerElementMouseLeave()\" pRipple>\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </button>\n                    </div>\n                    <div class=\"p-separator\">\n                        <span>{{timeSeparator}}</span>\n                    </div>\n                    <div class=\"p-minute-picker\">\n                        <button class=\"p-link\" type=\"button\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementMinute($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 1, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseleave)=\"onTimePickerElementMouseLeave()\" pRipple>\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </button>\n                        <span><ng-container *ngIf=\"currentMinute < 10\">0</ng-container>{{currentMinute}}</span>\n                        <button class=\"p-link\" type=\"button\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementMinute($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 1, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseleave)=\"onTimePickerElementMouseLeave()\" pRipple>\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </button>\n                    </div>\n                    <div class=\"p-separator\" *ngIf=\"showSeconds\">\n                        <span>{{timeSeparator}}</span>\n                    </div>\n                    <div class=\"p-second-picker\" *ngIf=\"showSeconds\">\n                        <button class=\"p-link\" type=\"button\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementSecond($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 2, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseleave)=\"onTimePickerElementMouseLeave()\" pRipple>\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </button>\n                        <span><ng-container *ngIf=\"currentSecond < 10\">0</ng-container>{{currentSecond}}</span>\n                        <button class=\"p-link\" type=\"button\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementSecond($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 2, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseleave)=\"onTimePickerElementMouseLeave()\" pRipple>\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </button>\n                    </div>\n                    <div class=\"p-ampm-picker\" *ngIf=\"hourFormat=='12'\">\n                        <button class=\"p-link\" type=\"button\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"toggleAMPM($event)\" (keydown.enter)=\"toggleAMPM($event)\" pRipple>\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </button>\n                        <span>{{pm ? 'PM' : 'AM'}}</span>\n                        <button class=\"p-link\" type=\"button\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"toggleAMPM($event)\" (keydown.enter)=\"toggleAMPM($event)\" pRipple>\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"p-datepicker-buttonbar\" *ngIf=\"showButtonBar\">\n                    <button type=\"button\" [label]=\"getTranslation('today')\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"onTodayButtonClick($event)\" pButton pRipple [ngClass]=\"[todayButtonStyleClass]\"></button>\n                    <button type=\"button\" [label]=\"getTranslation('clear')\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"onClearButtonClick($event)\" pButton pRipple [ngClass]=\"[clearButtonStyleClass]\"></button>\n                </div>\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            state('visibleTouchUI', style({\n                transform: 'translate(-50%,-50%)',\n                opacity: 1\n            })),\n            transition('void => visible', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}', style({ opacity: 1, transform: '*' }))\n            ]),\n            transition('visible => void', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n            ]),\n            transition('void => visibleTouchUI', [\n                style({opacity: 0, transform: 'translate3d(-50%, -40%, 0) scale(0.9)'}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('visibleTouchUI => void', [\n                animate(('{{hideTransitionParams}}'),\n                style({\n                    opacity: 0,\n                    transform: 'translate3d(-50%, -40%, 0) scale(0.9)'\n                }))\n            ])\n        ])\n    ],\n    host: {\n        'class': 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focus'\n    },\n    providers: [CALENDAR_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./calendar.css']\n})\nexport class Calendar implements OnInit,OnDestroy,ControlValueAccessor {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inputStyle: any;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() inputStyleClass: string;\n\n    @Input() placeholder: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() iconAriaLabel: string;\n\n    @Input() disabled: any;\n\n    @Input() dateFormat: string;\n\n    @Input() multipleSeparator: string = ',';\n\n    @Input() rangeSeparator: string = '-';\n\n    @Input() inline: boolean = false;\n\n    @Input() showOtherMonths: boolean = true;\n\n    @Input() selectOtherMonths: boolean;\n\n    @Input() showIcon: boolean;\n\n    @Input() icon: string = 'pi pi-calendar';\n\n    @Input() appendTo: any;\n\n    @Input() readonlyInput: boolean;\n\n    @Input() shortYearCutoff: any = '+10';\n\n    @Input() monthNavigator: boolean;\n\n    @Input() yearNavigator: boolean;\n\n    @Input() hourFormat: string = '24';\n\n    @Input() timeOnly: boolean;\n\n    @Input() stepHour: number = 1;\n\n    @Input() stepMinute: number = 1;\n\n    @Input() stepSecond: number = 1;\n\n    @Input() showSeconds: boolean = false;\n\n    @Input() required: boolean;\n\n    @Input() showOnFocus: boolean = true;\n\n    @Input() showWeek: boolean = false;\n\n    @Input() dataType: string = 'date';\n\n    @Input() selectionMode: string = 'single';\n\n    @Input() maxDateCount: number;\n\n    @Input() showButtonBar: boolean;\n\n    @Input() todayButtonStyleClass: string = 'p-button-text';\n\n    @Input() clearButtonStyleClass: string = 'p-button-text';\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() panelStyleClass: string;\n\n    @Input() panelStyle: any;\n\n    @Input() keepInvalid: boolean = false;\n\n    @Input() hideOnDateTimeSelect: boolean = true;\n\n    @Input() numberOfMonths: number = 1;\n\n    @Input() view: string = 'date';\n\n    @Input() touchUI: boolean;\n\n    @Input() timeSeparator: string = \":\";\n\n    @Input() focusTrap: boolean = true;\n\n    @Input() firstDayOfWeek: number = 0;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onInput: EventEmitter<any> = new EventEmitter();\n\n    @Output() onTodayClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onClearClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onMonthChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onYearChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onClickOutside: EventEmitter<any> = new EventEmitter();\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Input() tabindex: number;\n\n    @ViewChild('container', { static: false }) containerViewChild: ElementRef;\n\n    @ViewChild('inputfield', { static: false }) inputfieldViewChild: ElementRef;\n\n    @ViewChild('contentWrapper', { static: false }) set content (content: ElementRef) {\n        this.contentViewChild = content;\n\n        if (this.contentViewChild) {\n            if (this.isMonthNavigate) {\n                Promise.resolve(null).then(() => this.updateFocus());\n                this.isMonthNavigate = false;\n            }\n            else {\n                this.initFocusableCell();\n            }\n        }\n    };\n\n    contentViewChild: ElementRef;\n\n    value: any;\n\n    dates: any[];\n\n    months: any[];\n\n    monthPickerValues: any[];\n\n    weekDays: string[];\n\n    currentMonth: number;\n\n    currentYear: number;\n\n    currentHour: number;\n\n    currentMinute: number;\n\n    currentSecond: number;\n\n    pm: boolean;\n\n    mask: HTMLDivElement;\n\n    maskClickListener: Function;\n\n    overlay: HTMLDivElement;\n\n    overlayVisible: boolean;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    calendarElement: any;\n\n    timePickerTimer:any;\n\n    documentClickListener: any;\n\n    animationEndListener: any;\n\n    ticksTo1970: number;\n\n    yearOptions: number[];\n\n    focus: boolean;\n\n    isKeydown: boolean;\n\n    filled: boolean;\n\n    inputFieldValue: string = null;\n\n    _minDate: Date;\n\n    _maxDate: Date;\n\n    _showTime: boolean;\n\n    _yearRange: string;\n\n    preventDocumentListener: boolean;\n\n    dateTemplate: TemplateRef<any>;\n\n    headerTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    disabledDateTemplate: TemplateRef<any>;\n\n    _disabledDates: Array<Date>;\n\n    _disabledDays: Array<number>;\n\n    selectElement: any;\n\n    todayElement: any;\n\n    focusElement: any;\n\n    scrollHandler: any;\n\n    documentResizeListener: any;\n\n    navigationState: any = null;\n\n    isMonthNavigate: boolean;\n\n    initialized: boolean;\n\n    translationSubscription: Subscription;\n\n    _locale: LocaleSettings;\n\n    @Input() get defaultDate(): Date {\n        return this._defaultDate;\n    };\n\n    set defaultDate(defaultDate: Date) {\n        this._defaultDate = defaultDate;\n\n        if (this.initialized) {\n            const date = defaultDate||new Date();\n            this.currentMonth = date.getMonth();\n            this.currentYear = date.getFullYear();\n            this.initTime(date);\n            this.createMonths(this.currentMonth, this.currentYear);\n        }\n    }\n\n    _defaultDate: Date;\n\n    @Input() get minDate(): Date {\n        return this._minDate;\n    }\n\n    set minDate(date: Date) {\n        this._minDate = date;\n\n        if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n            this.createMonths(this.currentMonth, this.currentYear);\n        }\n    }\n\n    @Input() get maxDate(): Date {\n        return this._maxDate;\n    }\n\n    set maxDate(date: Date) {\n        this._maxDate = date;\n\n        if (this.currentMonth != undefined && this.currentMonth != null  && this.currentYear) {\n            this.createMonths(this.currentMonth, this.currentYear);\n        }\n    }\n\n    @Input() get disabledDates(): Date[] {\n        return this._disabledDates;\n    }\n\n    set disabledDates(disabledDates: Date[]) {\n        this._disabledDates = disabledDates;\n        if (this.currentMonth != undefined && this.currentMonth != null  && this.currentYear) {\n\n            this.createMonths(this.currentMonth, this.currentYear);\n        }\n    }\n\n    @Input() get disabledDays(): number[] {\n        return this._disabledDays;\n    }\n\n    set disabledDays(disabledDays: number[]) {\n        this._disabledDays = disabledDays;\n\n        if (this.currentMonth != undefined && this.currentMonth != null  && this.currentYear) {\n            this.createMonths(this.currentMonth, this.currentYear);\n        }\n    }\n\n    @Input() get yearRange(): string {\n        return this._yearRange;\n    }\n\n    set yearRange(yearRange: string) {\n        this._yearRange = yearRange;\n\n        if (yearRange) {\n            const years = yearRange.split(':');\n            const yearStart = parseInt(years[0]);\n            const yearEnd = parseInt(years[1]);\n\n            this.populateYearOptions(yearStart, yearEnd);\n        }\n    }\n\n    @Input() get showTime(): boolean {\n        return this._showTime;\n    }\n\n    set showTime(showTime: boolean) {\n        this._showTime = showTime;\n\n        if (this.currentHour === undefined) {\n            this.initTime(this.value||new Date());\n        }\n        this.updateInputfield();\n    }\n\n    get locale() {\n       return this._locale;\n    }\n\n    @Input()\n    set locale(newLocale: LocaleSettings) {\n        console.warn(\"Locale property has no effect, use new i18n API instead.\");\n    }\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, private zone: NgZone, private config: PrimeNGConfig, public overlayService: OverlayService) {}\n\n    ngOnInit() {\n        const date = this.defaultDate||new Date();\n        this.currentMonth = date.getMonth();\n        this.currentYear = date.getFullYear();\n\n        if (this.view === 'date') {\n            this.createWeekDays();\n            this.initTime(date);\n            this.createMonths(this.currentMonth, this.currentYear);\n            this.ticksTo1970 = (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000);\n        }\n        else if (this.view === 'month') {\n            this.createMonthPickerValues();\n        }\n\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.createWeekDays();\n        });\n\n        this.initialized = true;\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'date':\n                    this.dateTemplate = item.template;\n                break;\n\n                case 'disabledDate':\n                    this.disabledDateTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                default:\n                    this.dateTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    getTranslation(option: string) {\n        return this.config.getTranslation(option);\n    }\n\n    populateYearOptions(start, end) {\n        this.yearOptions = [];\n\n        for (let i = start; i <= end; i++) {\n            this.yearOptions.push(i);\n        }\n    }\n\n    createWeekDays() {\n        this.weekDays = [];\n        let dayIndex = this.firstDayOfWeek;\n        let dayLabels = this.getTranslation(TranslationKeys.DAY_NAMES_MIN);\n        for (let i = 0; i < 7; i++) {\n            this.weekDays.push(dayLabels[dayIndex]);\n            dayIndex = (dayIndex == 6) ? 0 : ++dayIndex;\n        }\n    }\n\n    createMonthPickerValues() {\n        this.monthPickerValues = [];\n        let monthLabels = this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT);\n        for (let i = 0; i <= 11; i++) {\n            this.monthPickerValues.push(monthLabels[i]);\n        }\n    }\n\n    createMonths(month: number, year: number) {\n        this.months = this.months = [];\n        for (let i = 0 ; i < this.numberOfMonths; i++) {\n            let m = month + i;\n            let y = year;\n            if (m > 11) {\n                m = m % 11 - 1;\n                y = year + 1;\n            }\n\n            this.months.push(this.createMonth(m, y));\n        }\n    }\n\n    getWeekNumber(date: Date) {\n        let checkDate = new Date(date.getTime());\n\t\tcheckDate.setDate(checkDate.getDate() + 4 - ( checkDate.getDay() || 7 ));\n\t\tlet time = checkDate.getTime();\n\t\tcheckDate.setMonth( 0 );\n\t\tcheckDate.setDate( 1 );\n\t\treturn Math.floor( Math.round((time - checkDate.getTime()) / 86400000 ) / 7 ) + 1;\n    }\n\n    createMonth(month: number, year: number) {\n        let dates = [];\n        let firstDay = this.getFirstDayOfMonthIndex(month, year);\n        let daysLength = this.getDaysCountInMonth(month, year);\n        let prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);\n        let dayNo = 1;\n        let today = new Date();\n        let weekNumbers = [];\n        let monthRows = Math.ceil((daysLength + firstDay) / 7);\n\n        for (let i = 0; i < monthRows; i++) {\n            let week = [];\n\n            if (i == 0) {\n                for (let j = (prevMonthDaysLength - firstDay + 1); j <= prevMonthDaysLength; j++) {\n                    let prev = this.getPreviousMonthAndYear(month, year);\n                    week.push({day: j, month: prev.month, year: prev.year, otherMonth: true,\n                            today: this.isToday(today, j, prev.month, prev.year), selectable: this.isSelectable(j, prev.month, prev.year, true)});\n                }\n\n                let remainingDaysLength = 7 - week.length;\n                for (let j = 0; j < remainingDaysLength; j++) {\n                    week.push({day: dayNo, month: month, year: year, today: this.isToday(today, dayNo, month, year),\n                            selectable: this.isSelectable(dayNo, month, year, false)});\n                    dayNo++;\n                }\n            }\n            else {\n                for (let j = 0; j < 7; j++) {\n                    if (dayNo > daysLength) {\n                        let next = this.getNextMonthAndYear(month, year);\n                        week.push({day: dayNo - daysLength, month: next.month, year: next.year, otherMonth: true,\n                                    today: this.isToday(today, dayNo - daysLength, next.month, next.year),\n                                    selectable: this.isSelectable((dayNo - daysLength), next.month, next.year, true)});\n                    }\n                    else {\n                        week.push({day: dayNo, month: month, year: year, today: this.isToday(today, dayNo, month, year),\n                            selectable: this.isSelectable(dayNo, month, year, false)});\n                    }\n\n                    dayNo++;\n                }\n            }\n\n            if (this.showWeek) {\n                weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));\n            }\n\n            dates.push(week);\n        }\n\n        return {\n            month: month,\n            year: year,\n            dates: dates,\n            weekNumbers: weekNumbers\n        };\n    }\n\n    initTime(date: Date) {\n        this.pm = date.getHours() > 11;\n\n        if (this.showTime) {\n            this.currentMinute = date.getMinutes();\n            this.currentSecond = date.getSeconds();\n            this.setCurrentHourPM(date.getHours());\n        }\n        else if (this.timeOnly) {\n            this.currentMinute = 0;\n            this.currentHour = 0;\n            this.currentSecond = 0;\n        }\n    }\n\n    navBackward(event) {\n        event.stopPropagation();\n\n        if (this.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        this.isMonthNavigate = true;\n\n        if (this.view === 'month') {\n            this.decrementYear();\n            setTimeout(()=> {\n                this.updateFocus();\n            },1);\n        }\n        else {\n            if (this.currentMonth === 0) {\n                this.currentMonth = 11;\n                this.decrementYear();\n            }\n            else {\n                this.currentMonth--;\n            }\n\n            this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n            this.createMonths(this.currentMonth, this.currentYear);\n        }\n    }\n\n    navForward(event) {\n        event.stopPropagation();\n\n        if (this.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        this.isMonthNavigate = true;\n\n        if (this.view === 'month') {\n            this.incrementYear();\n            setTimeout(()=> {\n                this.updateFocus();\n            },1);\n        }\n        else {\n            if (this.currentMonth === 11) {\n                this.currentMonth = 0;\n                this.incrementYear();\n            }\n            else {\n                this.currentMonth++;\n            }\n\n            this.onMonthChange.emit({month: this.currentMonth + 1, year: this.currentYear});\n            this.createMonths(this.currentMonth, this.currentYear);\n        }\n    }\n\n    decrementYear() {\n        this.currentYear--;\n\n        if (this.yearNavigator && this.currentYear < this.yearOptions[0]) {\n            let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\n            this.populateYearOptions(this.yearOptions[0] - difference, this.yearOptions[this.yearOptions.length - 1] - difference);\n        }\n    }\n\n    incrementYear() {\n        this.currentYear++;\n\n        if (this.yearNavigator && this.currentYear > this.yearOptions[this.yearOptions.length - 1]) {\n            let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\n            this.populateYearOptions(this.yearOptions[0] + difference, this.yearOptions[this.yearOptions.length - 1] + difference);\n        }\n    }\n\n    onDateSelect(event, dateMeta) {\n        if (this.disabled || !dateMeta.selectable) {\n            event.preventDefault();\n            return;\n        }\n\n        if (this.isMultipleSelection() && this.isSelected(dateMeta)) {\n            this.value = this.value.filter((date, i) => {\n                return !this.isDateEquals(date, dateMeta);\n            });\n            if (this.value.length === 0) {\n                this.value = null;\n            }\n            this.updateModel(this.value);\n        }\n        else {\n            if (this.shouldSelectDate(dateMeta)) {\n                this.selectDate(dateMeta);\n            }\n        }\n\n        if (this.isSingleSelection() && this.hideOnDateTimeSelect) {\n            setTimeout(() => {\n                event.preventDefault();\n                this.hideOverlay();\n\n                if (this.mask) {\n                    this.disableModality();\n                }\n\n                this.cd.markForCheck();\n            }, 150);\n        }\n\n        this.updateInputfield();\n        event.preventDefault();\n    }\n\n    shouldSelectDate(dateMeta) {\n        if (this.isMultipleSelection())\n            return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;\n        else\n            return true;\n    }\n\n    onMonthSelect(event, index) {\n        if (!DomHandler.hasClass(event.target, 'p-disabled')) {\n            this.onDateSelect(event, {year: this.currentYear, month: index, day: 1, selectable: true});\n        }\n    }\n\n    updateInputfield() {\n        let formattedValue = '';\n\n        if (this.value) {\n            if (this.isSingleSelection()) {\n                formattedValue = this.formatDateTime(this.value);\n            }\n            else if (this.isMultipleSelection()) {\n                for (let i = 0; i < this.value.length; i++) {\n                    let dateAsString = this.formatDateTime(this.value[i]);\n                    formattedValue += dateAsString;\n                    if (i !== (this.value.length - 1)) {\n                        formattedValue += this.multipleSeparator+' ';\n                    }\n                }\n            }\n            else if (this.isRangeSelection()) {\n                if (this.value && this.value.length) {\n                    let startDate = this.value[0];\n                    let endDate = this.value[1];\n\n                    formattedValue = this.formatDateTime(startDate);\n                    if (endDate) {\n                        formattedValue += ' '+this.rangeSeparator +' ' + this.formatDateTime(endDate);\n                    }\n                }\n            }\n        }\n\n        this.inputFieldValue = formattedValue;\n        this.updateFilledState();\n        if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\n            this.inputfieldViewChild.nativeElement.value = this.inputFieldValue;\n        }\n    }\n\n    formatDateTime(date) {\n        let formattedValue = null;\n        if (date) {\n            if (this.timeOnly) {\n                formattedValue = this.formatTime(date);\n            }\n            else {\n                formattedValue = this.formatDate(date, this.getDateFormat());\n                if (this.showTime) {\n                    formattedValue += ' ' + this.formatTime(date);\n                }\n            }\n        }\n\n        return formattedValue;\n    }\n\n    setCurrentHourPM(hours: number) {\n        if (this.hourFormat == '12') {\n            this.pm = hours > 11;\n            if (hours >= 12) {\n                this.currentHour = (hours == 12) ? 12 : hours - 12;\n            }\n            else {\n                this.currentHour = (hours == 0) ? 12 : hours;\n            }\n        }\n        else {\n            this.currentHour = hours;\n        }\n    }\n\n    selectDate(dateMeta) {\n        let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n\n        if (this.showTime) {\n            if (this.hourFormat == '12') {\n                if (this.currentHour === 12)\n                    date.setHours(this.pm ? 12 : 0);\n                else\n                    date.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\n            }\n            else {\n                date.setHours(this.currentHour);\n            }\n\n            date.setMinutes(this.currentMinute);\n            date.setSeconds(this.currentSecond);\n        }\n\n        if (this.minDate && this.minDate > date) {\n            date = this.minDate;\n            this.setCurrentHourPM(date.getHours());\n            this.currentMinute = date.getMinutes();\n            this.currentSecond = date.getSeconds();\n        }\n\n        if (this.maxDate && this.maxDate < date) {\n            date = this.maxDate;\n            this.setCurrentHourPM(date.getHours());\n            this.currentMinute = date.getMinutes();\n            this.currentSecond = date.getSeconds();\n        }\n\n        if (this.isSingleSelection()) {\n            this.updateModel(date);\n        }\n        else if (this.isMultipleSelection()) {\n            this.updateModel(this.value ? [...this.value, date] : [date]);\n        }\n        else if (this.isRangeSelection()) {\n            if (this.value && this.value.length) {\n                let startDate = this.value[0];\n                let endDate = this.value[1];\n\n                if (!endDate && date.getTime() >= startDate.getTime()) {\n                    endDate = date;\n                }\n                else {\n                    startDate = date;\n                    endDate = null;\n                }\n\n                this.updateModel([startDate, endDate]);\n            }\n            else {\n                this.updateModel([date, null]);\n            }\n        }\n\n        this.onSelect.emit(date);\n    }\n\n    updateModel(value) {\n        this.value = value;\n\n        if (this.dataType == 'date') {\n            this.onModelChange(this.value);\n        }\n        else if (this.dataType == 'string') {\n            if (this.isSingleSelection()) {\n                this.onModelChange(this.formatDateTime(this.value));\n            }\n            else {\n                let stringArrValue = null;\n                if (this.value) {\n                    stringArrValue = this.value.map(date => this.formatDateTime(date));\n                }\n                this.onModelChange(stringArrValue);\n            }\n        }\n    }\n\n    getFirstDayOfMonthIndex(month: number, year: number) {\n        let day = new Date();\n        day.setDate(1);\n        day.setMonth(month);\n        day.setFullYear(year);\n\n        let dayIndex = day.getDay() + this.getSundayIndex();\n        return dayIndex >= 7 ? dayIndex - 7 : dayIndex;\n    }\n\n    getDaysCountInMonth(month: number, year: number) {\n        return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();\n    }\n\n    getDaysCountInPrevMonth(month: number, year: number) {\n        let prev = this.getPreviousMonthAndYear(month, year);\n        return this.getDaysCountInMonth(prev.month, prev.year);\n    }\n\n    getPreviousMonthAndYear(month: number, year: number) {\n        let m, y;\n\n        if (month === 0) {\n            m = 11;\n            y = year - 1;\n        }\n        else {\n            m = month - 1;\n            y = year;\n        }\n\n        return {'month':m,'year':y};\n    }\n\n    getNextMonthAndYear(month: number, year: number) {\n        let m, y;\n\n        if (month === 11) {\n            m = 0;\n            y = year + 1;\n        }\n        else {\n            m = month + 1;\n            y = year;\n        }\n\n        return {'month':m,'year':y};\n    }\n\n    getSundayIndex() {\n        return this.firstDayOfWeek > 0 ? 7 - this.firstDayOfWeek : 0;\n    }\n\n    isSelected(dateMeta): boolean {\n        if (this.value) {\n            if (this.isSingleSelection()) {\n                return this.isDateEquals(this.value, dateMeta);\n            }\n            else if (this.isMultipleSelection()) {\n                let selected = false;\n                for (let date of this.value) {\n                    selected = this.isDateEquals(date, dateMeta);\n                    if (selected) {\n                        break;\n                    }\n                }\n\n                return selected;\n            }\n            else if (this.isRangeSelection()) {\n                if (this.value[1])\n                    return this.isDateEquals(this.value[0], dateMeta) || this.isDateEquals(this.value[1], dateMeta) || this.isDateBetween(this.value[0], this.value[1], dateMeta);\n                else\n                    return this.isDateEquals(this.value[0], dateMeta)\n            }\n        }\n        else {\n            return false;\n        }\n    }\n\n    isMonthSelected(month: number): boolean {\n        let day = this.value ? (Array.isArray(this.value) ? this.value[0].getDate() : this.value.getDate()) : 1;\n        return this.isSelected({year: this.currentYear, month: month, day: day, selectable: true});\n    }\n\n    isDateEquals(value, dateMeta) {\n        if (value)\n            return value.getDate() === dateMeta.day && value.getMonth() === dateMeta.month && value.getFullYear() === dateMeta.year;\n        else\n            return false;\n    }\n\n    isDateBetween(start, end, dateMeta) {\n        let between : boolean = false;\n        if (start && end) {\n            let date: Date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n            return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();\n        }\n\n        return between;\n    }\n\n    isSingleSelection(): boolean {\n        return this.selectionMode === 'single';\n    }\n\n    isRangeSelection(): boolean {\n        return this.selectionMode === 'range';\n    }\n\n    isMultipleSelection(): boolean {\n        return this.selectionMode === 'multiple';\n    }\n\n    isToday(today, day, month, year): boolean {\n        return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;\n    }\n\n    isSelectable(day, month, year, otherMonth): boolean {\n        let validMin = true;\n        let validMax = true;\n        let validDate = true;\n        let validDay = true;\n\n        if (otherMonth && !this.selectOtherMonths) {\n            return false;\n        }\n\n        if (this.minDate) {\n             if (this.minDate.getFullYear() > year) {\n                 validMin = false;\n             }\n             else if (this.minDate.getFullYear() === year) {\n                 if (this.minDate.getMonth() > month) {\n                     validMin = false;\n                 }\n                 else if (this.minDate.getMonth() === month) {\n                     if (this.minDate.getDate() > day) {\n                         validMin = false;\n                     }\n                 }\n             }\n        }\n\n        if (this.maxDate) {\n             if (this.maxDate.getFullYear() < year) {\n                 validMax = false;\n             }\n             else if (this.maxDate.getFullYear() === year) {\n                 if (this.maxDate.getMonth() < month) {\n                     validMax = false;\n                 }\n                 else if (this.maxDate.getMonth() === month) {\n                     if (this.maxDate.getDate() < day) {\n                         validMax = false;\n                     }\n                 }\n             }\n        }\n\n        if (this.disabledDates) {\n           validDate = !this.isDateDisabled(day,month,year);\n        }\n\n        if (this.disabledDays) {\n           validDay = !this.isDayDisabled(day,month,year)\n        }\n\n        return validMin && validMax && validDate && validDay;\n    }\n\n    isDateDisabled(day:number, month:number, year:number):boolean {\n        if (this.disabledDates) {\n            for (let disabledDate of this.disabledDates) {\n                if (disabledDate.getFullYear() === year && disabledDate.getMonth() === month && disabledDate.getDate() === day) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    isDayDisabled(day:number, month:number, year:number):boolean {\n        if (this.disabledDays) {\n            let weekday = new Date(year, month, day);\n            let weekdayNumber = weekday.getDay();\n            return this.disabledDays.indexOf(weekdayNumber) !== -1;\n        }\n        return false;\n    }\n\n    onInputFocus(event: Event) {\n        this.focus = true;\n        if (this.showOnFocus) {\n            this.showOverlay();\n        }\n        this.onFocus.emit(event);\n    }\n\n    onInputClick() {\n        if (this.showOnFocus && !this.overlayVisible) {\n            this.showOverlay();\n        }\n    }\n\n    onInputBlur(event: Event) {\n        this.focus = false;\n        this.onBlur.emit(event);\n        if (!this.keepInvalid) {\n            this.updateInputfield();\n        }\n        this.onModelTouched();\n    }\n\n    onButtonClick(event, inputfield) {\n        if (!this.overlayVisible) {\n            inputfield.focus();\n            this.showOverlay();\n        }\n        else {\n            this.hideOverlay();\n        }\n    }\n\n    onOverlayClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.el.nativeElement\n        });\n    }\n\n    onPrevButtonClick(event) {\n        this.navigationState = {backward: true, button: true};\n        this.navBackward(event);\n    }\n\n    onNextButtonClick(event) {\n        this.navigationState = {backward: false, button: true};\n        this.navForward(event);\n    }\n\n    onContainerButtonKeydown(event) {\n        switch (event.which) {\n           //tab\n           case 9:\n                if (!this.inline) {\n                    this.trapFocus(event);\n                }\n           break;\n\n           //escape\n           case 27:\n               this.overlayVisible = false;\n               event.preventDefault();\n           break;\n\n           default:\n               //Noop\n           break;\n        }\n   }\n\n    onInputKeydown(event) {\n        this.isKeydown = true;\n        if (event.keyCode === 40 && this.contentViewChild) {\n            this.trapFocus(event);\n        }\n        else if (event.keyCode === 27) {\n            if (this.overlayVisible) {\n                this.overlayVisible = false;\n                event.preventDefault();\n            }\n        }\n        else if (event.keyCode === 13) {\n            if (this.overlayVisible) {\n                this.overlayVisible = false;\n                event.preventDefault();\n            }\n        }\n        else if (event.keyCode === 9 && this.contentViewChild) {\n            DomHandler.getFocusableElements(this.contentViewChild.nativeElement).forEach(el => el.tabIndex = '-1');\n            if (this.overlayVisible) {\n                this.overlayVisible = false;\n            }\n        }\n    }\n\n    onDateCellKeydown(event, date, groupIndex) {\n        const cellContent = event.currentTarget;\n        const cell = cellContent.parentElement;\n\n        switch (event.which) {\n            //down arrow\n            case 40: {\n                cellContent.tabIndex = '-1';\n                let cellIndex = DomHandler.index(cell);\n                let nextRow = cell.parentElement.nextElementSibling;\n                if (nextRow) {\n                    let focusCell = nextRow.children[cellIndex].children[0];\n                    if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                        this.navigationState = {backward: false};\n                        this.navForward(event);\n                    }\n                    else {\n                        nextRow.children[cellIndex].children[0].tabIndex = '0';\n                        nextRow.children[cellIndex].children[0].focus();\n                    }\n                }\n                else {\n                    this.navigationState = {backward: false};\n                    this.navForward(event);\n                }\n                event.preventDefault();\n                break;\n            }\n\n            //up arrow\n            case 38: {\n                cellContent.tabIndex = '-1';\n                let cellIndex = DomHandler.index(cell);\n                let prevRow = cell.parentElement.previousElementSibling;\n                if (prevRow) {\n                    let focusCell = prevRow.children[cellIndex].children[0];\n                    if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                        this.navigationState = {backward: true};\n                        this.navBackward(event);\n                    }\n                    else {\n                        focusCell.tabIndex = '0';\n                        focusCell.focus();\n                    }\n                }\n                else {\n                    this.navigationState = {backward: true};\n                    this.navBackward(event);\n                }\n                event.preventDefault();\n                break;\n            }\n\n            //left arrow\n            case 37: {\n                cellContent.tabIndex = '-1';\n                let prevCell = cell.previousElementSibling;\n                if (prevCell) {\n                    let focusCell = prevCell.children[0];\n                    if (DomHandler.hasClass(focusCell, 'p-disabled') || DomHandler.hasClass(focusCell.parentElement, 'p-datepicker-weeknumber')) {\n                        this.navigateToMonth(true, groupIndex);\n                    }\n                    else {\n                        focusCell.tabIndex = '0';\n                        focusCell.focus();\n                    }\n                }\n                else {\n                    this.navigateToMonth(true, groupIndex);\n                }\n                event.preventDefault();\n                break;\n            }\n\n            //right arrow\n            case 39: {\n                cellContent.tabIndex = '-1';\n                let nextCell = cell.nextElementSibling;\n                if (nextCell) {\n                    let focusCell = nextCell.children[0];\n                    if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                        this.navigateToMonth(false, groupIndex);\n                    }\n                    else {\n                        focusCell.tabIndex = '0';\n                        focusCell.focus();\n                    }\n                }\n                else {\n                    this.navigateToMonth(false, groupIndex);\n                }\n                event.preventDefault();\n                break;\n            }\n\n            //enter\n            case 13: {\n                this.onDateSelect(event, date);\n                event.preventDefault();\n                break;\n            }\n\n            //escape\n            case 27: {\n                this.overlayVisible = false;\n                event.preventDefault();\n                break;\n            }\n\n            //tab\n            case 9: {\n                if (!this.inline) {\n                    this.trapFocus(event);\n                }\n                break;\n            }\n\n            default:\n                //no op\n            break;\n        }\n    }\n\n    onMonthCellKeydown(event, index) {\n        const cell = event.currentTarget;\n        switch (event.which) {\n            //arrows\n            case 38:\n            case 40: {\n                cell.tabIndex = '-1';\n                var cells = cell.parentElement.children;\n                var cellIndex = DomHandler.index(cell);\n                let nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex -3];\n                if (nextCell) {\n                    nextCell.tabIndex = '0';\n                    nextCell.focus();\n                }\n                event.preventDefault();\n                break;\n            }\n\n            //left arrow\n            case 37: {\n                cell.tabIndex = '-1';\n                let prevCell = cell.previousElementSibling;\n                if (prevCell) {\n                    prevCell.tabIndex = '0';\n                    prevCell.focus();\n                }\n                event.preventDefault();\n                break;\n            }\n\n            //right arrow\n            case 39: {\n                cell.tabIndex = '-1';\n                let nextCell = cell.nextElementSibling;\n                if (nextCell) {\n                    nextCell.tabIndex = '0';\n                    nextCell.focus();\n                }\n                event.preventDefault();\n                break;\n            }\n\n            //enter\n            case 13: {\n                this.onMonthSelect(event, index);\n                event.preventDefault();\n                break;\n            }\n\n            //escape\n            case 27: {\n                this.overlayVisible = false;\n                event.preventDefault();\n                break;\n            }\n\n            //tab\n            case 9: {\n                if (!this.inline) {\n                    this.trapFocus(event);\n                }\n                break;\n            }\n\n            default:\n                //no op\n            break;\n        }\n    }\n\n    navigateToMonth(prev, groupIndex) {\n        if (prev) {\n            if (this.numberOfMonths === 1 || (groupIndex === 0)) {\n                this.navigationState = {backward: true};\n                this.navBackward(event);\n            }\n            else {\n                let prevMonthContainer = this.contentViewChild.nativeElement.children[groupIndex - 1];\n                let cells = DomHandler.find(prevMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                let focusCell = cells[cells.length - 1];\n                focusCell.tabIndex = '0';\n                focusCell.focus();\n            }\n        }\n        else {\n            if (this.numberOfMonths === 1 || (groupIndex === this.numberOfMonths - 1)) {\n                this.navigationState = {backward: false};\n                this.navForward(event);\n            }\n            else {\n                let nextMonthContainer = this.contentViewChild.nativeElement.children[groupIndex + 1];\n                let focusCell = DomHandler.findSingle(nextMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                focusCell.tabIndex = '0';\n                focusCell.focus();\n            }\n        }\n    }\n\n    updateFocus() {\n        let cell;\n        if (this.navigationState) {\n            if (this.navigationState.button) {\n                this.initFocusableCell();\n\n                if (this.navigationState.backward)\n                    DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-prev').focus();\n                else\n                    DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-next').focus();\n            }\n            else {\n                if (this.navigationState.backward) {\n                    let cells = DomHandler.find(this.contentViewChild.nativeElement, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                    cell = cells[cells.length - 1];\n                }\n                else {\n                    cell = DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                }\n\n                if (cell) {\n                    cell.tabIndex = '0';\n                    cell.focus();\n                }\n            }\n\n            this.navigationState = null;\n        }\n        else {\n            this.initFocusableCell();\n        }\n    }\n\n    initFocusableCell() {\n        let cell;\n        if (this.view === 'month') {\n            let cells = DomHandler.find(this.contentViewChild.nativeElement, '.p-monthpicker .p-monthpicker-month:not(.p-disabled)');\n            let selectedCell= DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-monthpicker .p-monthpicker-month.p-highlight');\n            cells.forEach(cell => cell.tabIndex = -1);\n            cell = selectedCell || cells[0];\n\n            if (cells.length === 0) {\n                let disabledCells = DomHandler.find(this.contentViewChild.nativeElement, '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = \"0\"]');\n                disabledCells.forEach(cell => cell.tabIndex = -1);\n            }\n        }\n        else {\n            cell = DomHandler.findSingle(this.contentViewChild.nativeElement, 'span.p-highlight');\n            if (!cell) {\n                let todayCell = DomHandler.findSingle(this.contentViewChild.nativeElement, 'td.p-datepicker-today span:not(.p-disabled):not(.p-ink)');\n                if (todayCell)\n                    cell = todayCell;\n                else\n                    cell = DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n            }\n        }\n\n        if (cell) {\n            cell.tabIndex = '0';\n        }\n    }\n\n    trapFocus(event) {\n        let focusableElements = DomHandler.getFocusableElements(this.contentViewChild.nativeElement);\n\n        if (focusableElements && focusableElements.length > 0) {\n            if (!focusableElements[0].ownerDocument.activeElement) {\n                focusableElements[0].focus();\n            }\n            else {\n                let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n\n                if (event.shiftKey) {\n                    if (focusedIndex == -1 || focusedIndex === 0) {\n                        if (this.focusTrap){\n                            focusableElements[focusableElements.length - 1].focus();\n                        }\n                        else {\n                            if (focusedIndex === -1)\n                                return this.hideOverlay();\n                            else if (focusedIndex === 0)\n                                return;\n                        }\n                    }\n                    else {\n                        focusableElements[focusedIndex - 1].focus();\n                    }\n                }\n                else {\n                    if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1)) {\n                        if (!this.focusTrap && focusedIndex != -1)\n                            return this.hideOverlay();\n                        else\n                            focusableElements[0].focus();\n                    }\n                    else {\n                        focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        }\n\n        event.preventDefault();\n    }\n\n    onMonthDropdownChange(m: string) {\n        this.currentMonth = parseInt(m);\n        this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n        this.createMonths(this.currentMonth, this.currentYear);\n    }\n\n    onYearDropdownChange(y: string) {\n        this.currentYear = parseInt(y);\n        this.onYearChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n        this.createMonths(this.currentMonth, this.currentYear);\n    }\n\n    convertTo24Hour = function (hours: number, pm: boolean) {\n        if (this.hourFormat == '12') {\n            if (hours === 12) {\n                return (pm ? 12 : 0);\n            } else {\n                return (pm ? hours + 12 : hours);\n            }\n        }\n        return hours;\n    }\n\n    validateTime(hour: number, minute: number, second: number, pm: boolean) {\n        let value = this.value;\n        const convertedHour = this.convertTo24Hour(hour, pm);\n        if (this.isRangeSelection()) {\n            value = this.value[1] || this.value[0];\n        }\n        if (this.isMultipleSelection()) {\n            value = this.value[this.value.length - 1];\n        }\n        const valueDateString = value ? value.toDateString() : null;\n        if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {\n            if (this.minDate.getHours() > convertedHour) {\n                return false;\n            }\n            if (this.minDate.getHours() === convertedHour) {\n                if (this.minDate.getMinutes() > minute) {\n                    return false;\n                }\n                if (this.minDate.getMinutes() === minute) {\n                    if (this.minDate.getSeconds() > second) {\n                        return false;\n                    }\n                }\n            }\n        }\n\n      if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {\n            if (this.maxDate.getHours() < convertedHour) {\n                return false;\n            }\n            if (this.maxDate.getHours() === convertedHour) {\n                if (this.maxDate.getMinutes() < minute) {\n                    return false;\n                }\n                if (this.maxDate.getMinutes() === minute) {\n                  if (this.maxDate.getSeconds() < second) {\n                      return false;\n                  }\n                }\n            }\n        }\n        return true;\n    }\n\n\n    incrementHour(event) {\n        const prevHour = this.currentHour;\n        let newHour = this.currentHour + this.stepHour;\n        let newPM = this.pm;\n\n        if (this.hourFormat == '24')\n            newHour = (newHour >= 24) ? (newHour - 24) : newHour;\n        else if (this.hourFormat == '12') {\n            // Before the AM/PM break, now after\n            if (prevHour < 12 && newHour > 11) {\n                newPM= !this.pm;\n            }\n            newHour = (newHour >= 13) ? (newHour - 12) : newHour;\n        }\n\n        if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n          this.currentHour = newHour;\n          this.pm = newPM;\n        }\n        event.preventDefault();\n    }\n\n    onTimePickerElementMouseDown(event: Event, type: number, direction: number) {\n        if (!this.disabled) {\n            this.repeat(event, null, type, direction);\n            event.preventDefault();\n        }\n    }\n\n    onTimePickerElementMouseUp(event: Event) {\n        if (!this.disabled) {\n            this.clearTimePickerTimer();\n            this.updateTime();\n        }\n    }\n\n    onTimePickerElementMouseLeave() {\n        if (!this.disabled && this.timePickerTimer) {\n            this.clearTimePickerTimer();\n            this.updateTime();\n        }\n    }\n\n    repeat(event: Event, interval: number, type: number, direction: number) {\n        let i = interval||500;\n\n        this.clearTimePickerTimer();\n        this.timePickerTimer = setTimeout(() => {\n            this.repeat(event, 100, type, direction);\n            this.cd.markForCheck();\n        }, i);\n\n        switch(type) {\n            case 0:\n                if (direction === 1)\n                    this.incrementHour(event);\n                else\n                    this.decrementHour(event);\n            break;\n\n            case 1:\n                if (direction === 1)\n                    this.incrementMinute(event);\n                else\n                    this.decrementMinute(event);\n            break;\n\n            case 2:\n                if (direction === 1)\n                    this.incrementSecond(event);\n                else\n                    this.decrementSecond(event);\n            break;\n        }\n\n        this.updateInputfield();\n    }\n\n    clearTimePickerTimer() {\n        if (this.timePickerTimer) {\n            clearTimeout(this.timePickerTimer);\n            this.timePickerTimer = null;\n        }\n    }\n\n    decrementHour(event) {\n        let newHour = this.currentHour - this.stepHour;\n        let newPM = this.pm\n\n        if (this.hourFormat == '24')\n            newHour = (newHour < 0) ? (24 + newHour) : newHour;\n        else if (this.hourFormat == '12') {\n            // If we were at noon/midnight, then switch\n            if (this.currentHour === 12) {\n                newPM = !this.pm;\n            }\n            newHour = (newHour <= 0) ? (12 + newHour) : newHour;\n        }\n\n        if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n          this.currentHour = newHour;\n          this.pm = newPM;\n        }\n\n        event.preventDefault();\n    }\n\n    incrementMinute(event) {\n        let newMinute = this.currentMinute + this.stepMinute;\n        newMinute = (newMinute > 59) ? newMinute - 60 : newMinute;\n        if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\n            this.currentMinute = newMinute;\n        }\n\n        event.preventDefault();\n    }\n\n    decrementMinute(event) {\n        let newMinute = this.currentMinute - this.stepMinute;\n        newMinute = (newMinute < 0) ? 60 + newMinute : newMinute;\n        if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\n            this.currentMinute = newMinute;\n        }\n\n        event.preventDefault();\n    }\n\n    incrementSecond(event) {\n        let newSecond = this.currentSecond + this.stepSecond;\n        newSecond = (newSecond > 59) ? newSecond - 60 : newSecond;\n        if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\n            this.currentSecond = newSecond;\n        }\n\n        event.preventDefault();\n    }\n\n    decrementSecond(event) {\n        let newSecond = this.currentSecond - this.stepSecond;\n        newSecond = (newSecond < 0) ? 60 + newSecond : newSecond;\n        if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\n            this.currentSecond = newSecond;\n        }\n\n        event.preventDefault();\n    }\n\n    updateTime() {\n        let value = this.value;\n        if (this.isRangeSelection()) {\n            value = this.value[1] || this.value[0];\n        }\n        if (this.isMultipleSelection()) {\n            value = this.value[this.value.length - 1];\n        }\n        value = value ? new Date(value.getTime()) : new Date();\n\n        if (this.hourFormat == '12') {\n            if (this.currentHour === 12)\n                value.setHours(this.pm ? 12 : 0);\n            else\n                value.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\n        }\n        else {\n            value.setHours(this.currentHour);\n        }\n\n        value.setMinutes(this.currentMinute);\n        value.setSeconds(this.currentSecond);\n        if (this.isRangeSelection()) {\n            if (this.value[1])\n                value = [this.value[0], value];\n            else\n                value = [value, null];\n        }\n\n        if (this.isMultipleSelection()){\n            value = [...this.value.slice(0, -1), value];\n        }\n\n        this.updateModel(value);\n        this.onSelect.emit(value);\n        this.updateInputfield();\n    }\n\n    toggleAMPM(event) {\n        const newPM = !this.pm;\n        if (this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, newPM)) {\n          this.pm = newPM;\n          this.updateTime();\n        }\n        event.preventDefault();\n    }\n\n    onUserInput(event) {\n        // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026\n        if (!this.isKeydown) {\n            return;\n        }\n        this.isKeydown = false;\n\n        let val = event.target.value;\n        try {\n            let value = this.parseValueFromString(val);\n            if (this.isValidSelection(value)) {\n                this.updateModel(value);\n                this.updateUI();\n            }\n        }\n        catch(err) {\n            //invalid date\n            this.updateModel(null);\n        }\n\n        this.filled = val != null && val.length;\n        this.onInput.emit(event);\n    }\n\n    isValidSelection(value): boolean {\n        let isValid = true;\n        if (this.isSingleSelection()) {\n            if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {\n                isValid = false;\n            }\n        } else if (value.every(v => this.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false))) {\n            if (this.isRangeSelection()) {\n                isValid = value.length > 1 && value[1] > value[0] ? true : false;\n            }\n        }\n        return isValid;\n    }\n\n    parseValueFromString(text: string): Date | Date[]{\n        if (!text || text.trim().length === 0) {\n            return null;\n        }\n\n        let value: any;\n\n        if (this.isSingleSelection()) {\n            value = this.parseDateTime(text);\n        }\n        else if (this.isMultipleSelection()) {\n            let tokens = text.split(this.multipleSeparator);\n            value = [];\n            for (let token of tokens) {\n                value.push(this.parseDateTime(token.trim()));\n            }\n        }\n        else if (this.isRangeSelection()) {\n            let tokens = text.split(' '+this.rangeSeparator +' ');\n            value = [];\n            for (let i = 0; i < tokens.length; i++) {\n                value[i] = this.parseDateTime(tokens[i].trim());\n            }\n        }\n\n        return value;\n    }\n\n    parseDateTime(text): Date {\n        let date: Date;\n        let parts: string[] = text.split(' ');\n\n        if (this.timeOnly) {\n            date = new Date();\n            this.populateTime(date, parts[0], parts[1]);\n        }\n        else {\n            const dateFormat = this.getDateFormat();\n            if (this.showTime) {\n                let ampm = this.hourFormat == '12' ? parts.pop() : null;\n                let timeString = parts.pop();\n\n                date = this.parseDate(parts.join(' '), dateFormat);\n                this.populateTime(date, timeString, ampm);\n            }\n            else {\n                 date = this.parseDate(text, dateFormat);\n            }\n        }\n\n        return date;\n    }\n\n    populateTime(value, timeString, ampm) {\n        if (this.hourFormat == '12' && !ampm) {\n            throw 'Invalid Time';\n        }\n\n        this.pm = (ampm === 'PM' || ampm === 'pm');\n        let time = this.parseTime(timeString);\n        value.setHours(time.hour);\n        value.setMinutes(time.minute);\n        value.setSeconds(time.second);\n    }\n\n    updateUI() {\n        let val = this.value||this.defaultDate||new Date();\n        if (Array.isArray(val)){\n            val = val[0];\n        }\n\n        this.currentMonth = val.getMonth();\n        this.currentYear = val.getFullYear();\n        this.createMonths(this.currentMonth, this.currentYear);\n\n        if (this.showTime||this.timeOnly) {\n            this.setCurrentHourPM(val.getHours());\n            this.currentMinute = val.getMinutes();\n            this.currentSecond = val.getSeconds();\n        }\n    }\n\n    showOverlay() {\n        if (!this.overlayVisible) {\n            this.updateUI();\n            this.overlayVisible = true;\n        }\n    }\n\n    hideOverlay() {\n        this.overlayVisible = false;\n        this.clearTimePickerTimer();\n\n        if (this.touchUI) {\n            this.disableModality();\n        }\n\n        this.cd.markForCheck();\n    }\n\n    toggle() {\n        if (!this.inline){\n            if (!this.overlayVisible) {\n                this.showOverlay();\n                this.inputfieldViewChild.nativeElement.focus();\n            }\n            else {\n                this.hideOverlay();\n            }\n        }\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'visible':\n            case 'visibleTouchUI':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        if (this.touchUI)\n                            ZIndexUtils.set('modal', this.overlay, this.baseZIndex || this.config.zIndex.modal);\n                        else\n                            ZIndexUtils.set('overlay', this.overlay, this.baseZIndex || this.config.zIndex.overlay);\n                    }\n\n                    this.alignOverlay();\n                    this.onShow.emit(event);\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n                this.onClose.emit(event);\n            break;\n        }\n    }\n\n    onOverlayAnimationDone(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'visible':\n            case 'visibleTouchUI':\n                if (!this.inline) {\n                    this.bindDocumentClickListener();\n                    this.bindDocumentResizeListener();\n                    this.bindScrollListener();\n                }\n            break;\n\n            case 'void':\n                if (this.autoZIndex) {\n                    ZIndexUtils.clear(event.element);\n                }\n            break\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n\n    alignOverlay() {\n        if (this.touchUI) {\n            this.enableModality(this.overlay);\n        }\n        else {\n            if (this.appendTo)\n                DomHandler.absolutePosition(this.overlay, this.inputfieldViewChild.nativeElement);\n            else\n                DomHandler.relativePosition(this.overlay, this.inputfieldViewChild.nativeElement);\n        }\n    }\n\n    enableModality(element) {\n        if (!this.mask) {\n            this.mask = document.createElement('div');\n            this.mask.style.zIndex = String(parseInt(element.style.zIndex) - 1);\n            let maskStyleClass = 'p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter';\n            DomHandler.addMultipleClasses(this.mask, maskStyleClass);\n\n\t\t\tthis.maskClickListener = this.renderer.listen(this.mask, 'click', (event: any) => {\n                this.disableModality();\n            });\n            document.body.appendChild(this.mask);\n            DomHandler.addClass(document.body, 'p-overflow-hidden');\n        }\n    }\n\n    disableModality() {\n        if (this.mask) {\n            DomHandler.addClass(this.mask, 'p-component-overlay-leave');\n            this.animationEndListener = this.destroyMask.bind(this);\n            this.mask.addEventListener('animationend', this.animationEndListener);\n        }\n    }\n\n    destroyMask() {\n        document.body.removeChild(this.mask);\n        let bodyChildren = document.body.children;\n        let hasBlockerMasks: boolean;\n        for (let i = 0; i < bodyChildren.length; i++) {\n            let bodyChild = bodyChildren[i];\n            if (DomHandler.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {\n                hasBlockerMasks = true;\n                break;\n            }\n        }\n\n        if (!hasBlockerMasks) {\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\n        }\n\n        this.unbindAnimationEndListener();\n        this.unbindMaskClickListener();\n        this.mask = null;\n    }\n\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n\t\t}\n    }\n\n    unbindAnimationEndListener() {\n        if (this.animationEndListener && this.mask) {\n            this.mask.removeEventListener('animationend', this.animationEndListener);\n            this.animationEndListener = null;\n        }\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n        if (this.value && typeof this.value === 'string') {\n            this.value = this.parseValueFromString(this.value);\n        }\n\n        this.updateInputfield();\n        this.updateUI();\n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    getDateFormat() {\n        return this.dateFormat||this.getTranslation('dateFormat');\n    }\n\n    // Ported from jquery-ui datepicker formatDate\n    formatDate(date, format) {\n        if (!date) {\n            return '';\n        }\n\n        let iFormat;\n        const lookAhead = (match) => {\n            const matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n            if (matches) {\n                iFormat++;\n            }\n            return matches;\n        },\n            formatNumber = (match, value, len) => {\n                let num = '' + value;\n                if (lookAhead(match)) {\n                    while (num.length < len) {\n                        num = '0' + num;\n                    }\n                }\n                return num;\n            },\n            formatName = (match, value, shortNames, longNames) => {\n                return (lookAhead(match) ? longNames[value] : shortNames[value]);\n            };\n        let output = '';\n        let literal = false;\n\n        if (date) {\n            for (iFormat = 0; iFormat < format.length; iFormat++) {\n                if (literal) {\n                    if (format.charAt(iFormat) === '\\'' && !lookAhead('\\'')) {\n                        literal = false;\n                    } else {\n                        output += format.charAt(iFormat);\n                    }\n                } else {\n                    switch (format.charAt(iFormat)) {\n                        case 'd':\n                            output += formatNumber('d', date.getDate(), 2);\n                            break;\n                        case 'D':\n                            output += formatName('D', date.getDay(), this.getTranslation(TranslationKeys.DAY_NAMES_SHORT), this.getTranslation(TranslationKeys.DAY_NAMES));\n                            break;\n                        case 'o':\n                            output += formatNumber('o',\n                            Math.round((\n                                new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() -\n                                new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);\n                            break;\n                        case 'm':\n                            output += formatNumber('m', date.getMonth() + 1, 2);\n                            break;\n                        case 'M':\n                            output += formatName('M',date.getMonth(), this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT), this.getTranslation(TranslationKeys.MONTH_NAMES));\n                            break;\n                        case 'y':\n                            output += lookAhead('y') ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + (date.getFullYear() % 100);\n                            break;\n                        case '@':\n                            output += date.getTime();\n                            break;\n                        case '!':\n                            output += date.getTime() * 10000 + this.ticksTo1970;\n                            break;\n                        case '\\'':\n                            if (lookAhead('\\'')) {\n                                output += '\\'';\n                            } else {\n                                literal = true;\n                            }\n                            break;\n                        default:\n                            output += format.charAt(iFormat);\n                    }\n                }\n            }\n        }\n        return output;\n    }\n\n    formatTime(date) {\n        if (!date) {\n            return '';\n        }\n\n        let output = '';\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let seconds = date.getSeconds();\n\n        if (this.hourFormat == '12' && hours > 11 && hours != 12) {\n            hours-=12;\n        }\n\n        if (this.hourFormat == '12') {\n            output += hours === 0 ? 12 : (hours < 10) ? '0' + hours : hours;\n        } else {\n            output += (hours < 10) ? '0' + hours : hours;\n        }\n        output += ':';\n        output += (minutes < 10) ? '0' + minutes : minutes;\n\n        if (this.showSeconds) {\n            output += ':';\n            output += (seconds < 10) ? '0' + seconds : seconds;\n        }\n\n        if (this.hourFormat == '12') {\n            output += date.getHours() > 11 ? ' PM' : ' AM';\n        }\n\n        return output;\n    }\n\n    parseTime(value) {\n        let tokens: string[] = value.split(':');\n        let validTokenLength = this.showSeconds ? 3 : 2;\n\n        if (tokens.length !== validTokenLength) {\n            throw \"Invalid time\";\n        }\n\n        let h = parseInt(tokens[0]);\n        let m = parseInt(tokens[1]);\n        let s = this.showSeconds ? parseInt(tokens[2]) : null;\n\n        if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || (this.hourFormat == '12' && h > 12) || (this.showSeconds && (isNaN(s) || s > 59))) {\n            throw \"Invalid time\";\n        }\n        else {\n            if (this.hourFormat == '12') {\n                if (h !== 12 && this.pm) {\n                    h += 12;\n                }\n                else if (!this.pm && h === 12) {\n                    h -= 12;\n                }\n            }\n\n            return {hour: h, minute: m, second: s};\n        }\n    }\n\n    // Ported from jquery-ui datepicker parseDate\n    parseDate(value, format) {\n        if (format == null || value == null) {\n            throw \"Invalid arguments\";\n        }\n\n        value = (typeof value === \"object\" ? value.toString() : value + \"\");\n        if (value === \"\") {\n            return null;\n        }\n\n        let iFormat, dim, extra,\n        iValue = 0,\n        shortYearCutoff = (typeof this.shortYearCutoff !== \"string\" ? this.shortYearCutoff : new Date().getFullYear() % 100 + parseInt(this.shortYearCutoff, 10)),\n        year = -1,\n        month = -1,\n        day = -1,\n        doy = -1,\n        literal = false,\n        date,\n        lookAhead = (match) => {\n            let matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n            if (matches) {\n                iFormat++;\n            }\n            return matches;\n        },\n        getNumber = (match) => {\n            let isDoubled = lookAhead(match),\n                size = (match === \"@\" ? 14 : (match === \"!\" ? 20 :\n                (match === \"y\" && isDoubled ? 4 : (match === \"o\" ? 3 : 2)))),\n                minSize = (match === \"y\" ? size : 1),\n                digits = new RegExp(\"^\\\\d{\" + minSize + \",\" + size + \"}\"),\n                num = value.substring(iValue).match(digits);\n            if (!num) {\n                throw \"Missing number at position \" + iValue;\n            }\n            iValue += num[ 0 ].length;\n            return parseInt(num[ 0 ], 10);\n        },\n        getName = (match, shortNames, longNames) => {\n            let index = -1;\n            let arr = lookAhead(match) ? longNames : shortNames;\n            let names = [];\n\n            for (let i = 0; i < arr.length; i++) {\n                names.push([i,arr[i]]);\n            }\n            names.sort((a,b) => {\n                return -(a[ 1 ].length - b[ 1 ].length);\n            });\n\n            for (let i = 0; i < names.length; i++) {\n                let name = names[i][1];\n                if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\n                    index = names[i][0];\n                    iValue += name.length;\n                    break;\n                }\n            }\n\n            if (index !== -1) {\n                return index + 1;\n            } else {\n                throw \"Unknown name at position \" + iValue;\n            }\n        },\n        checkLiteral = () => {\n            if (value.charAt(iValue) !== format.charAt(iFormat)) {\n                throw \"Unexpected literal at position \" + iValue;\n            }\n            iValue++;\n        };\n\n        if (this.view === 'month') {\n            day = 1;\n        }\n\n        for (iFormat = 0; iFormat < format.length; iFormat++) {\n            if (literal) {\n                if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n                    literal = false;\n                } else {\n                    checkLiteral();\n                }\n            } else {\n                switch (format.charAt(iFormat)) {\n                    case \"d\":\n                        day = getNumber(\"d\");\n                        break;\n                    case \"D\":\n                        getName(\"D\", this.getTranslation(TranslationKeys.DAY_NAMES_SHORT), this.getTranslation(TranslationKeys.DAY_NAMES));\n                        break;\n                    case \"o\":\n                        doy = getNumber(\"o\");\n                        break;\n                    case \"m\":\n                        month = getNumber(\"m\");\n                        break;\n                    case \"M\":\n                        month = getName(\"M\", this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT), this.getTranslation(TranslationKeys.MONTH_NAMES));\n                        break;\n                    case \"y\":\n                        year = getNumber(\"y\");\n                        break;\n                    case \"@\":\n                        date = new Date(getNumber(\"@\"));\n                        year = date.getFullYear();\n                        month = date.getMonth() + 1;\n                        day = date.getDate();\n                        break;\n                    case \"!\":\n                        date = new Date((getNumber(\"!\") - this.ticksTo1970) / 10000);\n                        year = date.getFullYear();\n                        month = date.getMonth() + 1;\n                        day = date.getDate();\n                        break;\n                    case \"'\":\n                        if (lookAhead(\"'\")) {\n                            checkLiteral();\n                        } else {\n                            literal = true;\n                        }\n                        break;\n                    default:\n                        checkLiteral();\n                }\n            }\n        }\n\n        if (iValue < value.length) {\n            extra = value.substr(iValue);\n            if (!/^\\s+/.test(extra)) {\n                throw \"Extra/unparsed characters found in date: \" + extra;\n            }\n        }\n\n        if (year === -1) {\n            year = new Date().getFullYear();\n        } else if (year < 100) {\n            year += new Date().getFullYear() - new Date().getFullYear() % 100 +\n                (year <= shortYearCutoff ? 0 : -100);\n        }\n\n        if (doy > -1) {\n            month = 1;\n            day = doy;\n            do {\n                dim = this.getDaysCountInMonth(year, month - 1);\n                if (day <= dim) {\n                    break;\n                }\n                month++;\n                day -= dim;\n            } while (true);\n        }\n\n        date = this.daylightSavingAdjust(new Date(year, month - 1, day));\n                if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\n                    throw \"Invalid date\"; // E.g. 31/02/00\n                }\n\n        return date;\n    }\n\n    daylightSavingAdjust(date) {\n        if (!date) {\n            return null;\n        }\n\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n\n        return date;\n    }\n\n    updateFilledState() {\n        this.filled = this.inputFieldValue && this.inputFieldValue != '';\n    }\n\n    onTodayButtonClick(event) {\n        let date: Date = new Date();\n        let dateMeta = {day: date.getDate(), month: date.getMonth(), year: date.getFullYear(), otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear, today: true, selectable: true};\n\n        this.onDateSelect(event, dateMeta);\n        this.onTodayClick.emit(event);\n    }\n\n    onClearButtonClick(event) {\n        this.updateModel(null);\n        this.updateInputfield();\n        this.hideOverlay();\n        this.onClearClick.emit(event);\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.zone.runOutsideAngular(() => {\n                const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n                this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                    if (this.isOutsideClicked(event) && this.overlayVisible) {\n                        this.zone.run(() => {\n                            this.hideOverlay();\n                            this.onClickOutside.emit(event);\n\n                            this.cd.markForCheck();\n                        });\n                    }\n\n                });\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        if (!this.documentResizeListener && !this.touchUI) {\n            this.documentResizeListener = this.onWindowResize.bind(this);\n            window.addEventListener('resize', this.documentResizeListener);\n        }\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hideOverlay();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    isOutsideClicked(event: Event) {\n        return !(this.el.nativeElement.isSameNode(event.target) || this.isNavIconClicked(event) || \n                this.el.nativeElement.contains(event.target) || (this.overlay && this.overlay.contains(<Node> event.target)));\n    }\n\n    isNavIconClicked(event: Event) {\n        return (DomHandler.hasClass(event.target, 'p-datepicker-prev') || DomHandler.hasClass(event.target, 'p-datepicker-prev-icon')\n                || DomHandler.hasClass(event.target, 'p-datepicker-next') || DomHandler.hasClass(event.target, 'p-datepicker-next-icon'));\n    }\n\n    onWindowResize() {\n        if (this.overlayVisible && !DomHandler.isAndroid()) {\n            this.hideOverlay();\n        }\n    }\n\n    onOverlayHide() {\n        if (this.mask) {\n            this.destroyMask();\n        }\n\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n    }\n\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n\n        if (this.overlay && this.autoZIndex) {\n            ZIndexUtils.clear(this.overlay);\n        }\n\n        this.clearTimePickerTimer();\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,ButtonModule,SharedModule,RippleModule],\n    exports: [Calendar,ButtonModule,SharedModule],\n    declarations: [Calendar]\n})\nexport class CalendarModule { }\n","import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ContentChild,TemplateRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectUtils} from 'primeng/utils';\nimport {RippleModule} from 'primeng/ripple';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SELECTBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-selectButton',\n    template: `\n        <div [ngClass]=\"'p-selectbutton p-buttonset p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\"  role=\"group\">\n            <div *ngFor=\"let option of options; let i = index\" #btn class=\"p-button p-component\" [class]=\"option.styleClass\" role=\"button\" [attr.aria-pressed]=\"isSelected(option)\"\n                [ngClass]=\"{'p-highlight':isSelected(option),\n                        'p-disabled': disabled || isOptionDisabled(option),\n                        'p-button-icon-only': (option.icon && !getOptionLabel(option))}\"\n                (click)=\"onItemClick($event,option,i)\" (keydown.enter)=\"onItemClick($event,option,i)\"\n                [attr.title]=\"option.title\" [attr.aria-label]=\"option.label\" (blur)=\"onBlur()\" [attr.tabindex]=\"disabled ? null : tabindex\" [attr.aria-labelledby]=\"this.getOptionLabel(option)\" pRipple>\n                <ng-container *ngIf=\"!itemTemplate else customcontent\">\n                    <span [ngClass]=\"'p-button-icon p-button-icon-left'\" [class]=\"option.icon\" *ngIf=\"option.icon\"></span>\n                    <span class=\"p-button-label\">{{getOptionLabel(option)}}</span>\n                </ng-container>\n                <ng-template #customcontent>\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                </ng-template>\n            </div>\n        </div>\n    `,\n    providers: [SELECTBUTTON_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../button/button.css'],\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class SelectButton implements ControlValueAccessor {\n\n    @Input() options: any[];\n\n    @Input() optionLabel: string;\n\n    @Input() optionValue: string;\n\n    @Input() optionDisabled: string;\n\n    @Input() tabindex: number = 0;\n\n    @Input() multiple: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() disabled: boolean;\n\n    @Input() dataKey: string\n\n    @Output() onOptionClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @ContentChild(TemplateRef) itemTemplate;\n\n    value: any;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    constructor(public cd: ChangeDetectorRef) {}\n\n    getOptionLabel(option: any) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : (option.label != undefined ? option.label : option);\n    }\n\n    getOptionValue(option: any) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : (this.optionLabel || option.value === undefined ? option : option.value);\n    }\n\n    isOptionDisabled(option: any) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : (option.disabled !== undefined ? option.disabled : false);\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    onItemClick(event, option: any, index: number) {\n        if (this.disabled || this.isOptionDisabled(option)) {\n            return;\n        }\n\n        if (this.multiple) {\n            if (this.isSelected(option))\n                this.removeOption(option);\n            else\n                this.value = [...(this.value||[]), this.getOptionValue(option)];\n        }\n        else {\n            this.value = this.getOptionValue(option);\n        }\n\n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n\n        this.onModelChange(this.value);\n\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n\n    onBlur() {\n        this.onModelTouched();\n    }\n\n    removeOption(option: any): void {\n        this.value = this.value.filter(val => !ObjectUtils.equals(val, this.getOptionValue(option), this.dataKey));\n    }\n\n    isSelected(option: any) {\n        let selected = false;\n        let optionValue = this.getOptionValue(option);\n\n        if (this.multiple) {\n            if (this.value) {\n                for (let val of this.value) {\n                    if (ObjectUtils.equals(val, optionValue, this.dataKey)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            selected = ObjectUtils.equals(this.getOptionValue(option), this.value, this.dataKey);\n        }\n\n        return selected;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [SelectButton],\n    declarations: [SelectButton]\n})\nexport class SelectButtonModule { }\n","import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const TRISTATECHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TriStateCheckbox),\n  multi: true\n};\n\n@Component({\n    selector: 'p-triStateCheckbox',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'p-checkbox p-component': true,'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused}\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #input type=\"text\" [attr.id]=\"inputId\" [name]=\"name\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" (keyup)=\"onKeyup($event)\" (keydown)=\"onKeydown($event)\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [attr.aria-labelledby]=\"ariaLabelledBy\" inputmode=\"none\">\n            </div>\n            <div class=\"p-checkbox-box\" (click)=\"onClick($event,input)\"  role=\"checkbox\" [attr.aria-checked]=\"value === true\"\n                [ngClass]=\"{'p-highlight':value!=null,'p-disabled':disabled,'p-focus':focused}\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"value === true ? checkboxTrueIcon : value === false ? checkboxFalseIcon : ''\"></span>\n            </div>\n        </div>\n        <label class=\"p-checkbox-label\" (click)=\"onClick($event,input)\"\n               [ngClass]=\"{'p-checkbox-label-active':value!=null, 'p-disabled':disabled, 'p-checkbox-label-focus':focused}\"\n               *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [TRISTATECHECKBOX_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class TriStateCheckbox implements ControlValueAccessor  {\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    @Input() disabled: boolean;\n\n    @Input() name: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() label: string;\n\n    @Input() readonly: boolean;\n\n    @Input() checkboxTrueIcon: string = 'pi pi-check';\n\n    @Input() checkboxFalseIcon: string = 'pi pi-times';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    focused: boolean;\n\n    value: any;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    onClick(event: Event, input: HTMLInputElement) {\n        if (!this.disabled && !this.readonly) {\n            this.toggle(event);\n            this.focused = true;\n            input.focus();\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (event.keyCode == 32) {\n            event.preventDefault();\n        }\n    }\n\n    onKeyup(event: KeyboardEvent) {\n        if (event.keyCode == 32 && !this.readonly) {\n            this.toggle(event);\n            event.preventDefault();\n        }\n    }\n\n    toggle(event: Event) {\n        if (this.value == null || this.value == undefined)\n            this.value = true;\n        else if (this.value == true)\n            this.value = false;\n        else if (this.value == false)\n            this.value = null;\n\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        })\n    }\n\n    onFocus() {\n        this.focused = true;\n    }\n\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n\n    setDisabledState(disabled: boolean): void {\n        this.disabled = disabled;\n        this.cd.markForCheck();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [TriStateCheckbox],\n    declarations: [TriStateCheckbox]\n})\nexport class TriStateCheckboxModule { }\n","import { NgModule, Component, HostListener, OnInit, OnDestroy, AfterViewInit, Directive, Optional, AfterContentInit,\n    Input, Output, EventEmitter, ElementRef, ContentChildren, TemplateRef, QueryList, ViewChild, NgZone, ChangeDetectorRef, OnChanges, SimpleChanges, ChangeDetectionStrategy, Query, ViewEncapsulation, Renderer2} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { PrimeTemplate, SharedModule, FilterMatchMode, FilterOperator, SelectItem, PrimeNGConfig, TranslationKeys, FilterService, OverlayService } from 'primeng/api';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport { CalendarModule } from 'primeng/calendar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils, UniqueComponentId, ZIndexUtils } from 'primeng/utils';\nimport { SortMeta } from 'primeng/api';\nimport { TableState } from 'primeng/api';\nimport { FilterMetadata } from 'primeng/api';\nimport { Injectable } from '@angular/core';\nimport { BlockableUI } from 'primeng/api';\nimport { Subject, Subscription } from 'rxjs';\nimport { ScrollingModule, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {trigger,style,transition,animate,AnimationEvent} from '@angular/animations';\n\n@Injectable()\nexport class TableService {\n\n    private sortSource = new Subject<SortMeta|SortMeta[]>();\n    private selectionSource = new Subject();\n    private contextMenuSource = new Subject<any>();\n    private valueSource = new Subject<any>();\n    private totalRecordsSource = new Subject<any>();\n    private columnsSource = new Subject();\n    private resetSource = new Subject();\n\n    sortSource$ = this.sortSource.asObservable();\n    selectionSource$ = this.selectionSource.asObservable();\n    contextMenuSource$ = this.contextMenuSource.asObservable();\n    valueSource$ = this.valueSource.asObservable();\n    totalRecordsSource$ = this.totalRecordsSource.asObservable();\n    columnsSource$ = this.columnsSource.asObservable();\n    resetSource$ = this.resetSource.asObservable();\n\n    onSort(sortMeta: SortMeta|SortMeta[]) {\n        this.sortSource.next(sortMeta);\n    }\n\n    onSelectionChange() {\n        this.selectionSource.next(null);\n    }\n\n    onResetChange() {\n        this.resetSource.next(null);\n    }\n\n    onContextMenu(data: any) {\n        this.contextMenuSource.next(data);\n    }\n\n    onValueChange(value: any) {\n        this.valueSource.next(value);\n    }\n\n    onTotalRecordsChange(value: number) {\n        this.totalRecordsSource.next(value);\n    }\n\n    onColumnsChange(columns: any[]) {\n        this.columnsSource.next(columns);\n    }\n}\n\n@Component({\n    selector: 'p-table',\n    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-scrollable-vertical': scrollable && scrollDirection === 'vertical',\n                'p-datatable-scrollable-horizontal': scrollable && scrollDirection === 'horizontal',\n                'p-datatable-scrollable-both': scrollable && scrollDirection === 'both',\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive-stack': responsiveLayout === 'stack',\n                'p-datatable-responsive-scroll': responsiveLayout === 'scroll',\n                'p-datatable-responsive': responsive,\n                'p-datatable-grouped-header': headerGroupedTemplate != null,\n                'p-datatable-grouped-footer': footerGroupedTemplate != null}\" [attr.id]=\"id\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showJumpToPageInput]=\"showJumpToPageInput\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div #wrapper class=\"p-datatable-wrapper\" [ngStyle]=\"{height: scrollHeight}\">\n                <table #table *ngIf=\"!virtualScroll\" role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\" [attr.id]=\"id+'-table'\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozenBodyTemplate\" [frozen]=\"true\"></tbody>\n                    <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll\" [itemSize]=\"virtualRowHeight\" tabindex=\"0\" [style.height]=\"scrollHeight !== 'flex' ? scrollHeight : undefined\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                    <table #table role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\" [attr.id]=\"id+'-table'\">\n                        <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                        <thead #tableHeader class=\"p-datatable-thead\">\n                            <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                        </thead>\n                        <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\" [frozen]=\"true\"></tbody>\n                        <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                        <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                            <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                        </tfoot>\n                    </table>\n                </cdk-virtual-scroll-viewport>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showJumpToPageInput]=\"showJumpToPageInput\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `,\n    providers: [TableService],\n    changeDetection: ChangeDetectionStrategy.Default,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./table.css'],\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class Table implements OnInit, AfterViewInit, AfterContentInit, BlockableUI, OnChanges {\n\n    @Input() frozenColumns: any[];\n\n    @Input() frozenValue: any[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() tableStyle: any;\n\n    @Input() tableStyleClass: string;\n\n    @Input() paginator: boolean;\n\n    @Input() pageLinks: number = 5;\n\n    @Input() rowsPerPageOptions: any[];\n\n    @Input() alwaysShowPaginator: boolean = true;\n\n    @Input() paginatorPosition: string = 'bottom';\n\n    @Input() paginatorDropdownAppendTo: any;\n\n    @Input() paginatorDropdownScrollHeight: string = '200px';\n\n    @Input() currentPageReportTemplate: string = '{currentPage} of {totalPages}';\n\n    @Input() showCurrentPageReport: boolean;\n\n    @Input() showJumpToPageDropdown: boolean;\n\n    @Input() showJumpToPageInput: boolean;\n\n    @Input() showFirstLastIcon: boolean = true;\n\n    @Input() showPageLinks: boolean = true;\n\n    @Input() defaultSortOrder: number = 1;\n\n    @Input() sortMode: string = 'single';\n\n    @Input() resetPageOnSort: boolean = true;\n\n    @Input() selectionMode: string;\n\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() contextMenuSelection: any;\n\n    @Output() contextMenuSelectionChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() contextMenuSelectionMode: string = \"separate\";\n\n    @Input() dataKey: string;\n\n    @Input() metaKeySelection: boolean;\n\n    @Input() rowTrackBy: Function = (index: number, item: any) => item;\n\n    @Input() lazy: boolean = false;\n\n    @Input() lazyLoadOnInit: boolean = true;\n\n    @Input() compareSelectionBy: string = 'deepEquals';\n\n    @Input() csvSeparator: string = ',';\n\n    @Input() exportFilename: string = 'download';\n\n    @Input() filters: { [s: string]: FilterMetadata | FilterMetadata[] } = {};\n\n    @Input() globalFilterFields: string[];\n\n    @Input() filterDelay: number = 300;\n\n    @Input() filterLocale: string;\n\n    @Input() expandedRowKeys: { [s: string]: boolean; } = {};\n\n    @Input() editingRowKeys: { [s: string]: boolean; } = {};\n\n    @Input() rowExpandMode: string = 'multiple';\n\n    @Input() scrollable: boolean;\n\n    @Input() scrollDirection: string = \"vertical\";\n\n    @Input() rowGroupMode: string;\n\n    @Input() scrollHeight: string;\n\n    @Input() virtualScroll: boolean;\n\n    @Input() virtualScrollDelay: number = 250;\n\n    @Input() virtualRowHeight: number = 28;\n\n    @Input() frozenWidth: string;\n\n    @Input() responsive: boolean;\n\n    @Input() contextMenu: any;\n\n    @Input() resizableColumns: boolean;\n\n    @Input() columnResizeMode: string = 'fit';\n\n    @Input() reorderableColumns: boolean;\n\n    @Input() loading: boolean;\n\n    @Input() loadingIcon: string = 'pi pi-spinner';\n\n    @Input() showLoader: boolean = true;\n\n    @Input() rowHover: boolean;\n\n    @Input() customSort: boolean;\n\n    @Input() showInitialSortBadge: boolean = true;\n\n    @Input() autoLayout: boolean;\n\n    @Input() exportFunction;\n\n    @Input() stateKey: string;\n\n    @Input() stateStorage: string = 'session';\n\n    @Input() editMode: string = 'cell';\n\n    @Input() groupRowsBy: any;\n\n    @Input() groupRowsByOrder: number = 1;\n\n    @Input() minBufferPx: number;\n\n    @Input() maxBufferPx: number;\n\n    @Input() responsiveLayout: string = 'stack';\n\n    @Input() breakpoint: string = '960px';\n\n    @Output() onRowSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRowUnselect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onPage: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSort: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFilter: EventEmitter<any> = new EventEmitter();\n\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRowExpand: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRowCollapse: EventEmitter<any> = new EventEmitter();\n\n    @Output() onContextMenuSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onColResize: EventEmitter<any> = new EventEmitter();\n\n    @Output() onColReorder: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRowReorder: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditInit: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditComplete: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditCancel: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHeaderCheckboxToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() sortFunction: EventEmitter<any> = new EventEmitter();\n\n    @Output() firstChange: EventEmitter<number> = new EventEmitter();\n\n    @Output() rowsChange: EventEmitter<number> = new EventEmitter();\n\n    @Output() onStateSave: EventEmitter<any> = new EventEmitter();\n\n    @Output() onStateRestore: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('resizeHelper') resizeHelperViewChild: ElementRef;\n\n    @ViewChild('reorderIndicatorUp') reorderIndicatorUpViewChild: ElementRef;\n\n    @ViewChild('reorderIndicatorDown') reorderIndicatorDownViewChild: ElementRef;\n\n    @ViewChild('wrapper') wrapperViewChild: ElementRef;\n\n    @ViewChild('table') tableViewChild: ElementRef;\n\n    @ViewChild('tableHeader') tableHeaderViewChild: ElementRef;\n\n    @ViewChild(CdkVirtualScrollViewport) virtualScrollBody: CdkVirtualScrollViewport;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate>;\n\n    _value: any[] = [];\n\n    _columns: any[];\n\n    _totalRecords: number = 0;\n\n    _first: number = 0;\n\n    _rows: number;\n\n    filteredValue: any[];\n\n    headerTemplate: TemplateRef<any>;\n\n    headerGroupedTemplate: TemplateRef<any>;\n\n    bodyTemplate: TemplateRef<any>;\n\n    loadingBodyTemplate: TemplateRef<any>;\n\n    captionTemplate: TemplateRef<any>;\n\n    frozenRowsTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    footerGroupedTemplate: TemplateRef<any>;\n\n    summaryTemplate: TemplateRef<any>;\n\n    colGroupTemplate: TemplateRef<any>;\n\n    expandedRowTemplate: TemplateRef<any>;\n\n    groupHeaderTemplate: TemplateRef<any>;\n\n    groupFooterTemplate: TemplateRef<any>;\n\n    rowspanTemplate: TemplateRef<any>;\n\n    frozenExpandedRowTemplate: TemplateRef<any>;\n\n    frozenHeaderTemplate: TemplateRef<any>;\n\n    frozenBodyTemplate: TemplateRef<any>;\n\n    frozenFooterTemplate: TemplateRef<any>;\n\n    frozenColGroupTemplate: TemplateRef<any>;\n\n    emptyMessageTemplate: TemplateRef<any>;\n\n    paginatorLeftTemplate: TemplateRef<any>;\n\n    paginatorRightTemplate: TemplateRef<any>;\n\n    paginatorDropdownItemTemplate: TemplateRef<any>;\n\n    selectionKeys: any = {};\n\n    lastResizerHelperX: number;\n\n    reorderIconWidth: number;\n\n    reorderIconHeight: number;\n\n    draggedColumn: any;\n\n    draggedRowIndex: number;\n\n    droppedRowIndex: number;\n\n    rowDragging: boolean;\n\n    dropPosition: number;\n\n    editingCell: Element;\n\n    editingCellData: any;\n\n    editingCellField: any;\n\n    editingCellRowIndex: number;\n\n    selfClick: boolean;\n\n    documentEditListener: any;\n\n    _multiSortMeta: SortMeta[];\n\n    _sortField: string;\n\n    _sortOrder: number = 1;\n\n    preventSelectionSetterPropagation: boolean;\n\n    _selection: any;\n\n    anchorRowIndex: number;\n\n    rangeRowIndex: number;\n\n    filterTimeout: any;\n\n    initialized: boolean;\n\n    rowTouched: boolean;\n\n    restoringSort: boolean;\n\n    restoringFilter: boolean;\n\n    stateRestored: boolean;\n\n    columnOrderStateRestored: boolean;\n\n    columnWidthsState: string;\n\n    tableWidthState: string;\n\n    overlaySubscription: Subscription;\n\n    virtualScrollSubscription: Subscription;\n\n    resizeColumnElement;\n\n    columnResizing: boolean = false;\n\n    rowGroupHeaderStyleObject: any = {};\n\n    id: string = UniqueComponentId();\n\n    styleElement: any;\n\n    responsiveStyleElement: any;\n\n    constructor(public el: ElementRef, public zone: NgZone, public tableService: TableService, public cd: ChangeDetectorRef, public filterService: FilterService, public overlayService: OverlayService) {}\n\n    ngOnInit() {\n        if (this.lazy && this.lazyLoadOnInit) {\n            if (!this.virtualScroll) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n\n            if (this.restoringFilter) {\n                this.restoringFilter = false;\n            }\n        }\n\n        if (this.responsiveLayout === 'stack' && !this.scrollable) {\n            this.createResponsiveStyle();\n        }\n\n        this.initialized = true;\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'caption':\n                    this.captionTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'headergrouped':\n                    this.headerGroupedTemplate = item.template;\n                break;\n\n                case 'body':\n                    this.bodyTemplate = item.template;\n                break;\n\n                case 'loadingbody':\n                    this.loadingBodyTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                case 'footergrouped':\n                    this.footerGroupedTemplate = item.template;\n                break;\n\n                case 'summary':\n                    this.summaryTemplate = item.template;\n                break;\n\n                case 'colgroup':\n                    this.colGroupTemplate = item.template;\n                break;\n\n                case 'rowexpansion':\n                    this.expandedRowTemplate = item.template;\n                break;\n\n                case 'groupheader':\n                    this.groupHeaderTemplate = item.template;\n                break;\n\n                case 'rowspan':\n                    this.rowspanTemplate = item.template;\n                break;\n\n                case 'groupfooter':\n                    this.groupFooterTemplate = item.template;\n                break;\n\n                case 'frozenrows':\n                    this.frozenRowsTemplate = item.template;\n                break;\n\n                case 'frozenheader':\n                    this.frozenHeaderTemplate = item.template;\n                break;\n\n                case 'frozenbody':\n                    this.frozenBodyTemplate = item.template;\n                break;\n\n                case 'frozenfooter':\n                    this.frozenFooterTemplate = item.template;\n                break;\n\n                case 'frozencolgroup':\n                    this.frozenColGroupTemplate = item.template;\n                break;\n\n                case 'frozenrowexpansion':\n                    this.frozenExpandedRowTemplate = item.template;\n                break;\n\n                case 'emptymessage':\n                    this.emptyMessageTemplate = item.template;\n                break;\n\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                break;\n\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                break;\n\n                case 'paginatordropdownitem':\n                    this.paginatorDropdownItemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        if (this.isStateful() && this.resizableColumns) {\n            this.restoreColumnWidths();\n        }\n\n        if (this.scrollable && this.virtualScroll) {\n            this.virtualScrollSubscription =  this.virtualScrollBody.renderedRangeStream.subscribe(range => {\n                let top = range.start * this.virtualRowHeight * -1;\n                this.tableHeaderViewChild.nativeElement.style.top = top + 'px';\n            });\n        }\n    }\n\n    ngOnChanges(simpleChange: SimpleChanges) {\n        if (simpleChange.value) {\n            if (this.isStateful() && !this.stateRestored) {\n                this.restoreState();\n            }\n\n            this._value = simpleChange.value.currentValue;\n\n            if (!this.lazy) {\n                this.totalRecords = (this._value ? this._value.length : 0);\n\n                if (this.sortMode == 'single' && (this.sortField || this.groupRowsBy))\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && (this.multiSortMeta || this.groupRowsBy))\n                    this.sortMultiple();\n                else if (this.hasFilter())       //sort already filters\n                    this._filter();\n            }\n\n            this.tableService.onValueChange(simpleChange.value.currentValue);\n        }\n\n        if (simpleChange.columns) {\n            this._columns = simpleChange.columns.currentValue;\n            this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n\n            if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored ) {\n                this.restoreColumnOrder();\n            }\n        }\n\n        if (simpleChange.sortField) {\n            this._sortField = simpleChange.sortField.currentValue;\n\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if ( !this.lazy || this.initialized ) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n\n        if (simpleChange.groupRowsBy) {\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if ( !this.lazy || this.initialized ) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n\n        if (simpleChange.sortOrder) {\n            this._sortOrder = simpleChange.sortOrder.currentValue;\n\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if ( !this.lazy || this.initialized ) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n\n        if (simpleChange.groupRowsByOrder) {\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if ( !this.lazy || this.initialized ) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n\n        if (simpleChange.multiSortMeta) {\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n            if (this.sortMode === 'multiple' && (this.initialized || (!this.lazy && !this.virtualScroll))) {\n                this.sortMultiple();\n            }\n        }\n\n        if (simpleChange.selection) {\n            this._selection = simpleChange.selection.currentValue;\n\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n    }\n\n    @Input() get value(): any[] {\n        return this._value;\n    }\n    set value(val: any[]) {\n        this._value = val;\n    }\n\n    @Input() get columns(): any[] {\n        return this._columns;\n    }\n    set columns(cols: any[]) {\n        this._columns = cols;\n    }\n\n    @Input() get first(): number {\n        return this._first;\n    }\n    set first(val: number) {\n        this._first = val;\n    }\n\n    @Input() get rows(): number {\n        return this._rows;\n    }\n    set rows(val: number) {\n        this._rows = val;\n    }\n\n    @Input() get totalRecords(): number {\n        return this._totalRecords;\n    }\n    set totalRecords(val: number) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n\n    @Input() get sortField(): string {\n        return this._sortField;\n    }\n\n    set sortField(val: string) {\n        this._sortField = val;\n    }\n\n    @Input() get sortOrder(): number {\n        return this._sortOrder;\n    }\n    set sortOrder(val: number) {\n        this._sortOrder = val;\n    }\n\n    @Input() get multiSortMeta(): SortMeta[] {\n        return this._multiSortMeta;\n    }\n\n    set multiSortMeta(val: SortMeta[]) {\n        this._multiSortMeta = val;\n    }\n\n    @Input() get selection(): any {\n        return this._selection;\n    }\n\n    set selection(val: any) {\n        this._selection = val;\n    }\n\n    get dataToRender() {\n        let data = this.filteredValue||this.value;\n        return data ? ((this.paginator && !this.lazy) ? (data.slice(this.first, this.first + this.rows)) : data) : [];\n    }\n\n    updateSelectionKeys() {\n        if (this.dataKey && this._selection) {\n            this.selectionKeys = {};\n            if (Array.isArray(this._selection)) {\n                for(let data of this._selection) {\n                    this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n            }\n        }\n    }\n\n    onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n\n        this.firstChange.emit(this.first);\n        this.rowsChange.emit(this.rows);\n        this.tableService.onValueChange(this.value);\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n\n        this.anchorRowIndex = null;\n\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n\n    sort(event) {\n        let originalEvent = event.originalEvent;\n\n        if (this.sortMode === 'single') {\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n\n            if (this.resetPageOnSort) {\n                this._first = 0;\n                this.firstChange.emit(this._first);\n\n                if (this.scrollable) {\n                    this.resetScrollTop();\n                }\n            }\n\n            this.sortSingle();\n        }\n        if (this.sortMode === 'multiple') {\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            let sortMeta = this.getSortMeta(event.field);\n\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\n\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n\n                        if (this.scrollable) {\n                            this.resetScrollTop();\n                        }\n                    }\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n                    }\n                }\n                this._multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n\n            this.sortMultiple();\n        }\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n\n        this.anchorRowIndex = null;\n    }\n\n    sortSingle() {\n        let field = this.sortField || this.groupRowsBy;\n        let order = this.sortField ? this.sortOrder : this.groupRowsByOrder;\n        if (this.groupRowsBy && this.sortField && this.groupRowsBy !== this.sortField) {\n            this._multiSortMeta = [this.getGroupRowsMeta(), {field: this.sortField, order: this.sortOrder}];\n            this.sortMultiple();\n            return;\n        }\n\n        if (field && order) {\n            if (this.restoringSort) {\n                this.restoringSort = false;\n            }\n\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        field: field,\n                        order: order\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        let value1 = ObjectUtils.resolveFieldData(data1, field);\n                        let value2 = ObjectUtils.resolveFieldData(data2, field);\n                        let result = null;\n\n                        if (value1 == null && value2 != null)\n                            result = -1;\n                        else if (value1 != null && value2 == null)\n                            result = 1;\n                        else if (value1 == null && value2 == null)\n                            result = 0;\n                        else if (typeof value1 === 'string' && typeof value2 === 'string')\n                            result = value1.localeCompare(value2);\n                        else\n                            result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n\n                        return (order * result);\n                    });\n\n                    this._value = [...this.value];\n                }\n\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n\n            let sortMeta: SortMeta = {\n                field: field,\n                order: order\n            };\n\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n        }\n    }\n\n    sortMultiple() {\n        if (this.groupRowsBy) {\n            if (!this._multiSortMeta)\n                this._multiSortMeta = [this.getGroupRowsMeta()]\n            else if (this.multiSortMeta[0].field !== this.groupRowsBy)\n                this._multiSortMeta = [this.getGroupRowsMeta(), ...this._multiSortMeta]\n        }\n\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        multiSortMeta: this.multiSortMeta\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        return this.multisortField(data1, data2, this.multiSortMeta, 0);\n                    });\n\n                    this._value = [...this.value];\n                }\n\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.tableService.onSort(this.multiSortMeta);\n        }\n    }\n\n    multisortField(data1, data2, multiSortMeta, index) {\n        let value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n        let value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n        let result = null;\n\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        else if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && (value1 != value2)) {\n                return (multiSortMeta[index].order * value1.localeCompare(value2));\n            }\n        }\n        else {\n            result = (value1 < value2) ? -1 : 1;\n        }\n\n        if (value1 == value2) {\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\n        }\n\n        return (multiSortMeta[index].order * result);\n    }\n\n    getSortMeta(field: string) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    isSorted(field: string) {\n        if (this.sortMode === 'single') {\n            return (this.sortField && this.sortField === field);\n        }\n        else if (this.sortMode === 'multiple') {\n            let sorted = false;\n            if (this.multiSortMeta) {\n                for(let i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    }\n\n    handleRowClick(event) {\n        let target = (<HTMLElement> event.originalEvent.target);\n        let targetNode = target.nodeName;\n        let parentNode = target.parentElement && target.parentElement.nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' ||\n            parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' ||\n            (DomHandler.hasClass(event.originalEvent.target, 'p-clickable'))) {\n            return;\n        }\n\n        if (this.selectionMode) {\n            this.preventSelectionSetterPropagation = true;\n            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n                DomHandler.clearSelection();\n                if (this.rangeRowIndex != null) {\n                    this.clearSelectionRange(event.originalEvent);\n                }\n\n                this.rangeRowIndex = event.rowIndex;\n                this.selectRange(event.originalEvent, event.rowIndex);\n            }\n            else {\n                let rowData = event.rowData;\n                let selected = this.isSelected(rowData);\n                let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                this.anchorRowIndex = event.rowIndex;\n                this.rangeRowIndex = event.rowIndex;\n\n                if (metaSelection) {\n                    let metaKey = event.originalEvent.metaKey||event.originalEvent.ctrlKey;\n\n                    if (selected && metaKey) {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(null);\n                        }\n                        else {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val,i) => i!=selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n\n                        this.onRowUnselect.emit({originalEvent: event.originalEvent, data: rowData, type: 'row'});\n                    }\n                    else {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = rowData;\n                            this.selectionChange.emit(rowData);\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        else if (this.isMultipleSelectionMode()) {\n                            if (metaKey) {\n                                this._selection = this.selection||[];\n                            }\n                            else {\n                                this._selection = [];\n                                this.selectionKeys = {};\n                            }\n\n                            this._selection = [...this.selection,rowData];\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n\n                        this.onRowSelect.emit({originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex});\n                    }\n                }\n                else {\n                    if (this.selectionMode === 'single') {\n                        if (selected) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                        }\n                        else {\n                            this._selection = rowData;\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                    else if (this.selectionMode === 'multiple') {\n                        if (selected) {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        else {\n                            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                }\n            }\n\n            this.tableService.onSelectionChange();\n\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n\n        this.rowTouched = false;\n    }\n\n    handleRowTouchEnd(event) {\n        this.rowTouched = true;\n    }\n\n    handleRowRightClick(event) {\n        if (this.contextMenu) {\n            const rowData = event.rowData;\n\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = rowData;\n                this.contextMenuSelectionChange.emit(rowData);\n                this.onContextMenuSelect.emit({originalEvent: event.originalEvent, data: rowData, index: event.rowIndex});\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(rowData);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                let selected = this.isSelected(rowData);\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n\n                if (!selected) {\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = rowData;\n                        this.selectionChange.emit(rowData);\n\n                        if (dataKeyValue) {\n                            this.selectionKeys = {};\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                        this.selectionChange.emit(this.selection);\n\n                        if (dataKeyValue) {\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n\n                this.tableService.onSelectionChange();\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({originalEvent: event, data: rowData, index: event.rowIndex});\n            }\n        }\n    }\n\n    selectRange(event: MouseEvent, rowIndex: number) {\n        let rangeStart, rangeEnd;\n\n        if (this.anchorRowIndex > rowIndex) {\n            rangeStart = rowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else if (this.anchorRowIndex < rowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = rowIndex;\n        }\n        else {\n            rangeStart = rowIndex;\n            rangeEnd = rowIndex;\n        }\n\n        if (this.lazy && this.paginator) {\n            rangeStart -= this.first;\n            rangeEnd -= this.first;\n        }\n\n        let rangeRowsData = [];\n        for(let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n            if (!this.isSelected(rangeRowData)) {\n                rangeRowsData.push(rangeRowData);\n                this._selection = [...this.selection, rangeRowData];\n                let dataKeyValue: string = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n                if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                }\n            }\n        }\n        this.selectionChange.emit(this.selection);\n        this.onRowSelect.emit({originalEvent: event, data: rangeRowsData, type: 'row'});\n    }\n\n    clearSelectionRange(event: MouseEvent) {\n        let rangeStart, rangeEnd;\n\n        if (this.rangeRowIndex > this.anchorRowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        else if (this.rangeRowIndex < this.anchorRowIndex) {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n\n        for(let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.value[i];\n            let selectionIndex = this.findIndexInSelection(rangeRowData);\n            this._selection = this.selection.filter((val,i) => i!=selectionIndex);\n            let dataKeyValue: string = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n            this.onRowUnselect.emit({originalEvent: event, data: rangeRowData, type: 'row'});\n        }\n    }\n\n    isSelected(rowData) {\n        if (rowData && this.selection) {\n            if (this.dataKey) {\n                return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n            }\n            else {\n                if (this.selection instanceof Array)\n                    return this.findIndexInSelection(rowData) > -1;\n                else\n                    return this.equals(rowData, this.selection);\n            }\n        }\n\n        return false;\n    }\n\n    findIndexInSelection(rowData: any) {\n        let index: number = -1;\n        if (this.selection && this.selection.length) {\n            for (let i = 0; i < this.selection.length; i++) {\n                if (this.equals(rowData, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n\n        return index;\n    }\n\n    toggleRowWithRadio(event: any, rowData:any) {\n        this.preventSelectionSetterPropagation = true;\n\n        if (this.selection != rowData) {\n            this._selection = rowData;\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton'});\n\n            if (this.dataKey) {\n                this.selectionKeys = {};\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n            }\n        }\n        else {\n            this._selection = null;\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton'});\n        }\n\n        this.tableService.onSelectionChange();\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n\n    toggleRowWithCheckbox(event, rowData: any) {\n        this.selection = this.selection||[];\n        let selected = this.isSelected(rowData);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.preventSelectionSetterPropagation = true;\n\n        if (selected) {\n            let selectionIndex = this.findIndexInSelection(rowData);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n        }\n        else {\n            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n            }\n        }\n\n        this.tableService.onSelectionChange();\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n\n    toggleRowsWithCheckbox(event: Event, check: boolean) {\n        this._selection = check ? this.filteredValue ? this.filteredValue.slice(): this.value.slice() : [];\n        this.preventSelectionSetterPropagation = true;\n        this.updateSelectionKeys();\n        this.selectionChange.emit(this._selection);\n        this.tableService.onSelectionChange();\n        this.onHeaderCheckboxToggle.emit({originalEvent: event, checked: check});\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n\n    equals(data1, data2) {\n        return this.compareSelectionBy === 'equals' ? (data1 === data2) : ObjectUtils.equals(data1, data2, this.dataKey);\n    }\n\n    /* Legacy Filtering for custom elements */\n    filter(value: any, field: string, matchMode: string) {\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        } else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n\n        this.filterTimeout = setTimeout(() => {\n            this._filter();\n            this.filterTimeout = null;\n        }, this.filterDelay);\n\n        this.anchorRowIndex = null;\n    }\n\n    filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    }\n\n    isFilterBlank(filter: any): boolean {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    }\n\n    _filter() {\n        if (!this.restoringFilter) {\n            this.first = 0;\n            this.firstChange.emit(this.first);\n        }\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n\n            if (!this.hasFilter()) {\n                this.filteredValue = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                let globalFilterFieldsArray;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields||this.columns;\n                }\n\n                this.filteredValue = [];\n\n                for (let i = 0; i < this.value.length; i++) {\n                    let localMatch = true;\n                    let globalMatch = false;\n                    let localFiltered = false;\n\n                    for (let prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            localFiltered = true;\n                            let filterField = prop;\n                            let filterMeta = this.filters[filterField];\n\n                            if (Array.isArray(filterMeta)) {\n                                for (let meta of filterMeta) {\n                                    localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n\n                                    if ((meta.operator === FilterOperator.OR && localMatch) || (meta.operator === FilterOperator.AND && !localMatch)) {\n                                        break;\n                                    }\n                                }\n                            }\n                            else {\n                                localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n                            }\n\n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        for(let j = 0; j < globalFilterFieldsArray.length; j++) {\n                            let globalFilterField = globalFilterFieldsArray[j].field||globalFilterFieldsArray[j];\n                            globalMatch = this.filterService.filters[(<FilterMetadata> this.filters['global']).matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), (<FilterMetadata> this.filters['global']).value, this.filterLocale);\n\n                            if (globalMatch) {\n                                break;\n                            }\n                        }\n                    }\n\n                    let matches: boolean;\n                    if (this.filters['global']) {\n                        matches = localFiltered ? (localFiltered && localMatch && globalMatch) : globalMatch;\n                    }\n                    else {\n                        matches = localFiltered && localMatch;\n                    }\n\n                    if (matches) {\n                        this.filteredValue.push(this.value[i]);\n                    }\n                }\n\n                if (this.filteredValue.length === this.value.length) {\n                    this.filteredValue = null;\n                }\n\n                if (this.paginator) {\n                    this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n                }\n            }\n        }\n\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: this.filteredValue || this.value\n        });\n\n        this.tableService.onValueChange(this.value);\n\n        if (this.isStateful() && !this.restoringFilter) {\n            this.saveState();\n        }\n\n        if (this.restoringFilter) {\n            this.restoringFilter = false;\n        }\n\n        this.cd.markForCheck();\n\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n\n    executeLocalFilter(field: string, rowData: any, filterMeta: FilterMetadata): boolean {\n        let filterValue = filterMeta.value;\n        let filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n        let dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n        let filterConstraint = this.filterService.filters[filterMatchMode];\n\n        return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n    }\n\n    hasFilter() {\n        let empty = true;\n        for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n\n        return !empty;\n    }\n\n    createLazyLoadMetadata(): any {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? (<FilterMetadata> this.filters['global']).value : null,\n            multiSortMeta: this.multiSortMeta\n        };\n    }\n\n    public clear() {\n        this._sortField = null;\n        this._sortOrder = this.defaultSortOrder;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n\n        this.filteredValue = null;\n        this.tableService.onResetChange();\n\n        this.first = 0;\n        this.firstChange.emit(this.first);\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = (this._value ? this._value.length : 0);\n        }\n    }\n\n    public reset() {\n        this.clear();\n    }\n\n    public exportCSV(options?: any) {\n        let data;\n        let csv = '';\n        let columns = this.frozenColumns ? [...this.frozenColumns, ...this.columns] : this.columns;\n\n        if (options && options.selectionOnly) {\n            data = this.selection || [];\n        }\n        else {\n            data = this.filteredValue || this.value;\n\n            if (this.frozenValue) {\n                data = data ? [...this.frozenValue, ...data] : this.frozenValue;\n            }\n        }\n\n        //headers\n        for (let i = 0; i < columns.length; i++) {\n            let column = columns[i];\n            if (column.exportable !== false && column.field) {\n                csv += '\"' + (column.header || column.field) + '\"';\n\n                if (i < (columns.length - 1)) {\n                    csv += this.csvSeparator;\n                }\n            }\n        }\n\n        //body\n        data.forEach((record, i) => {\n            csv += '\\n';\n            for (let i = 0; i < columns.length; i++) {\n                let column = columns[i];\n                if (column.exportable !== false && column.field) {\n                    let cellData = ObjectUtils.resolveFieldData(record, column.field);\n\n                    if (cellData != null) {\n                        if (this.exportFunction) {\n                            cellData = this.exportFunction({\n                                data: cellData,\n                                field: column.field\n                            });\n                        }\n                        else\n                            cellData = String(cellData).replace(/\"/g, '\"\"');\n                    }\n                    else\n                        cellData = '';\n\n                    csv += '\"' + cellData + '\"';\n\n                    if (i < (columns.length - 1)) {\n                        csv += this.csvSeparator;\n                    }\n                }\n            }\n        });\n\n        let blob = new Blob([csv], {\n            type: 'text/csv;charset=utf-8;'\n        });\n\n        let link = document.createElement(\"a\");\n        link.style.display = 'none';\n        document.body.appendChild(link);\n        if (link.download !== undefined) {\n            link.setAttribute('href', URL.createObjectURL(blob));\n            link.setAttribute('download', this.exportFilename + '.csv');\n            link.click();\n        }\n        else {\n            csv = 'data:text/csv;charset=utf-8,' + csv;\n            window.open(encodeURI(csv));\n        }\n        document.body.removeChild(link);\n    }\n\n    public resetScrollTop() {\n        if (this.virtualScroll)\n            this.scrollToVirtualIndex(0);\n        else\n            this.scrollTo({top: 0});\n    }\n\n    public scrollToVirtualIndex(index: number) {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollToIndex(index);\n        }\n    }\n\n    virtualScrollTimeout: any;\n\n    virtualPage: number;\n\n    onScrollIndexChange(index: number) {\n        if (this.lazy) {\n            if (this.virtualScrollTimeout) {\n                clearTimeout(this.virtualScrollTimeout);\n            }\n\n            this.virtualScrollTimeout = setTimeout(() => {\n                let page = Math.floor(index / this.rows);\n                let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.rows;\n                let virtualScrollChunkSize = page === 0 ? this.rows * 2 : this.rows * 3;\n\n                if (page !== this.virtualPage) {\n                    this.virtualPage = page;\n                    this.onLazyLoad.emit({\n                        first: virtualScrollOffset,\n                        rows: virtualScrollChunkSize,\n                        sortField: this.sortField,\n                        sortOrder: this.sortOrder,\n                        filters: this.filters,\n                        globalFilter: this.filters && this.filters['global'] ? (<FilterMetadata> this.filters['global']).value : null,\n                        multiSortMeta: this.multiSortMeta\n                    });\n                }\n            }, this.virtualScrollDelay);\n        }\n    }\n\n    public scrollTo(options) {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollTo(options);\n        }\n        else {\n            if (this.wrapperViewChild.nativeElement.scrollTo) {\n                this.wrapperViewChild.nativeElement.scrollTo(options);\n            }\n            else {\n                this.wrapperViewChild.nativeElement.scrollLeft = options.left;\n                this.wrapperViewChild.nativeElement.scrollTop = options.top;\n            }\n        }\n    }\n\n    updateEditingCell(cell, data, field, index) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.editingCellRowIndex = index;\n        this.bindDocumentEditListener();\n    }\n\n    isEditingCellValid() {\n        return (this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);\n    }\n\n    bindDocumentEditListener() {\n        if (!this.documentEditListener) {\n            this.documentEditListener = (event) => {\n                if (this.editingCell && !this.selfClick && this.isEditingCellValid()) {\n                    DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n                    this.editingCell = null;\n                    this.onEditComplete.emit({ field: this.editingCellField, data: this.editingCellData, originalEvent: event, index: this.editingCellRowIndex });\n                    this.editingCellField = null;\n                    this.editingCellData = null;\n                    this.editingCellRowIndex = null;\n                    this.unbindDocumentEditListener();\n                    this.cd.markForCheck();\n\n                    if (this.overlaySubscription) {\n                        this.overlaySubscription.unsubscribe();\n                    }\n                }\n\n                this.selfClick = false;\n            };\n\n            document.addEventListener('click', this.documentEditListener);\n        }\n    }\n\n    unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n            document.removeEventListener('click', this.documentEditListener);\n            this.documentEditListener = null;\n        }\n    }\n\n    initRowEdit(rowData: any) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        this.editingRowKeys[dataKeyValue] = true;\n    }\n\n    saveRowEdit(rowData: any, rowElement: HTMLTableRowElement) {\n        if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n            let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n            delete this.editingRowKeys[dataKeyValue];\n        }\n    }\n\n    cancelRowEdit(rowData: any) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        delete this.editingRowKeys[dataKeyValue];\n    }\n\n    toggleRow(rowData: any, event?: Event) {\n        if (!this.dataKey) {\n            throw new Error('dataKey must be defined to use row expansion');\n        }\n\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n\n        if (this.expandedRowKeys[dataKeyValue] != null) {\n            delete this.expandedRowKeys[dataKeyValue];\n            this.onRowCollapse.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        else {\n            if (this.rowExpandMode === 'single') {\n                this.expandedRowKeys = {};\n            }\n\n            this.expandedRowKeys[dataKeyValue] = true;\n            this.onRowExpand.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n\n    isRowExpanded(rowData: any): boolean {\n        return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n\n    isRowEditing(rowData: any): boolean {\n        return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n\n    isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n    }\n\n    isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n    }\n\n    onColumnResizeBegin(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        this.resizeColumnElement = event.target.parentElement;\n        this.columnResizing = true;\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\n        this.onColumnResize(event);\n        event.preventDefault();\n    }\n\n    onColumnResize(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\n\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n\n    onColumnResizeEnd() {\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        let columnWidth = this.resizeColumnElement.offsetWidth;\n        let newColumnWidth = columnWidth + delta;\n        let minWidth = this.resizeColumnElement.style.minWidth||15;\n\n        if (newColumnWidth >= minWidth) {\n            if (this.columnResizeMode === 'fit') {\n                let nextColumn = this.resizeColumnElement.nextElementSibling;\n                let nextColumnWidth = nextColumn.offsetWidth - delta;\n\n                if (newColumnWidth > 15 && nextColumnWidth > 15) {\n                    if (!this.scrollable) {\n                        this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                        if(nextColumn) {\n                            nextColumn.style.width = nextColumnWidth + 'px';\n                        }\n                    }\n                    else {\n                        this.resizeTableCells(newColumnWidth, nextColumnWidth);\n                    }\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                let tableWidth = this.tableViewChild.nativeElement.offsetWidth + delta;\n                this.tableViewChild.nativeElement.style.minWidth = tableWidth + 'px';\n                this.resizeColumnElement.style.width = newColumnWidth + 'px';\n\n                if (!this.scrollable)\n                    this.tableViewChild.nativeElement.style.width = tableWidth + 'px';\n                else\n                    this.resizeTableCells(newColumnWidth, null);\n            }\n\n            this.onColResize.emit({\n                element: this.resizeColumnElement,\n                delta: delta\n            });\n\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    }\n\n    resizeTableCells(newColumnWidth, nextColumnWidth) {\n        let colIndex = DomHandler.index(this.resizeColumnElement);\n        let widths = [];\n        const tableHead = DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-datatable-thead');\n        let headers = DomHandler.find(tableHead, 'tr > th');\n        headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n\n        this.destroyStyleElement();\n        this.createStyleElement();\n\n        let innerHTML = '';\n        widths.forEach((width,index) => {\n            let colWidth = index === colIndex ? newColumnWidth : (nextColumnWidth && index === colIndex + 1) ? nextColumnWidth : width;\n            innerHTML += `\n                #${this.id}-table > .p-datatable-thead > tr > th:nth-child(${index+1}) {\n                    flex: 0 0 ${colWidth}px !important;\n                }\n\n                #${this.id}-table > .p-datatable-tbody > tr > td:nth-child(${index+1}) {\n                    flex: 0 0 ${colWidth}px !important;\n                }\n            `\n        });\n        this.styleElement.innerHTML = innerHTML;\n    }\n\n    onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b');    // For firefox\n    }\n\n    onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n            if (this.draggedColumn != dropHeader) {\n                let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n                let dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = -1;\n                }\n\n                if ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dropIndex - dragIndex === -1 && this.dropPosition === 1)) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n                }\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    }\n\n    onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    }\n\n    onColumnDrop(event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n            let allowDrop = (dragIndex != dropIndex);\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n\n            if (allowDrop && ((dropIndex < dragIndex && this.dropPosition === 1))) {\n                dropIndex = dropIndex + 1;\n            }\n\n            if (allowDrop && ((dropIndex > dragIndex && this.dropPosition === -1))) {\n                dropIndex = dropIndex - 1;\n            }\n\n            if (allowDrop) {\n                ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n\n                if (this.isStateful()) {\n                    this.zone.runOutsideAngular(() => {\n                        setTimeout(() => {\n                            this.saveState();\n                        });\n                    });\n                }\n            }\n\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    }\n\n    onRowDragStart(event, index) {\n        this.rowDragging = true;\n        this.draggedRowIndex = index;\n        event.dataTransfer.setData('text', 'b');    // For firefox\n    }\n\n    onRowDragOver(event, index, rowElement) {\n        if (this.rowDragging && this.draggedRowIndex !== index) {\n            let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n            let pageY = event.pageY;\n            let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n            let prevRowElement = rowElement.previousElementSibling;\n\n            if (pageY < rowMidY) {\n                DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n\n                this.droppedRowIndex = index;\n                if (prevRowElement)\n                    DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n            }\n            else {\n                if (prevRowElement)\n                    DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n\n                this.droppedRowIndex = index + 1;\n                DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n            }\n        }\n    }\n\n    onRowDragLeave(event, rowElement) {\n        let prevRowElement = rowElement.previousElementSibling;\n        if (prevRowElement) {\n            DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n        }\n\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n    }\n\n    onRowDragEnd(event) {\n        this.rowDragging = false;\n        this.draggedRowIndex = null;\n        this.droppedRowIndex = null;\n    }\n\n    onRowDrop(event, rowElement) {\n        if (this.droppedRowIndex != null) {\n            let dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n            ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n\n            this.onRowReorder.emit({\n                dragIndex: this.draggedRowIndex,\n                dropIndex: dropIndex\n            });\n        }\n        //cleanup\n        this.onRowDragLeave(event, rowElement);\n        this.onRowDragEnd(event);\n    }\n\n    isEmpty() {\n        let data = this.filteredValue||this.value;\n        return data == null || data.length == 0;\n    }\n\n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n\n    getStorage() {\n        switch(this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n\n            case 'session':\n                return window.sessionStorage;\n\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    }\n\n    isStateful() {\n        return this.stateKey != null;\n    }\n\n    saveState() {\n        const storage = this.getStorage();\n        let state: TableState = {};\n\n        if (this.paginator) {\n            state.first = this.first;\n            state.rows = this.rows;\n        }\n\n        if (this.sortField) {\n            state.sortField = this.sortField;\n            state.sortOrder = this.sortOrder;\n        }\n\n        if (this.multiSortMeta) {\n            state.multiSortMeta = this.multiSortMeta;\n        }\n\n        if (this.hasFilter()) {\n            state.filters = this.filters;\n        }\n\n        if (this.resizableColumns) {\n            this.saveColumnWidths(state);\n        }\n\n        if (this.reorderableColumns) {\n            this.saveColumnOrder(state);\n        }\n\n        if (this.selection) {\n            state.selection = this.selection;\n        }\n\n        if (Object.keys(this.expandedRowKeys).length) {\n            state.expandedRowKeys = this.expandedRowKeys;\n        }\n\n        storage.setItem(this.stateKey, JSON.stringify(state));\n        this.onStateSave.emit(state);\n    }\n\n    clearState() {\n        const storage = this.getStorage();\n\n        if (this.stateKey) {\n            storage.removeItem(this.stateKey);\n        }\n    }\n\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        const dateFormat = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n        const reviver = function(key, value) {\n            if (typeof value === \"string\" && dateFormat.test(value)) {\n                return new Date(value);\n            }\n\n            return value;\n        }\n\n        if (stateString) {\n            let state: TableState = JSON.parse(stateString, reviver);\n\n            if (this.paginator) {\n                if (this.first !== undefined) {\n                    this.first = state.first;\n                    this.firstChange.emit(this.first);\n                }\n\n                if (this.rows !== undefined) {\n                    this.rows = state.rows;\n                    this.rowsChange.emit(this.rows);\n                }\n            }\n\n            if (state.sortField) {\n                this.restoringSort = true;\n                this._sortField = state.sortField;\n                this._sortOrder = state.sortOrder;\n            }\n\n            if (state.multiSortMeta) {\n                this.restoringSort = true;\n                this._multiSortMeta = state.multiSortMeta;\n            }\n\n            if (state.filters) {\n                this.restoringFilter = true;\n                this.filters = state.filters;\n            }\n\n            if (this.resizableColumns) {\n                this.columnWidthsState = state.columnWidths;\n                this.tableWidthState = state.tableWidth;\n            }\n\n            if (state.expandedRowKeys) {\n                this.expandedRowKeys = state.expandedRowKeys;\n            }\n\n            if (state.selection) {\n                Promise.resolve(null).then(() => this.selectionChange.emit(state.selection));\n            }\n\n            this.stateRestored = true;\n\n            this.onStateRestore.emit(state);\n        }\n    }\n\n    saveColumnWidths(state) {\n        let widths = [];\n        let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr > th');\n        headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n        state.columnWidths = widths.join(',');\n\n        if (this.columnResizeMode === 'expand') {\n            state.tableWidth =  DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n        }\n    }\n\n    restoreColumnWidths() {\n        if (this.columnWidthsState) {\n            let widths = this.columnWidthsState.split(',');\n\n            if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n                this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n                this.tableViewChild.nativeElement.style.minWidth = this.tableWidthState;\n                this.containerViewChild.nativeElement.style.width = this.tableWidthState;\n            }\n\n            this.createStyleElement();\n\n            if (this.scrollable && widths && widths.length > 0) {\n                    let innerHTML = '';\n                    widths.forEach((width,index) => {\n                        innerHTML += `\n                            #${this.id}-table > .p-datatable-thead > tr > th:nth-child(${index+1}) {\n                                flex: 0 0 ${width}px;\n                            }\n\n                            #${this.id}-table > .p-datatable-tbody > tr > td:nth-child(${index+1}) {\n                                flex: 0 0 ${width}px;\n                            }\n                        `\n                    });\n                this.styleElement.innerHTML = innerHTML;\n            }\n            else {\n                DomHandler.find(this.tableViewChild.nativeElement, '.p-datatable-thead > tr > th').forEach((header, index) => {\n                    header.style.width = widths[index] + 'px';\n                });\n            }\n\n        }\n    }\n\n    saveColumnOrder(state) {\n        if (this.columns) {\n            let columnOrder: string[] = [];\n            this.columns.map(column => {\n                columnOrder.push(column.field||column.key)\n            });\n\n            state.columnOrder = columnOrder;\n        }\n    }\n\n    restoreColumnOrder() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            let state: TableState = JSON.parse(stateString);\n            let columnOrder = state.columnOrder;\n            if (columnOrder) {\n                let reorderedColumns = [];\n\n                columnOrder.map(key =>  {\n                    let col = this.findColumnByKey(key);\n                    if (col) {\n                        reorderedColumns.push(col)\n                    }\n                });\n                this.columnOrderStateRestored = true;\n                this.columns = reorderedColumns;\n            }\n        }\n    }\n\n    findColumnByKey(key) {\n        if (this.columns) {\n            for (let col of this.columns) {\n                if (col.key === key || col.field === key)\n                    return col;\n                else\n                    continue;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n\n    createStyleElement() {\n        this.styleElement = document.createElement('style');\n        this.styleElement.type = 'text/css';\n        document.head.appendChild(this.styleElement);\n    }\n\n    getGroupRowsMeta() {\n        return {field: this.groupRowsBy, order: this.groupRowsByOrder};\n    }\n\n    createResponsiveStyle() {\n        if (!this.responsiveStyleElement) {\n            this.responsiveStyleElement = document.createElement('style');\n            this.responsiveStyleElement.type = 'text/css';\n            document.head.appendChild(this.responsiveStyleElement);\n\n            let innerHTML = `\n@media screen and (max-width: ${this.breakpoint}) {\n    #${this.id} .p-datatable-thead > tr > th,\n    #${this.id} .p-datatable-tfoot > tr > td {\n        display: none !important;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td {\n        display: flex;\n        width: 100% !important;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td:not(:last-child) {\n        border: 0 none;\n    }\n\n    #${this.id}.p-datatable-gridlines .p-datatable-tbody > tr > td:last-child {\n        border-top: 0;\n        border-right: 0;\n        border-left: 0;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td > .p-column-title {\n        display: block;\n    }\n}\n`;\n\n            this.responsiveStyleElement.innerHTML = innerHTML;\n        }\n    }\n\n    destroyResponsiveStyle() {\n        if (this.responsiveStyleElement) {\n            document.head.removeChild(this.responsiveStyleElement);\n            this.responsiveStyleElement = null;\n        }\n    }\n\n    destroyStyleElement() {\n        if (this.styleElement) {\n            document.head.removeChild(this.styleElement);\n            this.styleElement = null;\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.initialized = null;\n\n        if (this.virtualScrollSubscription) {\n            this.virtualScrollSubscription.unsubscribe();\n        }\n\n        this.destroyStyleElement();\n        this.destroyResponsiveStyle();\n    }\n}\n\n@Component({\n    selector: '[pTableBody]',\n    template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode !== 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode === 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen, rowgroup: shouldRenderRowspan(value, rowData, rowIndex), rowspan: calculateRowGroupSize(value, rowData, rowIndex)}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"!dt.groupHeaderTemplate\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                    <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                        <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class TableBody implements AfterViewInit, OnDestroy {\n\n    @Input(\"pTableBody\") columns: any[];\n\n    @Input(\"pTableBodyTemplate\") template: TemplateRef<any>;\n\n    @Input() get value(): any[] {\n        return this._value;\n    }\n    set value(val: any[]) {\n        this._value = val;\n        if (this.frozenRows) {\n            this.updateFrozenRowStickyPosition();\n        }\n\n        if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n            this.updateFrozenRowGroupHeaderStickyPosition();\n        }\n    }\n\n    @Input() frozen: boolean;\n\n    @Input() frozenRows: boolean;\n\n    subscription: Subscription;\n\n    _value: any[];\n\n    ngAfterViewInit() {\n        if (this.frozenRows) {\n            this.updateFrozenRowStickyPosition();\n        }\n\n        if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n            this.updateFrozenRowGroupHeaderStickyPosition();\n        }\n    }\n\n    constructor(public dt: Table, public tableService: TableService, public cd: ChangeDetectorRef, public el: ElementRef) {\n        this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n            if (this.dt.virtualScroll) {\n                this.cd.detectChanges();\n            }\n        });\n    }\n\n    shouldRenderRowGroupHeader(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let prevRowData = value[i - 1];\n        if (prevRowData) {\n            let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== previousRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n\n    shouldRenderRowGroupFooter(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let nextRowData = value[i + 1];\n        if (nextRowData) {\n            let nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== nextRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n\n    shouldRenderRowspan(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let prevRowData = value[i - 1];\n        if (prevRowData) {\n            let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== previousRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n\n    calculateRowGroupSize(value, rowData, index) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let nextRowFieldData = currentRowFieldData;\n        let groupRowSpan = 0;\n\n        while (currentRowFieldData === nextRowFieldData) {\n            groupRowSpan++;\n            let nextRowData = value[++index];\n            if (nextRowData) {\n                nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n            }\n            else {\n                break;\n            }\n        }\n\n        return groupRowSpan === 1 ? null : groupRowSpan;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    updateFrozenRowStickyPosition() {\n        this.el.nativeElement.style.top = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling) + 'px';\n    }\n\n    updateFrozenRowGroupHeaderStickyPosition() {\n        if (this.el.nativeElement.previousElementSibling) {\n            let tableHeaderHeight = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling);\n            this.dt.rowGroupHeaderStyleObject.top = tableHeaderHeight + 'px';\n        }\n    }\n}\n\n@Directive({\n    selector: '[pRowGroupHeader]',\n    host: {\n        'class': 'p-rowgroup-header p-element',\n        '[style.top]': \"getFrozenRowGroupHeaderStickyPosition\"\n    }\n})\nexport class RowGroupHeader {\n\n    constructor(public dt: Table) { }\n\n    get getFrozenRowGroupHeaderStickyPosition() {\n        return this.dt.rowGroupHeaderStyleObject ? this.dt.rowGroupHeaderStyleObject.top : '';\n    }\n }\n\n@Directive({\n    selector: '[pFrozenColumn]',\n    host: {\n        'class': 'p-element',\n        '[class.p-frozen-column]': 'frozen'\n    }\n})\nexport class FrozenColumn implements AfterViewInit {\n\n    @Input() get frozen(): boolean {\n        return this._frozen;\n    }\n\n    set frozen(val: boolean) {\n        this._frozen = val;\n        this.updateStickyPosition();\n    }\n\n    @Input() alignFrozen: string = \"left\";\n\n    constructor(private el: ElementRef) { }\n\n    ngAfterViewInit() {\n        this.updateStickyPosition();\n    }\n\n    _frozen: boolean = true;\n\n    updateStickyPosition() {\n        if (this._frozen) {\n            if (this.alignFrozen === 'right') {\n                let right = 0;\n                let next = this.el.nativeElement.nextElementSibling;\n                if (next) {\n                    right = DomHandler.getOuterWidth(next) + parseFloat(next.style.right);\n                }\n                this.el.nativeElement.style.right = right + 'px';\n            }\n            else {\n                let left = 0;\n                let prev = this.el.nativeElement.previousElementSibling;\n                if (prev) {\n                    left = DomHandler.getOuterWidth(prev) + parseFloat(prev.style.left);\n                }\n                this.el.nativeElement.style.left = left + 'px';\n            }\n\n            let filterRow = this.el.nativeElement.parentElement.nextElementSibling;\n\n            if (filterRow) {\n                let index = DomHandler.index(this.el.nativeElement);\n\n                if (filterRow.children && filterRow.children[index]) {\n                    filterRow.children[index].style.left = this.el.nativeElement.style.left;\n                    filterRow.children[index].style.right = this.el.nativeElement.style.right;\n                }\n\n            }\n        }\n    }\n}\n@Directive({\n    selector: '[pSortableColumn]',\n    host: {\n        'class': 'p-element',\n        '[class.p-sortable-column]': 'isEnabled()',\n        '[class.p-highlight]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n        '[attr.role]': '\"columnheader\"',\n        '[attr.aria-sort]': 'sortOrder'\n    }\n})\nexport class SortableColumn implements OnInit, OnDestroy {\n\n    @Input(\"pSortableColumn\") field: string;\n\n    @Input() pSortableColumnDisabled: boolean;\n\n    sorted: boolean;\n\n    sortOrder: string;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table) {\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n                this.updateSortState();\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    }\n\n    updateSortState() {\n        this.sorted = this.dt.isSorted(this.field);\n        this.sortOrder = this.sorted ? (this.dt.sortOrder === 1 ? 'ascending' : 'descending') : 'none';\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: MouseEvent) {\n        if (this.isEnabled() && !this.isFilterElement(<HTMLElement> event.target)) {\n            this.updateSortState();\n            this.dt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n\n            DomHandler.clearSelection();\n        }\n    }\n\n    @HostListener('keydown.enter', ['$event'])\n    onEnterKey(event: MouseEvent) {\n        this.onClick(event);\n    }\n\n    isEnabled() {\n        return this.pSortableColumnDisabled !== true;\n    }\n\n    isFilterElement(element: HTMLElement) {\n        return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n\n@Component({\n    selector: 'p-sortIcon',\n    template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getBadgeValue()}}</span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class SortIcon implements OnInit, OnDestroy {\n\n    @Input() field: string;\n\n    subscription: Subscription;\n\n    sortOrder: number;\n\n    constructor(public dt: Table, public cd: ChangeDetectorRef) {\n        this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n            this.updateSortState();\n        });\n    }\n\n    ngOnInit() {\n        this.updateSortState();\n    }\n\n    onClick(event){\n        event.preventDefault();\n    }\n\n    updateSortState() {\n        if (this.dt.sortMode === 'single') {\n            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n        }\n        else if (this.dt.sortMode === 'multiple') {\n            let sortMeta = this.dt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order: 0;\n        }\n\n        this.cd.markForCheck();\n    }\n\n    getMultiSortMetaIndex() {\n        let multiSortMeta = this.dt._multiSortMeta;\n        let index = -1;\n\n        if (multiSortMeta && this.dt.sortMode === 'multiple' && (this.dt.showInitialSortBadge || multiSortMeta.length > 1)) {\n\n            for (let i = 0; i < multiSortMeta.length; i++) {\n                let meta = multiSortMeta[i];\n                if (meta.field === this.field || meta.field === this.field) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n\n        return index;\n    }\n\n    getBadgeValue() {\n        let index = this.getMultiSortMetaIndex();\n\n        return this.dt.groupRowsBy && index > -1 ? index : index + 1;\n    }\n\n    isMultiSorted() {\n        return this.dt.sortMode === 'multiple' && this.getMultiSortMetaIndex() > -1;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n@Directive({\n    selector: '[pSelectableRow]',\n    host: {\n        'class': 'p-element',\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n    }\n})\nexport class SelectableRow implements OnInit, OnDestroy {\n\n    @Input(\"pSelectableRow\") data: any;\n\n    @Input(\"pSelectableRowIndex\") index: number;\n\n    @Input() pSelectableRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService) {\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n\n    @HostListener('touchend', ['$event'])\n    onTouchEnd(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowTouchEnd(event);\n        }\n    }\n\n    @HostListener('keydown.arrowdown', ['$event'])\n    onArrowDownKeyDown(event: KeyboardEvent) {\n        if (!this.isEnabled()) {\n            return;\n        }\n\n        const row = <HTMLTableRowElement>event.currentTarget;\n        const nextRow = this.findNextSelectableRow(row);\n\n        if (nextRow) {\n            nextRow.focus();\n        }\n\n        event.preventDefault();\n    }\n\n    @HostListener('keydown.arrowup', ['$event'])\n    onArrowUpKeyDown(event: KeyboardEvent) {\n        if (!this.isEnabled()) {\n            return;\n        }\n\n        const row = <HTMLTableRowElement>event.currentTarget;\n        const prevRow = this.findPrevSelectableRow(row);\n\n        if (prevRow) {\n            prevRow.focus();\n        }\n\n        event.preventDefault();\n    }\n\n    @HostListener('keydown.enter', ['$event'])\n    @HostListener('keydown.shift.enter', ['$event'])\n    @HostListener('keydown.meta.enter', ['$event'])\n    onEnterKeyDown(event: KeyboardEvent) {\n        if (!this.isEnabled()) {\n            return;\n        }\n\n        this.dt.handleRowClick({\n            originalEvent: event,\n            rowData: this.data,\n            rowIndex: this.index\n        });\n    }\n\n    @HostListener('keydown.pagedown')\n    @HostListener('keydown.pageup')\n    @HostListener('keydown.home')\n    @HostListener('keydown.end')\n    onPageDownKeyDown() {\n        if (this.dt.virtualScroll) {\n            this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n        }\n    }\n\n    @HostListener('keydown.space')\n    onSpaceKeydown() {\n        if (this.dt.virtualScroll && !this.dt.editingCell) {\n            this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n        }\n    }\n\n    findNextSelectableRow(row: HTMLTableRowElement): HTMLTableRowElement {\n        let nextRow = <HTMLTableRowElement> row.nextElementSibling;\n        if (nextRow) {\n            if (DomHandler.hasClass(nextRow, 'p-selectable-row'))\n                return nextRow;\n            else\n                return this.findNextSelectableRow(nextRow);\n        }\n        else {\n            return null;\n        }\n    }\n\n    findPrevSelectableRow(row: HTMLTableRowElement): HTMLTableRowElement {\n        let prevRow = <HTMLTableRowElement> row.previousElementSibling;\n        if (prevRow) {\n            if (DomHandler.hasClass(prevRow, 'p-selectable-row'))\n                return prevRow;\n            else\n                return this.findPrevSelectableRow(prevRow);\n        }\n        else {\n            return null;\n        }\n    }\n\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pSelectableRowDblClick]',\n    host: {\n        'class': 'p-element',\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected'\n    }\n})\nexport class SelectableRowDblClick implements OnInit, OnDestroy {\n\n    @Input(\"pSelectableRowDblClick\") data: any;\n\n    @Input(\"pSelectableRowIndex\") index: number;\n\n    @Input() pSelectableRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService) {\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n\n    @HostListener('dblclick', ['$event'])\n    onClick(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pContextMenuRow]',\n    host: {\n        'class': 'p-element',\n        '[class.p-highlight-contextmenu]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n    }\n})\nexport class ContextMenuRow {\n\n    @Input(\"pContextMenuRow\") data: any;\n\n    @Input(\"pContextMenuRowIndex\") index: number;\n\n    @Input() pContextMenuRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, private el: ElementRef) {\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.contextMenuSource$.subscribe((data) => {\n                this.selected = this.dt.equals(this.data, data);\n            });\n        }\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onContextMenu(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowRightClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n\n            this.el.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n\n    isEnabled() {\n        return this.pContextMenuRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pRowToggler]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class RowToggler {\n\n    @Input('pRowToggler') data: any;\n\n    @Input() pRowTogglerDisabled: boolean;\n\n    constructor(public dt: Table) { }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.toggleRow(this.data, event);\n            event.preventDefault();\n        }\n    }\n\n    isEnabled() {\n        return this.pRowTogglerDisabled !== true;\n    }\n}\n\n@Directive({\n    selector: '[pResizableColumn]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class ResizableColumn implements AfterViewInit, OnDestroy {\n\n    @Input() pResizableColumnDisabled: boolean;\n\n    resizer: HTMLSpanElement;\n\n    resizerMouseDownListener: any;\n\n    documentMouseMoveListener: any;\n\n    documentMouseUpListener: any;\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n            this.resizer = document.createElement('span');\n            this.resizer.className = 'p-column-resizer';\n            this.el.nativeElement.appendChild(this.resizer);\n\n            this.zone.runOutsideAngular(() => {\n                this.resizerMouseDownListener = this.onMouseDown.bind(this);\n                this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n            });\n        }\n    }\n\n    bindDocumentEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\n\n            this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n            document.addEventListener('mouseup', this.documentMouseUpListener);\n        });\n    }\n\n    unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseMoveListener = null;\n        }\n\n        if (this.documentMouseUpListener) {\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\n            this.documentMouseUpListener = null;\n        }\n    }\n\n    onMouseDown(event: MouseEvent) {\n        if (event.which === 1) {\n            this.dt.onColumnResizeBegin(event);\n            this.bindDocumentEvents();\n        }\n    }\n\n    onDocumentMouseMove(event: MouseEvent) {\n        this.dt.onColumnResize(event);\n    }\n\n    onDocumentMouseUp(event: MouseEvent) {\n        this.dt.onColumnResizeEnd();\n        this.unbindDocumentEvents();\n    }\n\n    isEnabled() {\n        return this.pResizableColumnDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n        }\n\n        this.unbindDocumentEvents();\n    }\n}\n\n@Directive({\n    selector: '[pReorderableColumn]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class ReorderableColumn implements AfterViewInit, OnDestroy {\n\n    @Input() pReorderableColumnDisabled: boolean;\n\n    dragStartListener: any;\n\n    dragOverListener: any;\n\n    dragEnterListener: any;\n\n    dragLeaveListener: any;\n\n    mouseDownListener: any;\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    }\n\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n\n            this.dragOverListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n\n            this.dragEnterListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n\n    onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    }\n\n    onDragStart(event) {\n        this.dt.onColumnDragStart(event, this.el.nativeElement);\n    }\n\n    onDragOver(event) {\n        event.preventDefault();\n    }\n\n    onDragEnter(event) {\n        this.dt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n\n    onDragLeave(event) {\n        this.dt.onColumnDragLeave(event);\n    }\n\n    @HostListener('drop', ['$event'])\n    onDrop(event) {\n        if (this.isEnabled()) {\n            this.dt.onColumnDrop(event, this.el.nativeElement);\n        }\n    }\n\n    isEnabled() {\n        return this.pReorderableColumnDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        this.unbindEvents();\n    }\n\n}\n\n@Directive({\n    selector: '[pEditableColumn]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class EditableColumn implements AfterViewInit, OnDestroy {\n\n    @Input(\"pEditableColumn\") data: any;\n\n    @Input(\"pEditableColumnField\") field: any;\n\n    @Input(\"pEditableColumnRowIndex\") rowIndex: number;\n\n    @Input() pEditableColumnDisabled: boolean;\n\n    @Input() pFocusCellSelector: string;\n\n    overlayEventListener;\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) {}\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: MouseEvent) {\n        if (this.isEnabled()) {\n            this.dt.selfClick = true;\n\n            if (this.dt.editingCell) {\n                if (this.dt.editingCell !== this.el.nativeElement) {\n                    if (!this.dt.isEditingCellValid()) {\n                        return;\n                    }\n\n                    this.closeEditingCell(true, event);\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    }\n\n    openCell() {\n        this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n        DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n        this.dt.onEditInit.emit({field: this.field, data: this.data, index: this.rowIndex});\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let focusCellSelector = this.pFocusCellSelector || 'input, textarea, select';\n                let focusableElement = DomHandler.findSingle(this.el.nativeElement, focusCellSelector);\n\n                if (focusableElement) {\n                    focusableElement.focus();\n                }\n            }, 50);\n        });\n\n        this.overlayEventListener = (e) => {\n            if (this.el && this.el.nativeElement.contains(e.target)) {\n                this.dt.selfClick = true;\n            }\n        }\n\n        this.dt.overlaySubscription = this.dt.overlayService.clickObservable.subscribe(this.overlayEventListener);\n    }\n\n    closeEditingCell(completed, event) {\n        if (completed)\n            this.dt.onEditComplete.emit({field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex});\n        else\n            this.dt.onEditCancel.emit({field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex});\n\n        DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n        this.dt.editingCell = null;\n        this.dt.editingCellData = null;\n        this.dt.editingCellField = null;\n        this.dt.unbindDocumentEditListener();\n\n        if (this.dt.overlaySubscription) {\n            this.dt.overlaySubscription.unsubscribe();\n        }\n    }\n\n    @HostListener('keydown.enter', ['$event'])\n    onEnterKeyDown(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(true, event);\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('keydown.escape', ['$event'])\n    onEscapeKeyDown(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(false, event);\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('keydown.tab', ['$event'])\n    @HostListener('keydown.shift.tab', ['$event'])\n    @HostListener('keydown.meta.tab', ['$event'])\n    onShiftKeyDown(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            if (event.shiftKey)\n                this.moveToPreviousCell(event);\n            else{\n                this.moveToNextCell(event);\n            }\n        }\n    }\n    @HostListener('keydown.arrowdown', ['$event'])\n    onArrowDown(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            let currentCell = this.findCell(event.target);\n            if (currentCell) {\n                let cellIndex = DomHandler.index(currentCell);\n                let targetCell = this.findNextEditableColumnByIndex(currentCell, cellIndex);\n\n                if (targetCell) {\n                    if (this.dt.isEditingCellValid()) {\n                        this.closeEditingCell(true, event);\n                    }\n\n                    DomHandler.invokeElementMethod(event.target, 'blur');\n                    DomHandler.invokeElementMethod(targetCell, 'click');\n                }\n\n                event.preventDefault();\n            }\n        }\n    }\n\n    @HostListener('keydown.arrowup', ['$event'])\n    onArrowUp(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            let currentCell = this.findCell(event.target);\n            if (currentCell) {\n                let cellIndex = DomHandler.index(currentCell);\n                let targetCell = this.findPrevEditableColumnByIndex(currentCell, cellIndex);\n\n                if (targetCell) {\n                    if (this.dt.isEditingCellValid()) {\n                        this.closeEditingCell(true, event);\n                    }\n\n                    DomHandler.invokeElementMethod(event.target, 'blur');\n                    DomHandler.invokeElementMethod(targetCell, 'click');\n                }\n\n                event.preventDefault();\n            }\n        }\n    }\n\n    @HostListener('keydown.arrowleft', ['$event'])\n    onArrowLeft(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            this.moveToPreviousCell(event);\n        }\n    }\n\n    @HostListener('keydown.arrowright', ['$event'])\n    onArrowRight(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            this.moveToNextCell(event);\n        }\n    }\n\n    findCell(element) {\n        if (element) {\n            let cell = element;\n            while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n                cell = cell.parentElement;\n            }\n\n            return cell;\n        }\n        else {\n            return null;\n        }\n    }\n\n    moveToPreviousCell(event: KeyboardEvent) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findPreviousEditableColumn(currentCell);\n\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n\n    moveToNextCell(event: KeyboardEvent) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findNextEditableColumn(currentCell);\n\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n\n    findPreviousEditableColumn(cell: Element) {\n        let prevCell = cell.previousElementSibling;\n\n        if (!prevCell) {\n            let previousRow = cell.parentElement.previousElementSibling;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n\n        if (prevCell) {\n            if (DomHandler.hasClass(prevCell, 'p-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    }\n\n    findNextEditableColumn(cell: Element) {\n        let nextCell = cell.nextElementSibling;\n\n        if (!nextCell) {\n            let nextRow = cell.parentElement.nextElementSibling;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n\n        if (nextCell) {\n            if (DomHandler.hasClass(nextCell, 'p-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    }\n\n    findNextEditableColumnByIndex(cell: Element, index: number) {\n        let nextRow = cell.parentElement.nextElementSibling;\n\n        if (nextRow) {\n            let nextCell = nextRow.children[index];\n\n            if (nextCell && DomHandler.hasClass(nextCell, 'p-editable-column')) {\n                return nextCell;\n            }\n\n            return null;\n        }\n        else {\n            return null;\n        }\n    }\n\n    findPrevEditableColumnByIndex(cell: Element, index: number) {\n        let prevRow = cell.parentElement.previousElementSibling;\n\n        if (prevRow) {\n            let prevCell = prevRow.children[index];\n\n            if (prevCell && DomHandler.hasClass(prevCell, 'p-editable-column')) {\n                return prevCell;\n            }\n\n            return null;\n        }\n        else {\n            return null;\n        }\n    }\n\n    isEnabled() {\n        return this.pEditableColumnDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.dt.overlaySubscription) {\n            this.dt.overlaySubscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pEditableRow]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class EditableRow {\n\n    @Input(\"pEditableRow\") data: any;\n\n    @Input() pEditableRowDisabled: boolean;\n\n    constructor(public el: ElementRef) {}\n\n    isEnabled() {\n        return this.pEditableRowDisabled !== true;\n    }\n\n}\n\n@Directive({\n    selector: '[pInitEditableRow]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class InitEditableRow {\n\n    constructor(public dt: Table, public editableRow: EditableRow) {}\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        this.dt.initRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n\n}\n\n@Directive({\n    selector: '[pSaveEditableRow]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class SaveEditableRow {\n\n    constructor(public dt: Table, public editableRow: EditableRow) {}\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n        event.preventDefault();\n    }\n}\n\n@Directive({\n    selector: '[pCancelEditableRow]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class CancelEditableRow {\n\n    constructor(public dt: Table, public editableRow: EditableRow) {}\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        this.dt.cancelRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n}\n\n@Component({\n    selector: 'p-cellEditor',\n    template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class CellEditor implements AfterContentInit {\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate>;\n\n    inputTemplate: TemplateRef<any>;\n\n    outputTemplate: TemplateRef<any>;\n\n    constructor(public dt: Table, @Optional() public editableColumn: EditableColumn, @Optional() public editableRow: EditableRow) { }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    }\n\n    get editing(): boolean {\n        return (this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement) ||\n                (this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data));\n    }\n\n}\n\n@Component({\n    selector: 'p-tableRadioButton',\n    template: `\n        <div class=\"p-radiobutton p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true, 'p-highlight':checked, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class TableRadioButton  {\n\n    @Input() disabled: boolean;\n\n    @Input() value: any;\n\n    @Input() index: number;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() ariaLabel: string;\n\n    @ViewChild('box') boxViewChild: ElementRef;\n\n    checked: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, public cd: ChangeDetectorRef) {\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n\n    onClick(event: Event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithRadio({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Component({\n    selector: 'p-tableCheckbox',\n    template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class TableCheckbox  {\n\n    @Input() disabled: boolean;\n\n    @Input() value: any;\n\n    @Input() index: number;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() required: boolean;\n\n    @Input() ariaLabel: string;\n\n    @ViewChild('box') boxViewChild: ElementRef;\n\n    checked: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, public cd: ChangeDetectorRef) {\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n\n    onClick(event: Event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithCheckbox({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Component({\n    selector: 'p-tableHeaderCheckbox',\n    template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class TableHeaderCheckbox  {\n\n    @ViewChild('box') boxViewChild: ElementRef;\n\n    @Input() disabled: boolean;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() ariaLabel: string;\n\n    checked: boolean;\n\n    selectionChangeSubscription: Subscription;\n\n    valueChangeSubscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, public cd: ChangeDetectorRef) {\n        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n\n        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n    }\n\n    ngOnInit() {\n        this.checked = this.updateCheckedState();\n    }\n\n    onClick(event: Event) {\n        if (!this.disabled) {\n            if (this.dt.value && this.dt.value.length > 0) {\n                this.dt.toggleRowsWithCheckbox(event, !this.checked);\n            }\n        }\n\n        DomHandler.clearSelection();\n    }\n\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    isDisabled() {\n        return this.disabled || !this.dt.value || !this.dt.value.length;\n    }\n\n    ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n\n    updateCheckedState() {\n        this.cd.markForCheck();\n        if (this.dt.filteredValue && !this.dt.lazy) {\n            const val = this.dt.filteredValue;\n            return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked());\n        }\n        else {\n            const val = this.dt.value;\n            const length = this.dt.lazy ? this.dt._totalRecords : val ? val.length : 0;\n            return (val && length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === length);\n        }\n    }\n\n    isAllFilteredValuesChecked() {\n        if (!this.dt.filteredValue) {\n            return false;\n        }\n        else {\n            for (let rowData of this.dt.filteredValue) {\n                if (!this.dt.isSelected(rowData)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pReorderableRowHandle]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class ReorderableRowHandle implements AfterViewInit {\n\n    @Input(\"pReorderableRowHandle\") index: number;\n\n    constructor(public el: ElementRef) {}\n\n    ngAfterViewInit() {\n        DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n    }\n}\n\n@Directive({\n    selector: '[pReorderableRow]',\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class ReorderableRow implements AfterViewInit {\n\n    @Input(\"pReorderableRow\") index: number;\n\n    @Input() pReorderableRowDisabled: boolean;\n\n    mouseDownListener: any;\n\n    dragStartListener: any;\n\n    dragEndListener: any;\n\n    dragOverListener: any;\n\n    dragLeaveListener: any;\n\n    dropListener: any;\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) {}\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.el.nativeElement.droppable = true;\n            this.bindEvents();\n        }\n    }\n\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n\n            this.dragEndListener = this.onDragEnd.bind(this);\n            this.el.nativeElement.addEventListener('dragend', this.dragEndListener);\n\n            this.dragOverListener = this.onDragOver.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n\n        if (this.dragStartListener) {\n            document.removeEventListener('dragstart', this.dragStartListener);\n            this.dragStartListener = null;\n        }\n\n        if (this.dragEndListener) {\n            document.removeEventListener('dragend', this.dragEndListener);\n            this.dragEndListener = null;\n        }\n\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n\n    onMouseDown(event) {\n        if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle'))\n            this.el.nativeElement.draggable = true;\n        else\n            this.el.nativeElement.draggable = false;\n    }\n\n    onDragStart(event) {\n        this.dt.onRowDragStart(event, this.index);\n    }\n\n    onDragEnd(event) {\n        this.dt.onRowDragEnd(event);\n        this.el.nativeElement.draggable = false;\n    }\n\n    onDragOver(event) {\n        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n        event.preventDefault();\n    }\n\n    onDragLeave(event) {\n        this.dt.onRowDragLeave(event, this.el.nativeElement);\n    }\n\n    isEnabled() {\n        return this.pReorderableRowDisabled !== true;\n    }\n\n    @HostListener('drop', ['$event'])\n    onDrop(event) {\n        if (this.isEnabled() && this.dt.rowDragging) {\n            this.dt.onRowDrop(event, this.el.nativeElement);\n        }\n\n        event.preventDefault()\n    }\n}\n\n@Component({\n    selector: 'p-columnFilterFormElement',\n    template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\" [attr.placeholder]=\"placeholder\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class ColumnFilterFormElement implements OnInit {\n\n    @Input() field: string;\n\n    @Input() type: string;\n\n    @Input() filterConstraint: FilterMetadata;\n\n    @Input() filterTemplate: TemplateRef<any>;\n\n    @Input() placeholder: string;\n\n    @Input() minFractionDigits: number\n\n    @Input() maxFractionDigits: number;\n\n    @Input() prefix: string;\n\n    @Input() suffix: string;\n\n    @Input() locale: string;\n\n    @Input() localeMatcher: string;\n\n    @Input() currency: string;\n\n    @Input() currencyDisplay: string;\n\n    @Input() useGrouping: boolean = true;\n\n    filterCallback: Function;\n\n    constructor(public dt: Table) {}\n\n    ngOnInit() {\n        this.filterCallback = value => {\n            this.filterConstraint.value = value;\n            this.dt._filter();\n        };\n    }\n\n    onModelChange(value: any) {\n        this.filterConstraint.value = value;\n\n        if (this.type === 'boolean' || value === '') {\n            this.dt._filter();\n        }\n    }\n\n    onTextInputEnterKeyDown(event: KeyboardEvent) {\n        this.dt._filter();\n        event.preventDefault();\n    }\n\n    onNumericInputKeyDown(event: KeyboardEvent) {\n        if (event.key === 'Enter') {\n            this.dt._filter();\n            event.preventDefault();\n        }\n    }\n}\n\n@Component({\n    selector: 'p-columnFilter',\n    template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\"\n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showClearButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" (click)=\"onContentClick()\"\n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('.12s cubic-bezier(0, 0, 0.2, 1)')\n            ]),\n            transition(':leave', [\n                animate('.1s linear', style({ opacity: 0 }))\n            ])\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'p-element'\n    }\n})\nexport class ColumnFilter implements AfterContentInit {\n\n    @Input() field: string;\n\n    @Input() type: string = 'text';\n\n    @Input() display: string = 'row';\n\n    @Input() showMenu: boolean = true;\n\n    @Input() matchMode: string;\n\n    @Input() operator: string = FilterOperator.AND;\n\n    @Input() showOperator: boolean = true;\n\n    @Input() showClearButton: boolean = true;\n\n    @Input() showApplyButton: boolean = true;\n\n    @Input() showMatchModes: boolean = true;\n\n    @Input() showAddButton: boolean = true;\n\n    @Input() hideOnClear: boolean = false;\n\n    @Input() placeholder: string;\n\n    @Input() matchModeOptions: SelectItem[];\n\n    @Input() maxConstraints: number = 2;\n\n    @Input() minFractionDigits: number;\n\n    @Input() maxFractionDigits: number;\n\n    @Input() prefix: string;\n\n    @Input() suffix: string;\n\n    @Input() locale: string;\n\n    @Input() localeMatcher: string;\n\n    @Input() currency: string;\n\n    @Input() currencyDisplay: string;\n\n    @Input() useGrouping: boolean = true;\n\n    @ViewChild('icon') icon: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    constructor(public el: ElementRef, public dt: Table, public renderer: Renderer2, public config: PrimeNGConfig, public overlayService: OverlayService) {}\n\n    overlaySubscription: Subscription;\n\n    headerTemplate: TemplateRef<any>;\n\n    filterTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    operatorOptions: any[];\n\n    overlayVisible: boolean;\n\n    overlay: HTMLElement;\n\n    scrollHandler: any;\n\n    documentClickListener: any;\n\n    documentResizeListener: any;\n\n    matchModes: SelectItem[];\n\n    translationSubscription: Subscription;\n\n    resetSubscription: Subscription;\n\n    selfClick: boolean;\n\n    overlayEventListener;\n\n    ngOnInit() {\n        if (!this.dt.filters[this.field]) {\n            this.initFieldFilterConstraint();\n        }\n\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.generateMatchModeOptions();\n            this.generateOperatorOptions();\n        });\n\n        this.resetSubscription = this.dt.tableService.resetSource$.subscribe(() => {\n            this.clearFilter();\n        })\n\n        this.generateMatchModeOptions();\n        this.generateOperatorOptions();\n    }\n\n    generateMatchModeOptions() {\n        this.matchModes = this.matchModeOptions ||\n        this.config.filterMatchModeOptions[this.type]?.map(key => {\n            return {label: this.config.getTranslation(key), value: key}\n        });\n    }\n\n    generateOperatorOptions() {\n        this.operatorOptions = [\n            {label: this.config.getTranslation(TranslationKeys.MATCH_ALL), value: FilterOperator.AND},\n            {label: this.config.getTranslation(TranslationKeys.MATCH_ANY), value: FilterOperator.OR}\n        ];\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'filter':\n                    this.filterTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                default:\n                    this.filterTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    initFieldFilterConstraint() {\n        let defaultMatchMode = this.getDefaultMatchMode();\n        this.dt.filters[this.field] = this.display == 'row' ? {value: null, matchMode: defaultMatchMode} : [{value: null, matchMode: defaultMatchMode, operator: this.operator}];\n    }\n\n    onMenuMatchModeChange(value: any, filterMeta: FilterMetadata) {\n        filterMeta.matchMode = value;\n\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n\n    onRowMatchModeChange(matchMode: string) {\n        (<FilterMetadata> this.dt.filters[this.field]).matchMode = matchMode;\n        this.dt._filter();\n        this.hide();\n    }\n\n    onRowMatchModeKeyDown(event: KeyboardEvent) {\n        let item = <HTMLLIElement> event.target;\n\n        switch(event.key) {\n            case 'ArrowDown':\n                var nextItem = this.findNextItem(item);\n                if (nextItem) {\n                    item.removeAttribute('tabindex');\n                    nextItem.tabIndex = '0';\n                    nextItem.focus();\n                }\n\n                event.preventDefault();\n            break;\n\n            case 'ArrowUp':\n                var prevItem = this.findPrevItem(item);\n                if (prevItem) {\n                    item.removeAttribute('tabindex');\n                    prevItem.tabIndex = '0';\n                    prevItem.focus();\n                }\n\n                event.preventDefault();\n            break;\n        }\n    }\n\n    onRowClearItemClick() {\n        this.clearFilter();\n        this.hide();\n    }\n\n    isRowMatchModeSelected(matchMode: string) {\n        return (<FilterMetadata> this.dt.filters[this.field]).matchMode === matchMode;\n    }\n\n    addConstraint() {\n        (<FilterMetadata[]> this.dt.filters[this.field]).push({value: null, matchMode: this.getDefaultMatchMode(), operator: this.getDefaultOperator()});\n        this.dt._filter();\n    }\n\n    removeConstraint(filterMeta: FilterMetadata) {\n        this.dt.filters[this.field] = (<FilterMetadata[]> this.dt.filters[this.field]).filter(meta => meta !== filterMeta);\n        this.dt._filter();\n    }\n\n    onOperatorChange(value) {\n        (<FilterMetadata[]> this.dt.filters[this.field]).forEach(filterMeta => {\n            filterMeta.operator = value;\n            this.operator = value;\n        });\n\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n\n    toggleMenu() {\n        this.overlayVisible = !this.overlayVisible;\n    }\n\n    onToggleButtonKeyDown(event: KeyboardEvent) {\n        switch(event.key) {\n            case 'Escape':\n            case 'Tab':\n                this.overlayVisible = false;\n            break;\n\n            case 'ArrowDown':\n                if (this.overlayVisible) {\n                    let focusable = DomHandler.getFocusableElements(this.overlay);\n                    if (focusable) {\n                        focusable[0].focus();\n                    }\n                    event.preventDefault();\n                }\n                else if (event.altKey) {\n                    this.overlayVisible = true;\n                    event.preventDefault();\n                }\n            break;\n        }\n    }\n\n    onEscape() {\n        this.overlayVisible = false;\n        this.icon.nativeElement.focus();\n    }\n\n    findNextItem(item: HTMLLIElement) {\n        let nextItem = <HTMLLIElement> item.nextElementSibling;\n\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'p-column-filter-separator')  ? this.findNextItem(nextItem) : nextItem;\n        else\n            return item.parentElement.firstElementChild;\n    }\n\n    findPrevItem(item: HTMLLIElement) {\n        let prevItem = <HTMLLIElement> item.previousElementSibling;\n\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'p-column-filter-separator')  ? this.findPrevItem(prevItem) : prevItem;\n        else\n        return item.parentElement.lastElementChild;\n    }\n\n    onContentClick() {\n        this.selfClick = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n\n                document.body.appendChild(this.overlay);\n                ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n                DomHandler.absolutePosition(this.overlay, this.icon.nativeElement)\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n\n                this.overlayEventListener = (e) => {\n                    if (this.overlay && this.overlay.contains(e.target)) {\n                        this.selfClick = true;\n                    }\n                }\n\n                this.overlaySubscription = this.overlayService.clickObservable.subscribe(this.overlayEventListener);\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n\n                if (this.overlaySubscription) {\n                    this.overlaySubscription.unsubscribe();\n                }\n            break;\n        }\n    }\n\n    onOverlayAnimationEnd(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'void':\n                ZIndexUtils.clear(event.element);\n            break;\n        }\n    }\n\n    getDefaultMatchMode(): string {\n        if (this.matchMode) {\n            return this.matchMode;\n        }\n        else {\n            if (this.type === 'text')\n                return FilterMatchMode.STARTS_WITH;\n            else if (this.type === 'numeric')\n                return FilterMatchMode.EQUALS;\n            else if (this.type === 'date')\n                return FilterMatchMode.DATE_IS;\n            else\n                return FilterMatchMode.CONTAINS;\n        }\n    }\n\n    getDefaultOperator(): string {\n        return this.dt.filters ? (<FilterMetadata[]> this.dt.filters[this.field])[0].operator: this.operator;\n    }\n\n    hasRowFilter() {\n        return this.dt.filters[this.field] && !this.dt.isFilterBlank((<FilterMetadata>this.dt.filters[this.field]).value);\n    }\n\n    get fieldConstraints(): FilterMetadata[] {\n        return this.dt.filters ? <FilterMetadata[]> this.dt.filters[this.field] : null;\n    }\n\n    get showRemoveIcon(): boolean {\n        return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n    }\n\n    get showMenuButton(): boolean {\n        return this.showMenu && (this.display === 'row' ? this.type !== 'boolean': true);\n    }\n\n    get isShowOperator(): boolean {\n        return this.showOperator && this.type !== 'boolean';\n    }\n\n    get isShowAddConstraint(): boolean {\n        return this.showAddButton && this.type !== 'boolean' && (this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints);\n    }\n\n    get applyButtonLabel(): string {\n        return this.config.getTranslation(TranslationKeys.APPLY);\n    }\n\n    get clearButtonLabel(): string {\n        return this.config.getTranslation(TranslationKeys.CLEAR);\n    }\n\n    get addRuleButtonLabel(): string {\n        return this.config.getTranslation(TranslationKeys.ADD_RULE);\n    }\n\n    get removeRuleButtonLabel(): string {\n        return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n    }\n\n    get noFilterLabel(): string {\n        return this.config.getTranslation(TranslationKeys.NO_FILTER);\n    }\n\n    hasFilter(): boolean {\n        let fieldFilter = this.dt.filters[this.field];\n        if (fieldFilter) {\n            if (Array.isArray(fieldFilter))\n                return !this.dt.isFilterBlank((<FilterMetadata[]> fieldFilter)[0].value);\n            else\n                return !this.dt.isFilterBlank(fieldFilter.value);\n        }\n\n        return false;\n    }\n\n    isOutsideClicked(event): boolean {\n        return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target)\n            || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target)\n            || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button')\n            || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n                if (this.overlayVisible && !this.selfClick && this.isOutsideClicked(event)) {\n                    this.hide();\n                }\n\n                this.selfClick = false;\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n            this.selfClick = false;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = () => this.hide();\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    hide() {\n        this.overlayVisible = false;\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n    }\n\n    clearFilter() {\n        this.initFieldFilterConstraint();\n        this.dt._filter();\n        if (this.hideOnClear)\n            this.hide();\n    }\n\n    applyFilter() {\n        this.dt._filter();\n        this.hide();\n    }\n\n    ngOnDestroy() {\n        if (this.overlay) {\n            this.el.nativeElement.appendChild(this.overlay);\n            ZIndexUtils.clear(this.overlay);\n            this.onOverlayHide();\n        }\n\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n\n        if (this.resetSubscription) {\n            this.resetSubscription.unsubscribe();\n        }\n\n        if (this.overlaySubscription) {\n            this.overlaySubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,PaginatorModule,InputTextModule,DropdownModule,ScrollingModule,FormsModule,ButtonModule,SelectButtonModule,CalendarModule,InputNumberModule,TriStateCheckboxModule],\n    exports: [Table,SharedModule,SortableColumn,FrozenColumn,RowGroupHeader,SelectableRow,RowToggler,ContextMenuRow,ResizableColumn,ReorderableColumn,EditableColumn,CellEditor,SortIcon,\n            TableRadioButton,TableCheckbox,TableHeaderCheckbox,ReorderableRowHandle,ReorderableRow,SelectableRowDblClick,EditableRow,InitEditableRow,SaveEditableRow,CancelEditableRow,ScrollingModule,ColumnFilter],\n    declarations: [Table,SortableColumn,FrozenColumn,RowGroupHeader,SelectableRow,RowToggler,ContextMenuRow,ResizableColumn,ReorderableColumn,EditableColumn,CellEditor,TableBody,SortIcon,\n            TableRadioButton,TableCheckbox,TableHeaderCheckbox,ReorderableRowHandle,ReorderableRow,SelectableRowDblClick,EditableRow,InitEditableRow,SaveEditableRow,CancelEditableRow,ColumnFilter,ColumnFilterFormElement]\n})\nexport class TableModule { }\n"],"x_google_ignoreList":[1,2,3,4]}