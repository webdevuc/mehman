{"version":3,"file":"default-src_app_shared_shared-search-results_shared-search-results_component_ts-node_modules_-a6a999.js","mappings":"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","names":["SearchResultModel","AirlineFliterModel","StopFilterModel","_angular_core__WEBPACK_IMPORTED_MODULE_4__","SharedMulticityComponent","constructor","homeService","toasterService","primengConfig","this","ngOnChanges","changes","property","multicityData","currentValue","showHomeSearch","ngOnInit","ripple","console","log","multiCityValues","showDefaultSearchRow","length","createBlankFormArray","getAirports","handleKeyboardEvent","event","keyCode","hideFromAirportResults","selectedIndex","hideToAirportResults","push","departureCode","departureCity","departureTitle","departureAirportName","arrivalCode","arrivalCity","arrivalTitle","arrivalAirportName","departureDate","moment__WEBPACK_IMPORTED_MODULE_1__","Date","add","toDate","departureDisplayDate","removeMulticityData","i","splice","fromClick","index","$","removeClass","hideFromToAirports","addClass","focus","toClick","searchDeparturePopup","clearTimeout","typingTimer","setTimeout","searchDeparture","doneTypingInterval","searchArrivalPopup","searchArrival","value","val","isSuggest","getAirportsSearch","subscribe","response","status","data","departureAirportResults","message","showError","Array","arrivalAirportResults","selectedFrom","airport","getData","code","city","name","country","substr","onUpdateMultiCity","emit","selectedTo","airports","getPopularAirports","popularCities","singleDatePicker","isInitial","rangePicker","destroy","singlePicker","returnDate","src_assets_js_lightpick_min_js__WEBPACK_IMPORTED_MODULE_0___default","field","document","getElementById","numberOfMonths","startDate","leaveDate","minDate","onSelect","sdate","show","selectors","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_9__","SharedSearchResultsComponent","router","authService","datePipe","locale","route","src_app_models_enums_model__WEBPACK_IMPORTED_MODULE_4__","responsiveOptions","breakpoint","numVisible","numScroll","getCurrentNavigation","extras","state","searchfilters","JSON","stringify","Travellers","parseInt","adult","toString","child","infant","TripTypeName","src_app_models_common__WEBPACK_IMPORTED_MODULE_2__","tripType","hideDepartureAirportResults","hideArrivalAirportResults","Home_init","window","scrollTo","searchResult","src_app_home_models_search_result_model__WEBPACK_IMPORTED_MODULE_10__","flights","airlineFliters","clear","originLocation","destinationLocation","travelClass","travelClassName","moment__WEBPACK_IMPORTED_MODULE_3__","airlineFilter","stopFilter","arrangeFilter","isLoaded","snapshot","queryParams","multiCityData","filters","trip","GetTripName","transform","isDirectFlightOnly","multiCities","loadFilters","filter","localStorage","getItem","model","parse","isSearchResults","ready","popover","html","click","departureClick","isdisplayed","classList","sharedMulticityData","forEach","mData","arrivalClick","multiSearchClick","dropDownMultiSearch","loadDates","setDepartureData","setArrivalData","multiCitiesValues","updateFromMultiCity","searchResults","mList","list","join","multiCityFromName","getAirportByCode","selectedOrigin","selectedDestination","selectedLeaveDate","selectedReturnDate","getDates","date","getDate","monthNames","getMonth","label","leaveDateOrignal","returnDateOrignal","getOneWayDates","days","fulureDates","pastDates","I","Math","abs","getTime","pastDate","futureDate","dates","validateOriginLocation","validateFromAndToAirports","swapLocations","getTravelClass","rangeDatePicker","secondField","repick","singleDate","endDate","start","end","setDateRange","onTripTypeChanged","tripTypeEnum","MultiCity","lodash__WEBPACK_IMPORTED_MODULE_1__","validateTravellers","applyTravellers","getPrice","price","altDaysFlights","element","sort","a","b","totalFare","flightMini","departure","departureDateTime","return","cheapestFlight","_angular_common__WEBPACK_IMPORTED_MODULE_11__","getSelectedPrice","showSearch","closeSearch","showDiv","setAttribute","isValid","item","toISOString","roleName","getRole","stopFilters","sessionStorage","removeItem","searchFlights","isShow","locationResult","bestFlight","searchResultEvent","flightResult","flightsArray","o","finalResult","x","flightId","find","childs","allAirline","unshift","allStop","text","fastestFlight","setItem","searchResultsErrMsg","loadResults","applyFilter","stops","result","airlineCode","totalElapsedTime","reviewBooking","flight","fareIndex","fareDetails","farePrices","Object","assign","airlineType","flightSegments","baggage","familyDescription","familyName","cabinName","url","serializeUrl","createUrlTree","open","isSearchResultsError","ngAfterViewInit","hasClass","getSelected","selectDate","getImageWeight","ngOnDestroy","_shared_multicity_shared_multicity_component__WEBPACK_IMPORTED_MODULE_5__","scrollBehaviorSupported","supportsScrollBehavior","BlockScrollStrategy","_viewportRuler","top","left","_document","attach","enable","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","_previousHTMLStyles","style","coerceCssPixelValue","_isEnabled","disable","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_overlayRef","hasAttached","run","detach","overlayRef","_scrollSubscription","stream","scrolled","threshold","_initialScrollPosition","scrollPosition","_detach","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","ScrollStrategyOptions","config","ScrollDispatcher","ViewportRuler","NgZone","Inject","args","DOCUMENT","OverlayConfig","configKeys","keys","key","undefined","ConnectionPositionPair","origin","overlay","offsetX","offsetY","panelClass","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","decorators","Optional","BaseOverlayDispatcher","_attachedOverlays","indexOf","OverlayKeyboardDispatcher","super","overlays","_keydownEvents","observers","next","_isAttached","addEventListener","_keydownListener","removeEventListener","OverlayOutsideClickDispatcher","_platform","_pointerDownEventTarget","_getEventTarget","target","type","slice","_outsidePointerEvents","_pointerDownListener","_clickListener","IOS","_cursorStyleIsSet","_cursorOriginalValue","cursor","Platform","OverlayContainer","container","_containerElement","parentNode","removeChild","getContainerElement","_createContainer","containerClass","isBrowser","_isTestEnvironment","oppositePlatformContainers","querySelectorAll","createElement","appendChild","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","Subject","Subscription","_backdropClick","scrollStrategy","_scrollStrategy","_positionStrategy","positionStrategy","backdropElement","_backdropElement","hostElement","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","pipe","take","_togglePointerEvents","hasBackdrop","_attachBackdrop","_toggleClasses","_attachments","disposeOnNavigation","_locationChanges","dispose","detachBackdrop","detachmentResult","_detachments","_detachContentWhenStable","isAttached","_disposeScrollStrategy","_disposeBackdrop","complete","backdropClick","attachments","detachments","keydownEvents","outsidePointerEvents","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","dir","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","backdropClass","insertBefore","_backdropClickHandler","requestAnimationFrame","runOutsideAngular","nextSibling","backdropToDetach","timeoutId","finishDetach","cssClasses","isAdd","coerceArray","cssClass","subscription","takeUntil","merge","children","backdrop","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_positionChanges","setOrigin","positions","_preferredPositions","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","_resizeSubscription","change","_positionLocked","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_isPushed","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_canPush","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","_scrollables","withPositions","withViewportMargin","margin","_viewportMargin","withFlexibleDimensions","flexibleDimensions","_hasFlexibleDimensions","withGrowAfterOpen","growAfterOpen","_growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","_offsetX","withDefaultOffsetY","_offsetY","withTransformOriginOn","selector","_transformOriginSelector","y","startX","_isRtl","endX","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","_lastBoundingBoxSize","isBoundedByRightViewportEdge","previousWidth","styles","_hasExactPosition","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","virtualKeyboardOffset","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentOverflow","axis","_appliedPanelClasses","ElementRef","Element","destination","source","hasOwnProperty","input","units","split","parseFloat","clientRect","floor","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFallbackPosition","onPositionChange","positionChanges","_direction","recalculateLastPosition","withDirection","withOffsetX","withOffsetY","wrapperClass","GlobalPositionStrategy","_width","_height","_bottomOffset","_topOffset","_alignItems","_rightOffset","_leftOffset","_justifyContent","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","_cssPosition","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","global","elementRef","flexibleConnectedTo","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","create","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","get","ApplicationRef","DomPortalOutlet","t","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ComponentFactoryResolver","Injector","Directionality","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","InjectionToken","CdkOverlayOrigin","ɵngcc0","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","EventEmitter","_templatePortal","TemplatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_hasBackdrop","coerceBooleanProperty","lockPosition","_lockPosition","_flexibleDimensions","_push","_attachSubscription","_detachSubscription","_backdropSubscription","_positionSubscription","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","overlayKeydown","ESCAPE","disableClose","hasModifierKey","preventDefault","overlayOutsideClick","_createPositionStrategy","currentPosition","viewportMargin","transformOriginSelector","positionChange","takeWhile","TemplateRef","Input","Output","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","reposition","OverlayModule","providers","imports","ScrollingModule","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","MatCardContent","MatCardTitle","MatCardSubtitle","MatCardActions","hostAttrs","hostVars","rf","align","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","MatCardAvatar","MatCard","_animationMode","ANIMATION_MODULE_TYPE","hostBindings","decls","encapsulation","MatCardHeader","ɵɵprojection","changeDetection","MatCardTitleGroup","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_c4","MatCardModule","MatCommonModule"],"sourceRoot":"webpack:///","sources":["./src/app/home/models/search-result.model.ts","./src/app/shared/shared-multicity/shared-multicity.component.html","./src/app/shared/shared-multicity/shared-multicity.component.ts","./src/app/shared/shared-search-results/shared-search-results.component.html","./src/app/shared/shared-search-results/shared-search-results.component.ts","../src/cdk/overlay/scroll/block-scroll-strategy.ts","../src/cdk/overlay/scroll/close-scroll-strategy.ts","../src/cdk/overlay/scroll/noop-scroll-strategy.ts","../src/cdk/overlay/position/scroll-clip.ts","../src/cdk/overlay/scroll/reposition-scroll-strategy.ts","../src/cdk/overlay/scroll/scroll-strategy-options.ts","../src/cdk/overlay/overlay-config.ts","../src/cdk/overlay/position/connected-position.ts","../src/cdk/overlay/dispatchers/base-overlay-dispatcher.ts","../src/cdk/overlay/dispatchers/overlay-keyboard-dispatcher.ts","../src/cdk/overlay/dispatchers/overlay-outside-click-dispatcher.ts","../src/cdk/overlay/overlay-container.ts","../src/cdk/overlay/overlay-ref.ts","../src/cdk/overlay/position/flexible-connected-position-strategy.ts","../src/cdk/overlay/position/connected-position-strategy.ts","../src/cdk/overlay/position/global-position-strategy.ts","../src/cdk/overlay/position/overlay-position-builder.ts","../src/cdk/overlay/overlay.ts","../src/cdk/overlay/overlay-directives.ts","../src/cdk/overlay/overlay-module.ts","../src/cdk/overlay/fullscreen-overlay-container.ts","../src/material/card/card.ts","../src/material/card/card-module.ts"],"sourcesContent":["import { FlightModel } from './flight.model';\r\n\r\nexport class SearchResultModel {\r\n  flights: Array<FlightModel>;\r\n  airlineFliters: Array<AirlineFliterModel>;\r\n  stopFilters: Array<StopFilterModel>;\r\n  bestFlight: FlightModel;\r\n  cheapestFlight: FlightModel;\r\n  fastestFlight: FlightModel;\r\n  altDaysFlights: Array<FlightModel>;\r\n}\r\n\r\nexport class AirlineFliterModel {\r\n  code: string;\r\n  name: string;\r\n  logo: string;\r\n}\r\n\r\nexport class StopFilterModel {\r\n  text: string;\r\n  value: string;\r\n}\r\n","<div *ngFor=\"let data of multicityData; let i = index;\">\r\n  <div [ngClass]=\"(showHomeSearch === true)?'book-box':'search-result-box wow fadeInUp'\">\r\n    <ul>\r\n      <li class=\"trip_type\" *ngIf=\"showHomeSearch === false\">\r\n        <div class=\"result-cont trip_type\">\r\n          <h5 style=\"width: 70px;\">TRIP-{{i+1}}</h5>\r\n        </div>\r\n      </li>\r\n      <li id=\"liDeparture\" data-trigger=\"manual\" data-toggle=\"popover\" data-placement=\"top\">\r\n        <a (click)=\"fromClick(i)\">\r\n          <div class=\"book-details book-details2\" [title]=\"data.departureTitle\">\r\n            <h5 *ngIf=\"showHomeSearch == true\">From</h5>\r\n            <p *ngIf=\"showHomeSearch == false\">From</p>\r\n\r\n            <input type=\"text\" class=\"mehman-inputfiled\" placeholder=\"Select City\" *ngIf=\"showHomeSearch == true\"\r\n              [(ngModel)]=\"data.departureCity\" readonly />\r\n            <input type=\"text\" class=\"mehman-inputfiled\" placeholder=\"Select City\" *ngIf=\"showHomeSearch == false\"\r\n              [(ngModel)]=\"data.departureAirportName\" readonly />\r\n            <p *ngIf=\"showHomeSearch == true\">{{ data.departureAirportName}}</p>\r\n          </div>\r\n        </a>\r\n        <div class=\"inputfiled-formboxes selectmulticityboxFrom{{i}}\">\r\n          <div class=\"inputfiled-formbox\">\r\n            <div class=\"input-search\">\r\n              <input type=\"text\" id=\"txtFromCity{{i}}\" class=\"input-from\" placeholder=\"From\"\r\n                (keyup)=\"searchDeparturePopup(i)\" autofocus />\r\n              <div class=\"seach-icon\">\r\n                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              </div>\r\n            </div>\r\n            <ul *ngIf=\"\r\n                                                    popularCities &&\r\n                                                    popularCities.length > 0 &&\r\n                                                    isSuggest === true\r\n                                                  \">\r\n              <li>\r\n                <p class=\"recent-tag\">Popular Cities</p>\r\n              </li>\r\n              <li *ngFor=\"let airport of popularCities\" role=\"option\" (click)=\"selectedFrom(airport,i)\"\r\n                style=\"cursor: pointer\">\r\n                <div class=\"hrtlCenter\" (click)=\"hideFromAirportResults(i)\">\r\n                  <div class=\"recent-searches\">\r\n                    <p>\r\n                      {{ airport.city }}, {{ airport.country }}\r\n                    </p>\r\n                    <p class=\"blackText\">{{ airport.name }}</p>\r\n                  </div>\r\n                  <div class=\"searches-code\">\r\n                    <p>{{ airport.code }}</p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <ul *ngIf=\"\r\n                                                    departureAirportResults &&\r\n                                                    departureAirportResults.length > 0\r\n                                                  \">\r\n              <li>\r\n                <p class=\"recent-tag\">SUGGESTIONS</p>\r\n              </li>\r\n              <li *ngFor=\"let airport of departureAirportResults\" role=\"option\" (click)=\"selectedFrom(airport,i)\"\r\n                style=\"cursor: pointer\">\r\n                <div class=\"hrtlCenter\" (click)=\"hideFromAirportResults(i)\">\r\n                  <div class=\"recent-searches\">\r\n                    <p>\r\n                      {{ airport.city }}, {{ airport.country }}\r\n                    </p>\r\n                    <p class=\"blackText\">{{ airport.name }}</p>\r\n                  </div>\r\n                  <div class=\"searches-code\">\r\n                    <p>{{ airport.code }}</p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li id=\"liArrival\" data-trigger=\"focus\" data-toggle=\"popover\" data-placement=\"top\"\r\n        [attr.data-content]=\"liArrivalErrMsg\">\r\n        <a (click)=\"toClick(i)\">\r\n          <div class=\"book-details book-details2\" [title]=\"data.arrivalTitle\">\r\n            <h5 *ngIf=\"showHomeSearch == true\">To</h5>\r\n            <p *ngIf=\"showHomeSearch == false\">To</p>\r\n            <input type=\"text\" class=\"mehman-inputfiled\" placeholder=\"Select City\" *ngIf=\"showHomeSearch == true\"\r\n              [(ngModel)]=\"data.arrivalCity\" readonly />\r\n            <input type=\"text\" class=\"mehman-inputfiled\" placeholder=\"Select City\" *ngIf=\"showHomeSearch == false\"\r\n              [(ngModel)]=\"data.arrivalAirportName\" readonly />\r\n            <p *ngIf=\"showHomeSearch == true\">{{ data.arrivalAirportName}}</p>\r\n          </div>\r\n        </a>\r\n        <div class=\"inputfiled-formboxes selectmulticityboxTo{{i}}\">\r\n          <div class=\"inputfiled-formbox\">\r\n\r\n            <div class=\"input-search\">\r\n              <input type=\"text\" id=\"txtToCity{{i}}\" class=\"input-from\" placeholder=\"To\" (keyup)=\"searchArrivalPopup(i)\"\r\n                autofocus />\r\n              <div class=\"seach-icon\">\r\n                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              </div>\r\n            </div>\r\n            <ul class=\"arriveselect\" *ngIf=\"\r\n                                                    arrivalAirportResults &&\r\n                                                    arrivalAirportResults.length > 0\r\n                                                  \">\r\n              <li>\r\n                <p class=\"recent-tag\">SUGGESTIONS</p>\r\n              </li>\r\n              <li *ngFor=\"let airport of arrivalAirportResults\" role=\"option\" (click)=\"selectedTo(airport,i)\"\r\n                style=\"cursor: pointer\">\r\n                <div class=\"hrtlCenter\" (click)=\"hideToAirportResults(i)\">\r\n                  <div class=\"recent-searches\">\r\n                    <p>\r\n                      {{ airport.city }}, {{ airport.country }}\r\n                    </p>\r\n                    <p class=\"blackText\">{{ airport.name }}</p>\r\n                  </div>\r\n                  <div class=\"searches-code\">\r\n                    <p>{{ airport.code }}</p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <ul class=\"arriveselect\" *ngIf=\"popularCities && popularCities.length > 0 && isSuggest === true\">\r\n              <li>\r\n                <p class=\"recent-tag\">POPULAR CITIES</p>\r\n              </li>\r\n              <li *ngFor=\"let airport of popularCities\" role=\"option\" (click)=\"selectedTo(airport,i)\"\r\n                style=\"cursor: pointer\">\r\n                <div class=\"hrtlCenter\" (click)=\"hideToAirportResults(i)\">\r\n                  <div class=\"recent-searches\">\r\n                    <p>\r\n                      {{ airport.city }}, {{ airport.country }}\r\n                    </p>\r\n                    <p class=\"blackText\">{{ airport.name }}</p>\r\n                  </div>\r\n                  <div class=\"searches-code\">\r\n                    <p>{{ airport.code }}</p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"dates\" style=\"cursor: pointer\" (click)=\"singleDatePicker(i,data)\">\r\n        <div class=\"book-details\">\r\n          <h5 *ngIf=\"showHomeSearch == true\">Departure</h5>\r\n          <p *ngIf=\"showHomeSearch == false\">Departure</p>\r\n          <h2>{{ data.departureDisplayDate | date: \"d MMM yy\" }}</h2>\r\n          <p *ngIf=\"showHomeSearch == true\">{{ data.departureDisplayDate | date: \"EEEE\" }}</p>\r\n          <div class=\"date\">\r\n            <input type=\"text\" name=\"daterange\" [(ngModel)]=\"data.departureDate\" id=\"dpLeaveDate{{i}}\" readonly />\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n\r\n        <button type=\"button\" pRipple class=\"p-button-raised p-button-text\" icon=\"pi pi-plus-circle\" pButton\r\n          (click)=\"createBlankFormArray()\" *ngIf=\"multicityData.length == i+1\" [disabled]=\"multicityData.length > 3\"\r\n          label=\"Add City\" (click)=\"onUpdateMultiCity.emit('AddCity')\"></button>\r\n\r\n        <button pButton pRipple type=\"button\" style=\"margin-left: 15px;\" icon=\"pi pi-times\"\r\n          class=\"p-button-rounded p-button-danger\" (click)=\"removeMulticityData(i)\"  (click)=\"onUpdateMultiCity.emit('DeleteRow')\"\r\n          *ngIf=\"multicityData.length == i+1 && i>0\"></button>\r\n\r\n        <button pButton type=\"button\" *ngIf=\"multicityData.length == i+1 && showHomeSearch === false\" style=\"margin-left: 15px;\" icon=\"pi pi-plus-search\" label=\"SEARCH\"\r\n                      icon=\"pi pi-search\" (click)=\"onSearch.emit('Search')\"></button>\r\n      </li>\r\n    </ul>\r\n\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport Lightpick from 'src/assets/js/lightpick.min.js';\r\nimport * as moment from 'moment';\r\nimport { TripType } from 'src/app/models/enums.model';\r\nimport { AirportEntity } from 'src/app/home/entities/airport-entity.model';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { HomeService } from 'src/app/home/shared/home.service';\r\nimport { ToasterService } from 'src/app/services/toastr-service';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-shared-multicity',\r\n  templateUrl: './shared-multicity.component.html',\r\n  styleUrls: ['./shared-multicity.component.scss'],\r\n})\r\nexport class SharedMulticityComponent implements OnInit, OnChanges {\r\n  constructor(\r\n    private homeService: HomeService,\r\n    private toasterService: ToasterService,\r\n    private primengConfig: PrimeNGConfig\r\n  ) {}\r\n  rangePicker: any;\r\n  singlePicker: any;\r\n  returnDate: any;\r\n  leaveDate: any[];\r\n  tripType: TripType;\r\n  airports: Array<AirportEntity>;\r\n  departureTitle: string;\r\n  departureAirportName: string;\r\n  arrivalTitle: string;\r\n  liArrivalErrMsg: string;\r\n  departureCity: string;\r\n  arrivalCity: string;\r\n  arrivalAirportName: string;\r\n  arrivalAirportResults: Array<AirportEntity>;\r\n  departureAirportResults: Array<AirportEntity>;\r\n  popularCities = [];\r\n  multicityData: any = [];\r\n  isSuggest = true;\r\n\r\n  typingTimer: any; // timer identifier\r\n  doneTypingInterval = 1000; // time in ms (1 second)\r\n  selectedIndex: any;\r\n\r\n  @Input()\r\n  public showHomeSearch = true;\r\n\r\n  @Input()\r\n  public showDefaultSearchRow = true;\r\n\r\n  @Input()\r\n  public multiCityValues: any = [];\r\n\r\n  @Output() onSearch = new EventEmitter<any>();\r\n  @Output() onUpdateMultiCity = new EventEmitter<any>();\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // tslint:disable-next-line: forin\r\n    for (const property in changes) {\r\n      if (property === 'multiCityValues') {\r\n        this.multicityData = changes[property].currentValue;\r\n      }\r\n      if (property === 'showHomeSearch') {\r\n        this.showHomeSearch = changes[property].currentValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.primengConfig.ripple = true;\r\n    console.log(this.multiCityValues);\r\n    if (this.showDefaultSearchRow && this.multiCityValues.length === 0) {\r\n      this.createBlankFormArray();\r\n    }\r\n    this.getAirports();\r\n  }\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.keyCode === 27) {\r\n      this.hideFromAirportResults(this.selectedIndex);\r\n      this.hideToAirportResults(this.selectedIndex);\r\n    }\r\n  }\r\n\r\n  createBlankFormArray() {\r\n    this.multicityData.push({\r\n      departureCode: '',\r\n      departureCity: '',\r\n      departureTitle: '',\r\n      departureAirportName: '',\r\n      arrivalCode: '',\r\n      arrivalCity: '',\r\n      arrivalTitle: '',\r\n      arrivalAirportName: '',\r\n      departureDate: moment(new Date()).add(1, 'days').toDate(),\r\n      departureDisplayDate: moment(new Date()).add(1, 'days').toDate(),\r\n    });\r\n  }\r\n  removeMulticityData(i) {\r\n    this.multicityData.splice(i, 1);\r\n  }\r\n  fromClick(index) {\r\n    this.selectedIndex = index;\r\n    $('.selectbox1').removeClass('select1');\r\n    $('.selectbox2').removeClass('select2');\r\n    this.hideFromToAirports(index);\r\n    $('.selectmulticityboxFrom' + index).addClass('select1');\r\n    $('#txtFromCity' + index).focus();\r\n  }\r\n\r\n  toClick(index) {\r\n    this.selectedIndex = index;\r\n    $('.selectbox1').removeClass('select1');\r\n    $('.selectbox2').removeClass('select2');\r\n    this.hideFromToAirports(index);\r\n    $('.selectmulticityboxTo' + index).addClass('select2');\r\n    $('#txtFromCity' + index).focus();\r\n  }\r\n\r\n  hideFromToAirports(index) {\r\n    for (let i = 0; i < this.multicityData.length; i++) {\r\n      this.hideFromAirportResults(i);\r\n      this.hideToAirportResults(i);\r\n    }\r\n  }\r\n\r\n  searchDeparturePopup(index) {\r\n    clearTimeout(this.typingTimer);\r\n    this.typingTimer = setTimeout(() => {\r\n      this.searchDeparture(index);\r\n    }, this.doneTypingInterval);\r\n  }\r\n\r\n  searchArrivalPopup(index) {\r\n    clearTimeout(this.typingTimer);\r\n    this.typingTimer = setTimeout(() => {\r\n      this.searchArrival(index);\r\n    }, this.doneTypingInterval);\r\n  }\r\n\r\n  searchDeparture(index) {\r\n    const value = $('#txtFromCity' + index).val();\r\n    if (value) {\r\n      this.isSuggest = false;\r\n      this.homeService.getAirportsSearch(value).subscribe((response) => {\r\n        if (response) {\r\n          if (response.status === 'success') {\r\n            if (response.data) {\r\n              this.departureAirportResults = response.data;\r\n            }\r\n          } else {\r\n            if (response.message) {\r\n              this.toasterService.showError(response.message, 'Error');\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.departureAirportResults = new Array<AirportEntity>();\r\n      this.isSuggest = true;\r\n    }\r\n  }\r\n  searchArrival(index) {\r\n    const value = $('#txtToCity' + index).val();\r\n    if (value) {\r\n      this.isSuggest = false;\r\n      this.homeService.getAirportsSearch(value).subscribe((response) => {\r\n        if (response) {\r\n          if (response.status === 'success') {\r\n            if (response.data) {\r\n              this.arrivalAirportResults = response.data;\r\n            }\r\n          } else {\r\n            if (response.message) {\r\n              this.toasterService.showError(response.message, 'Error');\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.arrivalAirportResults = new Array<AirportEntity>();\r\n      this.isSuggest = true;\r\n    }\r\n  }\r\n\r\n  selectedFrom(airport: AirportEntity, index) {\r\n    const getData = this.multicityData[index];\r\n    getData.departureCode = airport.code;\r\n    getData.departureCity = airport.city;\r\n    getData.departureTitle =\r\n      airport.code + ', ' + airport.name + ' ' + airport.country;\r\n    if (getData.departureTitle.length > 30) {\r\n      getData.departureAirportName =\r\n        getData.departureTitle.substr(0, 30) + '...';\r\n    } else {\r\n      getData.departureAirportName = getData.departureTitle;\r\n    }\r\n    this.multicityData[index] = getData;\r\n    $('#txtFromCity' + index).val('');\r\n    this.onUpdateMultiCity.emit('UpdateValue');\r\n    // this.validateOriginLocation();\r\n    // this.validateFromAndToAirports();\r\n  }\r\n  selectedTo(airport: AirportEntity, index) {\r\n    const getData = this.multicityData[index];\r\n    getData.arrivalCode = airport.code;\r\n    getData.arrivalCity = airport.city;\r\n    getData.arrivalTitle =\r\n      airport.code + ', ' + airport.name + ' ' + airport.country;\r\n    if (getData.arrivalTitle.length > 30) {\r\n      getData.arrivalAirportName = getData.arrivalTitle.substr(0, 30) + '...';\r\n    } else {\r\n      getData.arrivalAirportName = getData.arrivalTitle;\r\n    }\r\n    this.multicityData[index] = getData;\r\n    $('#txtToCity' + index).val('');\r\n    this.onUpdateMultiCity.emit('UpdateValue');\r\n    // this.destinationLocation = airport.code;\r\n    // this.arrivalCity = airport.city;\r\n    // this.arrivalTitle =\r\n    //   airport.code + ', ' + airport.name + ' ' + airport.country;\r\n    // if (this.arrivalTitle.length > 30) {\r\n    //   this.arrivalAirportName = this.arrivalTitle.substr(0, 30) + '...';\r\n    // } else {\r\n    //   this.arrivalAirportName = this.arrivalTitle;\r\n    // }\r\n    // this.arrivalAirportResults = new Array<AirportEntity>();\r\n    // $('#txtTo').val('');\r\n    // this.validateDestinationLocation();\r\n    // this.validateFromAndToAirports();\r\n  }\r\n\r\n  hideFromAirportResults(index) {\r\n    $('.selectmulticityboxFrom' + index).removeClass('select1');\r\n  }\r\n  hideToAirportResults(index) {\r\n    $('.selectmulticityboxTo' + index).removeClass('select2');\r\n  }\r\n\r\n  getAirports() {\r\n    this.airports = new Array<AirportEntity>();\r\n    this.homeService.getPopularAirports().subscribe((response) => {\r\n      if (response) {\r\n        if (response.status === 'success') {\r\n          if (response.data) {\r\n            this.airports = response.data;\r\n            this.popularCities = response.data;\r\n          }\r\n        } else {\r\n          if (response.message) {\r\n            // alert(response.message);\r\n            this.toasterService.showError(\r\n              'Airports are not loaded! Please try again.',\r\n              'Error'\r\n            );\r\n          } else {\r\n            this.toasterService.showError(\r\n              'Airports are not loaded! Please try again.',\r\n              'Error'\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        // alert(\"Airports are not loaded! Please try again.\");\r\n        this.toasterService.showError(\r\n          'Airports are not loaded! Please try again.',\r\n          'Error'\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  singleDatePicker(index, data, isInitial: boolean = false) {\r\n    if (this.rangePicker) {\r\n      this.rangePicker.destroy();\r\n    } // destroy old picker object\r\n    if (this.singlePicker) {\r\n      this.singlePicker.destroy();\r\n    } // destroy old picker object\r\n    if (this.returnDate) {\r\n      this.returnDate = null;\r\n    }\r\n    this.singlePicker = new Lightpick({\r\n      field: document.getElementById('dpLeaveDate' + index),\r\n      numberOfMonths: 2,\r\n      startDate: this.leaveDate,\r\n      minDate: moment().toDate(),\r\n      onSelect: (sdate) => {\r\n        const getData = this.multicityData[index];\r\n        getData.departureDate = sdate;\r\n        getData.departureDisplayDate = sdate;\r\n        this.multicityData[index] = getData;\r\n      },\r\n    });\r\n\r\n    if (!isInitial) {\r\n      this.singlePicker.show();\r\n    }\r\n  }\r\n}\r\n","<section class=\"hero-headermain\">\r\n  <div class=\"container\">\r\n    <!-- <button  type=\"button\">Modify</button> -->\r\n    <div\r\n      class=\"modifyButton text-white d-flex justify-content-between\"\r\n      *ngIf=\"isShow\"\r\n     >    \r\n     \r\n      <div class=\"modifyButton d-lg-none\" *ngIf=\"locationResult\">\r\n        {{ originLocation }}\r\n        <a\r\n          ><img\r\n            src=\"assets/images/home/exchange.svg\"\r\n            class=\"img-fluid mx-2\"\r\n            alt=\"\" /></a\r\n        >{{ destinationLocation }}\r\n        <a class=\"mx-1 py-2 text-white bg-success px-2 rounded\">{{\r\n          leaveDate | date : \"MMMM d, y\"\r\n        }}</a>\r\n      </div>\r\n      <div class=\"modifyButton d-flex justify-content-end d-lg-none\" (click)=\"showSearch()\" *ngIf=\"!isdisplayed\">\r\n        <a>Modify</a>\r\n        <svg \r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-pen\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path\r\n            d=\"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n        <div id=\"search-div\"  class=\"search-result-box wow fadeInUp d-xs-none\">\r\n          <ul>\r\n            <li class=\"trip_type\">\r\n              <div class=\"dropdown\">\r\n                <a\r\n                  class=\"dropdown-toggle pointer\"\r\n                  role=\"button\"\r\n                  id=\"dropdownMenuLink\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"true\"\r\n                >\r\n                  <div class=\"result-cont trip_type\">\r\n                    <p>Trip Type</p>\r\n                    <h5>{{ TripTypeName }}</h5>\r\n                  </div>\r\n                </a>\r\n                <div class=\"dropdown-menu\">\r\n                  <a\r\n                    class=\"dropdown-item pointer\"\r\n                    (click)=\"onTripTypeChanged(tripTypeEnum.OneWay)\"\r\n                  >\r\n                    <div class=\"result-cont\">\r\n                      <h5>One Way</h5>\r\n                    </div>\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item pointer\"\r\n                    (click)=\"onTripTypeChanged(tripTypeEnum.RoundTrip)\"\r\n                  >\r\n                    <div class=\"result-cont\">\r\n                      <h5>Round Trip</h5>\r\n                    </div>\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item pointer\"\r\n                    (click)=\"onTripTypeChanged(tripTypeEnum.MultiCity)\"\r\n                  >\r\n                    <div class=\"result-cont\">\r\n                      <h5>Multicity</h5>\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              id=\"liDeparture\"\r\n              data-trigger=\"manual\"\r\n              data-toggle=\"popover\"\r\n              data-placement=\"top\"\r\n              data-content=\"<span><i class='fa fa-exclamation-triangle'></i> Enter valid From airport</span>\"\r\n              *ngIf=\"tripType !== tripTypeEnum.MultiCity\"\r\n            >\r\n              <a (click)=\"departureClick()\">\r\n                <div\r\n                  class=\"book-details book-details1\"\r\n                  [title]=\"departureTitle\"\r\n                >\r\n                  <p>From</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"mehman-inputfiled\"\r\n                    value=\"{{ departureAirportName }}\"\r\n                    \r\n                  />\r\n                </div>\r\n              </a>\r\n              <div\r\n                class=\"exchange\"\r\n                (click)=\"swapLocations()\"\r\n                style=\"cursor: pointer\"\r\n              >\r\n                <a\r\n                  ><img\r\n                    src=\"assets/images/home/exchange.svg\"\r\n                    class=\"img-fluid\"\r\n                    alt=\"\"\r\n                /></a>\r\n              </div>\r\n              <div class=\"inputfiled-formboxes selectbox1\">\r\n                <div class=\"inputfiled-formbox\">\r\n                  <div class=\"input-search\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"txtFrom\"\r\n                      class=\"input-from\"\r\n                      placeholder=\"From\"\r\n                      (keyup)=\"searchDeparturePopup()\"\r\n                      autofocus\r\n                    />\r\n                    <div class=\"seach-icon\">\r\n                      <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <ul\r\n                    *ngIf=\"\r\n                      popularCities &&\r\n                      popularCities.length > 0 &&\r\n                      isSuggest === true\r\n                    \"\r\n                  >\r\n                    <li>\r\n                      <p class=\"recent-tag\">Popular Cities</p>\r\n                    </li>\r\n                    <li\r\n                      *ngFor=\"let airport of popularCities\"\r\n                      role=\"option\"\r\n                      (click)=\"selectedOrigin(airport)\"\r\n                      style=\"cursor: pointer\"\r\n                    >\r\n                      <div\r\n                        class=\"hrtlCenter\"\r\n                        (click)=\"hideDepartureAirportResults()\"\r\n                      >\r\n                        <div class=\"recent-searches\">\r\n                          <p>{{ airport.city }}, {{ airport.country }}</p>\r\n                          <p class=\"blackText\">{{ airport.name }}</p>\r\n                        </div>\r\n                        <div class=\"searches-code\">\r\n                          <p>{{ airport.code }}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                  <ul\r\n                    *ngIf=\"\r\n                      departureAirportResults &&\r\n                      departureAirportResults.length > 0\r\n                    \"\r\n                  >\r\n                    <li>\r\n                      <p class=\"recent-tag\">SUGGESTIONS</p>\r\n                    </li>\r\n                    <li\r\n                      *ngFor=\"let airport of departureAirportResults\"\r\n                      role=\"option\"\r\n                      (click)=\"selectedOrigin(airport)\"\r\n                      style=\"cursor: pointer\"\r\n                    >\r\n                      <div\r\n                        class=\"hrtlCenter\"\r\n                        (click)=\"hideDepartureAirportResults()\"\r\n                      >\r\n                        <div class=\"recent-searches\">\r\n                          <p>{{ airport.city }}, {{ airport.country }}</p>\r\n                          <p class=\"blackText\">{{ airport.name }}</p>\r\n                        </div>\r\n                        <div class=\"searches-code\">\r\n                          <p>{{ airport.code }}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              id=\"liArrival\"\r\n              data-trigger=\"manual\"\r\n              data-toggle=\"popover\"\r\n              data-placement=\"top\"\r\n              data-content=\"<span><i class='fa fa-exclamation-triangle'></i> Enter valid To airport</span>\"\r\n              *ngIf=\"tripType !== tripTypeEnum.MultiCity\"\r\n            >\r\n              <a (click)=\"arrivalClick()\">\r\n                <div class=\"book-details book-details2\" [title]=\"arrivalTitle\">\r\n                  <p>To</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"mehman-inputfiled\"\r\n                    value=\"{{ arrivalAirportName }}\"\r\n                    \r\n                  />\r\n                </div>\r\n              </a>\r\n              <div class=\"inputfiled-formboxes selectbox2\">\r\n                <div class=\"inputfiled-formbox\">\r\n                  <div class=\"input-search\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"txtTo\"\r\n                      class=\"input-from\"\r\n                      placeholder=\"To\"\r\n                      (keyup)=\"searchArrivalPopup()\"\r\n                      autofocus\r\n                    />\r\n                    <div class=\"seach-icon\">\r\n                      <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <ul\r\n                    class=\"arriveselect\"\r\n                    *ngIf=\"\r\n                      popularCities &&\r\n                      popularCities.length > 0 &&\r\n                      isSuggest === true\r\n                    \"\r\n                  >\r\n                    <li>\r\n                      <p class=\"recent-tag\">POPULAR CITIES</p>\r\n                    </li>\r\n                    <li\r\n                      *ngFor=\"let airport of popularCities\"\r\n                      role=\"option\"\r\n                      (click)=\"selectedDestination(airport)\"\r\n                      style=\"cursor: pointer\"\r\n                    >\r\n                      <div\r\n                        class=\"hrtlCenter\"\r\n                        (click)=\"hideArrivalAirportResults()\"\r\n                      >\r\n                        <div class=\"recent-searches\">\r\n                          <p>{{ airport.city }}, {{ airport.country }}</p>\r\n                          <p class=\"blackText\">{{ airport.name }}</p>\r\n                        </div>\r\n                        <div class=\"searches-code\">\r\n                          <p>{{ airport.code }}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                  <ul\r\n                    class=\"arriveselect\"\r\n                    *ngIf=\"\r\n                      arrivalAirportResults && arrivalAirportResults.length > 0\r\n                    \"\r\n                  >\r\n                    <li>\r\n                      <p class=\"recent-tag\">SUGGESTIONS</p>\r\n                    </li>\r\n                    <li\r\n                      *ngFor=\"let airport of arrivalAirportResults\"\r\n                      role=\"option\"\r\n                      (click)=\"selectedDestination(airport)\"\r\n                      style=\"cursor: pointer\"\r\n                    >\r\n                      <div\r\n                        class=\"hrtlCenter\"\r\n                        (click)=\"hideArrivalAirportResults()\"\r\n                      >\r\n                        <div class=\"recent-searches\">\r\n                          <p>{{ airport.city }}, {{ airport.country }}</p>\r\n                          <p class=\"blackText\">{{ airport.name }}</p>\r\n                        </div>\r\n                        <div class=\"searches-code\">\r\n                          <p>{{ airport.code }}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li id=\"liMultiCity\" *ngIf=\"tripType === tripTypeEnum.MultiCity\">\r\n              <a (click)=\"multiSearchClick()\">\r\n                <div\r\n                  class=\"book-details book-details2\"\r\n                  [title]=\"multiCityFromName\"\r\n                >\r\n                  <p>From</p>\r\n                  <!-- <p-toggleButton class=\"mehman-inputfiled\" [(ngModel)]=\"dropDownMultiSearch\" onLabel=\"{{ multiCityFromName }}\" offLabel=\"{{ multiCityFromName }}\"\r\n                  [style]=\"{'width': '351px'}\"></p-toggleButton> -->\r\n                  <!-- <mat-slide-toggle name=\"fldMultiCity\" ngDefaultControl class=\"mehman-inputfiled\" style=\"width: 351px;\"  [(ngModel)]=\"dropDownMultiSearch\">Slide Toggle Checked: {{dropDownMultiSearch}}</mat-slide-toggle> -->\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"mehman-inputfiled\"\r\n                    style=\"width: 351px\"\r\n                    value=\"{{ multiCityFromName }}\"\r\n                    \r\n                  />\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li\r\n              class=\"dates\"\r\n              style=\"cursor: pointer\"\r\n              (click)=\"singleDatePicker()\"\r\n              *ngIf=\"tripType !== tripTypeEnum.MultiCity\"\r\n            >\r\n              <div class=\"book-details\">\r\n                <p>Departure</p>\r\n                <h2>{{ leaveDate | date : \"d MMM yy\" }}</h2>\r\n                <div class=\"date\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"daterange\"\r\n                    id=\"dpLeaveDate\"\r\n                    \r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              class=\"dates\"\r\n              style=\"cursor: pointer\"\r\n              (click)=\"rangeDatePicker()\"\r\n              *ngIf=\"tripType !== tripTypeEnum.MultiCity\"\r\n            >\r\n              <div class=\"book-details\">\r\n                <p>Return</p>\r\n                <div *ngIf=\"returnDate\">\r\n                  <h2>{{ returnDate | date : \"d MMM yy\" }}</h2>\r\n                </div>\r\n                <div *ngIf=\"!returnDate\" class=\"nodate\">\r\n                  <p>Tap to add a return date from bigger discounts</p>\r\n                </div>\r\n                <div class=\"date\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"daterange\"\r\n                    id=\"dpReturnDate\"\r\n                    \r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              id=\"liTravellers\"\r\n              style=\"cursor: pointer\"\r\n              data-trigger=\"manual\"\r\n              data-toggle=\"popover\"\r\n              data-placement=\"top\"\r\n              data-content=\"<span><i class='fa fa-exclamation-triangle'></i> Upto 9 passengers allowed</span>\"\r\n            >\r\n              <div class=\"book-details adult-details result-cont\">\r\n                <p>Travellers</p>\r\n                <ng-container *ngIf=\"Travellers == 1\">\r\n                  <h2>{{ Travellers }} Traveller</h2>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"Travellers > 1\">\r\n                  <h2>{{ Travellers }} Travellers</h2>\r\n                </ng-container>\r\n              </div>\r\n              <div class=\"book-peron book-peron1\">\r\n                <div class=\"adult\">\r\n                  <h5>ADULTS (12y +)</h5>\r\n                  <ul class=\"adults\">\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"1\"\r\n                        id=\"rbAdult1\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult1\" [ngClass]=\"{ active: adult == 1 }\"\r\n                        >1</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"2\"\r\n                        id=\"rbAdult2\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult2\" [ngClass]=\"{ active: adult == 2 }\"\r\n                        >2</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"3\"\r\n                        id=\"rbAdult3\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult3\" [ngClass]=\"{ active: adult == 3 }\"\r\n                        >3</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"4\"\r\n                        id=\"rbAdult4\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult4\" [ngClass]=\"{ active: adult == 4 }\"\r\n                        >4</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"5\"\r\n                        id=\"rbAdult5\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult5\" [ngClass]=\"{ active: adult == 5 }\"\r\n                        >5</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"6\"\r\n                        id=\"rbAdult6\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult6\" [ngClass]=\"{ active: adult == 6 }\"\r\n                        >6</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"7\"\r\n                        id=\"rbAdult7\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult7\" [ngClass]=\"{ active: adult == 7 }\"\r\n                        >7</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"8\"\r\n                        id=\"rbAdult8\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult8\" [ngClass]=\"{ active: adult == 8 }\"\r\n                        >8</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"9\"\r\n                        id=\"rbAdult9\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult9\" [ngClass]=\"{ active: adult == 9 }\"\r\n                        >9</label\r\n                      >\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"adult\">\r\n                  <h5>CHILDREN (2y - 12y)</h5>\r\n                  <ul class=\"child\">\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"0\"\r\n                        id=\"rbChild0\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild0\" [ngClass]=\"{ active: child == 0 }\"\r\n                        >0</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"1\"\r\n                        id=\"rbChild1\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild1\" [ngClass]=\"{ active: child == 1 }\"\r\n                        >1</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"2\"\r\n                        id=\"rbChild2\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild2\" [ngClass]=\"{ active: child == 2 }\"\r\n                        >2</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"3\"\r\n                        id=\"rbChild3\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild3\" [ngClass]=\"{ active: child == 3 }\"\r\n                        >3</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"4\"\r\n                        id=\"rbChild4\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild4\" [ngClass]=\"{ active: child == 4 }\"\r\n                        >4</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"5\"\r\n                        id=\"rbChild5\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild5\" [ngClass]=\"{ active: child == 5 }\"\r\n                        >5</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"6\"\r\n                        id=\"rbChild6\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild6\" [ngClass]=\"{ active: child == 6 }\"\r\n                        >6</label\r\n                      >\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"adult\">\r\n                  <h5>INFANTS (below 2y)</h5>\r\n                  <ul class=\"infant\">\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"0\"\r\n                        id=\"rbInfant0\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant0\" [ngClass]=\"{ active: infant == 0 }\"\r\n                        >0</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"1\"\r\n                        id=\"rbInfant1\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant1\" [ngClass]=\"{ active: infant == 1 }\"\r\n                        >1</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"2\"\r\n                        id=\"rbInfant2\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant2\" [ngClass]=\"{ active: infant == 2 }\"\r\n                        >2</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"3\"\r\n                        id=\"rbInfant3\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant3\" [ngClass]=\"{ active: infant == 3 }\"\r\n                        >3</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"4\"\r\n                        id=\"rbInfant4\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant4\" [ngClass]=\"{ active: infant == 4 }\"\r\n                        >4</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"5\"\r\n                        id=\"rbInfant5\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant5\" [ngClass]=\"{ active: infant == 5 }\"\r\n                        >5</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"6\"\r\n                        id=\"rbInfant6\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant6\" [ngClass]=\"{ active: infant == 6 }\"\r\n                        >6</label\r\n                      >\r\n                    </li>\r\n                  </ul>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    class=\"book-btn apply-travellers\"\r\n                    (click)=\"applyTravellers()\"\r\n                    >Apply</a\r\n                  >\r\n                </div>\r\n                <div class=\"adult\">\r\n                  <span style=\"color: red\" *ngIf=\"Travellers > 9\">\r\n                    Upto 9 passengers allowed\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            <li class=\"primium\">\r\n              <div class=\"book-details class-details result-cont\">\r\n                <p>CLASS</p>\r\n                <h2>{{ travelClassName }}</h2>\r\n              </div>\r\n              <div class=\"book-peron book-peron2\">\r\n                <div class=\"adult\">\r\n                  <h5>CHOOSE TRAVEL CLASS</h5>\r\n                  <ul class=\"buisness\">\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"travel-class\"\r\n                        value=\"Y\"\r\n                        id=\"rbTravelClassEconomy\"\r\n                        class=\"Adult Business\"\r\n                        [(ngModel)]=\"travelClass\"\r\n                        (click)=\"getTravelClass()\"\r\n                      />\r\n                      <label\r\n                        for=\"rbTravelClassEconomy\"\r\n                        [ngClass]=\"{ active: travelClassName == 'Economy' }\"\r\n                        >Economy</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"travel-class\"\r\n                        id=\"rbTravelClassBusiness\"\r\n                        value=\"C\"\r\n                        class=\"Adult Business\"\r\n                        [(ngModel)]=\"travelClass\"\r\n                        (click)=\"getTravelClass()\"\r\n                      />\r\n                      <label\r\n                        for=\"rbTravelClassBusiness\"\r\n                        [ngClass]=\"{ active: travelClassName == 'Business' }\"\r\n                        >Business</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"travel-class\"\r\n                        id=\"rbTravelClassFirst\"\r\n                        value=\"F\"\r\n                        class=\"Adult Business\"\r\n                        [(ngModel)]=\"travelClass\"\r\n                        (click)=\"getTravelClass()\"\r\n                      />\r\n                      <label\r\n                        for=\"rbTravelClassFirst\"\r\n                        [ngClass]=\"{ active: travelClassName == 'First' }\"\r\n                        >First</label\r\n                      >\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              class=\"result-btn\"\r\n              *ngIf=\"\r\n                tripType !== tripTypeEnum.MultiCity &&\r\n                dropDownMultiSearch === false\r\n              \"\r\n            >\r\n              <a (click)=\"searchResults()\">SEARCH</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div\r\n          *ngIf=\"this.isdisplayed\"\r\n          class=\"search-result-box wow fadeInUp d-lg-none mt-4\"\r\n        >\r\n        <div style=\"text-align: end; background-color: white; padding: 10px;\">\r\n          <a class=\"text-end\">\r\n            <button\r\n              (click)=\"closeSearch()\"\r\n              type=\"button\"\r\n              class=\"close\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </a>\r\n        </div>\r\n          <ul>\r\n            \r\n            <li class=\"trip_type\">\r\n              <div class=\"dropdown\">\r\n                <a\r\n                  class=\"dropdown-toggle\"\r\n                  role=\"button\"\r\n                  id=\"dropdownMenuLink\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"true\"\r\n                  style=\"cursor: pointer\"\r\n                >\r\n                  <div class=\"result-cont trip_type\">\r\n                    <p>Trip Type</p>\r\n                    <h5>{{ TripTypeName }}</h5>\r\n                  </div>\r\n                </a>\r\n                <div class=\"dropdown-menu\">\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    (click)=\"onTripTypeChanged(tripTypeEnum.OneWay)\"\r\n                    style=\"cursor: pointer\"\r\n                  >\r\n                    <div class=\"result-cont\">\r\n                      <h5>One Way</h5>\r\n                    </div>\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    (click)=\"onTripTypeChanged(tripTypeEnum.RoundTrip)\"\r\n                    style=\"cursor: pointer\"\r\n                  >\r\n                    <div class=\"result-cont\">\r\n                      <h5>Round Trip</h5>\r\n                    </div>\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    (click)=\"onTripTypeChanged(tripTypeEnum.MultiCity)\"\r\n                    style=\"cursor: pointer\"\r\n                  >\r\n                    <div class=\"result-cont\">\r\n                      <h5>Multicity</h5>\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              id=\"liDeparture\"\r\n              data-trigger=\"manual\"\r\n              data-toggle=\"popover\"\r\n              data-placement=\"top\"\r\n              data-content=\"<span><i class='fa fa-exclamation-triangle'></i> Enter valid From airport</span>\"\r\n              *ngIf=\"tripType !== tripTypeEnum.MultiCity\"\r\n            >\r\n              <a (click)=\"departureClick()\">\r\n                <div\r\n                  class=\"book-details book-details-hide\"\r\n                  [title]=\"departureTitle\"\r\n                >\r\n                  <p>From</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"mehman-inputfiled\"\r\n                    value=\"{{ departureAirportName }}\"\r\n                    \r\n                  />\r\n                </div>\r\n              </a>\r\n              <div\r\n                class=\"exchange\"\r\n                (click)=\"swapLocations()\"\r\n                style=\"cursor: pointer\"\r\n              >\r\n                <a\r\n                  ><img\r\n                    src=\"assets/images/home/exchange.svg\"\r\n                    class=\"img-fluid\"\r\n                    alt=\"\"\r\n                /></a>\r\n              </div>\r\n              <div id=\"selectCity1\" class=\"inputfiled-formboxes selectbox1\">\r\n                <div class=\"inputfiled-formbox\">\r\n                  <div class=\"input-search\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"txtFrom\"\r\n                      class=\"input-from\"\r\n                      placeholder=\"From\"\r\n                      (keyup)=\"searchDeparturePopup()\"\r\n                      autofocus\r\n                    />\r\n                    <div class=\"seach-icon\">\r\n                      <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <ul\r\n                    *ngIf=\"\r\n                      popularCities &&\r\n                      popularCities.length > 0 &&\r\n                      isSuggest === true\r\n                    \"\r\n                  >\r\n                    <li>\r\n                      <p class=\"recent-tag\">Popular Cities</p>\r\n                    </li>\r\n                    <li\r\n                      *ngFor=\"let airport of popularCities\"\r\n                      role=\"option\"\r\n                      (click)=\"selectedOrigin(airport)\"\r\n                      style=\"cursor: pointer\"\r\n                    >\r\n                      <div\r\n                        class=\"hrtlCenter\"\r\n                        (click)=\"hideDepartureAirportResults()\"\r\n                      >\r\n                        <div class=\"recent-searches\">\r\n                          <p>{{ airport.city }}, {{ airport.country }}</p>\r\n                          <p class=\"blackText\">{{ airport.name }}</p>\r\n                        </div>\r\n                        <div class=\"searches-code\">\r\n                          <p>{{ airport.code }}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                  <ul\r\n                    *ngIf=\"\r\n                      departureAirportResults &&\r\n                      departureAirportResults.length > 0\r\n                    \"\r\n                  >\r\n                    <li>\r\n                      <p class=\"recent-tag\">SUGGESTIONS</p>\r\n                    </li>\r\n                    <li\r\n                      *ngFor=\"let airport of departureAirportResults\"\r\n                      role=\"option\"\r\n                      (click)=\"selectedOrigin(airport)\"\r\n                      style=\"cursor: pointer\"\r\n                    >\r\n                      <div\r\n                        class=\"hrtlCenter\"\r\n                        (click)=\"hideDepartureAirportResults()\"\r\n                      >\r\n                        <div class=\"recent-searches\">\r\n                          <p>{{ airport.city }}, {{ airport.country }}</p>\r\n                          <p class=\"blackText\">{{ airport.name }}</p>\r\n                        </div>\r\n                        <div class=\"searches-code\">\r\n                          <p>{{ airport.code }}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              id=\"liArrival\"\r\n              data-trigger=\"manual\"\r\n              data-toggle=\"popover\"\r\n              data-placement=\"top\"\r\n              data-content=\"<span><i class='fa fa-exclamation-triangle'></i> Enter valid To airport</span>\"\r\n              *ngIf=\"tripType !== tripTypeEnum.MultiCity\"\r\n            >\r\n              <a (click)=\"arrivalClick()\">\r\n                <div class=\"book-details book-details2\" [title]=\"arrivalTitle\">\r\n                  <p>To</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"mehman-inputfiled\"\r\n                    value=\"{{ arrivalAirportName }}\"\r\n                    \r\n                  />\r\n                </div>\r\n              </a>\r\n              <div id=\"selectCity\" class=\"inputfiled-formboxes selectbox2\">\r\n                <div class=\"inputfiled-formbox\">\r\n                  <div class=\"input-search\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"txtTo\"\r\n                      class=\"input-from\"\r\n                      placeholder=\"To\"\r\n                      (keyup)=\"searchArrivalPopup()\"\r\n                      autofocus\r\n                    />\r\n                    <div class=\"seach-icon\">\r\n                      <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <ul\r\n                    class=\"arriveselect\"\r\n                    *ngIf=\"\r\n                      popularCities &&\r\n                      popularCities.length > 0 &&\r\n                      isSuggest === true\r\n                    \"\r\n                  >\r\n                    <li>\r\n                      <p class=\"recent-tag\">POPULAR CITIES</p>\r\n                    </li>\r\n                    <li\r\n                      *ngFor=\"let airport of popularCities\"\r\n                      role=\"option\"\r\n                      (click)=\"selectedDestination(airport)\"\r\n                      style=\"cursor: pointer\"\r\n                    >\r\n                      <div\r\n                        class=\"hrtlCenter\"\r\n                        (click)=\"hideArrivalAirportResults()\"\r\n                      >\r\n                        <div class=\"recent-searches\">\r\n                          <p>{{ airport.city }}, {{ airport.country }}</p>\r\n                          <p class=\"blackText\">{{ airport.name }}</p>\r\n                        </div>\r\n                        <div class=\"searches-code\">\r\n                          <p>{{ airport.code }}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                  <ul\r\n                    class=\"arriveselect\"\r\n                    *ngIf=\"\r\n                      arrivalAirportResults && arrivalAirportResults.length > 0\r\n                    \"\r\n                  >\r\n                    <li>\r\n                      <p class=\"recent-tag\">SUGGESTIONS</p>\r\n                    </li>\r\n                    <li\r\n                      *ngFor=\"let airport of arrivalAirportResults\"\r\n                      role=\"option\"\r\n                      (click)=\"selectedDestination(airport)\"\r\n                      style=\"cursor: pointer\"\r\n                    >\r\n                      <div\r\n                        class=\"hrtlCenter\"\r\n                        (click)=\"hideArrivalAirportResults()\"\r\n                      >\r\n                        <div class=\"recent-searches\">\r\n                          <p>{{ airport.city }}, {{ airport.country }}</p>\r\n                          <p class=\"blackText\">{{ airport.name }}</p>\r\n                        </div>\r\n                        <div class=\"searches-code\">\r\n                          <p>{{ airport.code }}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li id=\"liMultiCity\" *ngIf=\"tripType === tripTypeEnum.MultiCity\">\r\n              <a (click)=\"multiSearchClick()\">\r\n                <div\r\n                  class=\"book-details book-details2\"\r\n                  [title]=\"multiCityFromName\"\r\n                >\r\n                  <p>From</p>\r\n                  <!-- <p-toggleButton class=\"mehman-inputfiled\" [(ngModel)]=\"dropDownMultiSearch\" onLabel=\"{{ multiCityFromName }}\" offLabel=\"{{ multiCityFromName }}\"\r\n                  [style]=\"{'width': '351px'}\"></p-toggleButton> -->\r\n                  <!-- <mat-slide-toggle name=\"fldMultiCity\" ngDefaultControl class=\"mehman-inputfiled\" style=\"width: 351px;\"  [(ngModel)]=\"dropDownMultiSearch\">Slide Toggle Checked: {{dropDownMultiSearch}}</mat-slide-toggle> -->\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"mehman-inputfiled\"\r\n                    style=\"width: 351px\"\r\n                    value=\"{{ multiCityFromName }}\"\r\n                    \r\n                  />\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li\r\n              class=\"dates\"\r\n              style=\"cursor: pointer\"\r\n              (click)=\"singleDatePicker()\"\r\n              *ngIf=\"tripType !== tripTypeEnum.MultiCity\"\r\n            >\r\n              <div class=\"book-details\">\r\n                <p>Departure</p>\r\n                <h2>{{ leaveDate | date : \"d MMM yy\" }}</h2>\r\n                <div class=\"date\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"daterange\"\r\n                    id=\"dpLeaveDate1\"\r\n                    \r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              class=\"dates\"\r\n              style=\"cursor: pointer\"\r\n              (click)=\"rangeDatePicker()\"\r\n              *ngIf=\"tripType !== tripTypeEnum.MultiCity\"\r\n            >\r\n              <div class=\"book-details\">\r\n                <p>Return</p>\r\n                <div *ngIf=\"returnDate\">\r\n                  <h2>{{ returnDate | date : \"d MMM yy\" }}</h2>\r\n                </div>\r\n                <div *ngIf=\"!returnDate\" class=\"nodate\">\r\n                  <p>Tap to add a return date from bigger discounts</p>\r\n                </div>\r\n                <div class=\"date\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"daterange\"\r\n                    id=\"dpReturnDate1\"\r\n                    \r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              id=\"liTravellers\"\r\n              style=\"cursor: pointer\"\r\n              data-trigger=\"manual\"\r\n              data-toggle=\"popover\"\r\n              data-placement=\"top\"\r\n              data-content=\"<span><i class='fa fa-exclamation-triangle'></i> Upto 9 passengers allowed</span>\"\r\n            >\r\n              <div class=\"book-details adult-details result-cont\">\r\n                <p>Travellers</p>\r\n                <ng-container *ngIf=\"Travellers == 1\">\r\n                  <h2>{{ Travellers }} Traveller</h2>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"Travellers > 1\">\r\n                  <h2>{{ Travellers }} Travellers</h2>\r\n                </ng-container>\r\n              </div>\r\n              <div class=\"book-peron book-peron1\">\r\n                <div class=\"adult\">\r\n                  <h5>ADULTS (12y +)</h5>\r\n                  <ul class=\"adults\">\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"1\"\r\n                        id=\"rbAdult1\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult1\" [ngClass]=\"{ active: adult == 1 }\"\r\n                        >1</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"2\"\r\n                        id=\"rbAdult2\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult2\" [ngClass]=\"{ active: adult == 2 }\"\r\n                        >2</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"3\"\r\n                        id=\"rbAdult3\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult3\" [ngClass]=\"{ active: adult == 3 }\"\r\n                        >3</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"4\"\r\n                        id=\"rbAdult4\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult4\" [ngClass]=\"{ active: adult == 4 }\"\r\n                        >4</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"5\"\r\n                        id=\"rbAdult5\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult5\" [ngClass]=\"{ active: adult == 5 }\"\r\n                        >5</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"6\"\r\n                        id=\"rbAdult6\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult6\" [ngClass]=\"{ active: adult == 6 }\"\r\n                        >6</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"7\"\r\n                        id=\"rbAdult7\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult7\" [ngClass]=\"{ active: adult == 7 }\"\r\n                        >7</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"8\"\r\n                        id=\"rbAdult8\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult8\" [ngClass]=\"{ active: adult == 8 }\"\r\n                        >8</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"adult\"\r\n                        value=\"9\"\r\n                        id=\"rbAdult9\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"adult\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbAdult9\" [ngClass]=\"{ active: adult == 9 }\"\r\n                        >9</label\r\n                      >\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"adult\">\r\n                  <h5>CHILDREN (2y - 12y)</h5>\r\n                  <ul class=\"child\">\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"0\"\r\n                        id=\"rbChild0\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild0\" [ngClass]=\"{ active: child == 0 }\"\r\n                        >0</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"1\"\r\n                        id=\"rbChild1\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild1\" [ngClass]=\"{ active: child == 1 }\"\r\n                        >1</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"2\"\r\n                        id=\"rbChild2\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild2\" [ngClass]=\"{ active: child == 2 }\"\r\n                        >2</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"3\"\r\n                        id=\"rbChild3\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild3\" [ngClass]=\"{ active: child == 3 }\"\r\n                        >3</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"4\"\r\n                        id=\"rbChild4\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild4\" [ngClass]=\"{ active: child == 4 }\"\r\n                        >4</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"5\"\r\n                        id=\"rbChild5\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild5\" [ngClass]=\"{ active: child == 5 }\"\r\n                        >5</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"child\"\r\n                        value=\"6\"\r\n                        id=\"rbChild6\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"child\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbChild6\" [ngClass]=\"{ active: child == 6 }\"\r\n                        >6</label\r\n                      >\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"adult\">\r\n                  <h5>INFANTS (below 2y)</h5>\r\n                  <ul class=\"infant\">\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"0\"\r\n                        id=\"rbInfant0\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant0\" [ngClass]=\"{ active: infant == 0 }\"\r\n                        >0</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"1\"\r\n                        id=\"rbInfant1\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant1\" [ngClass]=\"{ active: infant == 1 }\"\r\n                        >1</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"2\"\r\n                        id=\"rbInfant2\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant2\" [ngClass]=\"{ active: infant == 2 }\"\r\n                        >2</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"3\"\r\n                        id=\"rbInfant3\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant3\" [ngClass]=\"{ active: infant == 3 }\"\r\n                        >3</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"4\"\r\n                        id=\"rbInfant4\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant4\" [ngClass]=\"{ active: infant == 4 }\"\r\n                        >4</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"5\"\r\n                        id=\"rbInfant5\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant5\" [ngClass]=\"{ active: infant == 5 }\"\r\n                        >5</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"infant\"\r\n                        value=\"6\"\r\n                        id=\"rbInfant6\"\r\n                        class=\"Adult\"\r\n                        [(ngModel)]=\"infant\"\r\n                        (ngModelChange)=\"validateTravellers()\"\r\n                      />\r\n                      <label for=\"rbInfant6\" [ngClass]=\"{ active: infant == 6 }\"\r\n                        >6</label\r\n                      >\r\n                    </li>\r\n                  </ul>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    class=\"book-btn apply-travellers\"\r\n                    (click)=\"applyTravellers()\"\r\n                    >Apply</a\r\n                  >\r\n                </div>\r\n                <div class=\"adult\">\r\n                  <span style=\"color: red\" *ngIf=\"Travellers > 9\">\r\n                    Upto 9 passengers allowed\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            <li class=\"primium\">\r\n              <div class=\"book-details class-details result-cont\">\r\n                <p>CLASS</p>\r\n                <h2>{{ travelClassName }}</h2>\r\n              </div>\r\n              <div class=\"book-peron book-peron2\">\r\n                <div class=\"adult\">\r\n                  <h5>CHOOSE TRAVEL CLASS</h5>\r\n                  <ul class=\"buisness\">\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"travel-class\"\r\n                        value=\"Y\"\r\n                        id=\"rbTravelClassEconomy\"\r\n                        class=\"Adult Business\"\r\n                        [(ngModel)]=\"travelClass\"\r\n                        (click)=\"getTravelClass()\"\r\n                      />\r\n                      <label\r\n                        for=\"rbTravelClassEconomy\"\r\n                        [ngClass]=\"{ active: travelClassName == 'Economy' }\"\r\n                        >Economy</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"travel-class\"\r\n                        id=\"rbTravelClassBusiness\"\r\n                        value=\"C\"\r\n                        class=\"Adult Business\"\r\n                        [(ngModel)]=\"travelClass\"\r\n                        (click)=\"getTravelClass()\"\r\n                      />\r\n                      <label\r\n                        for=\"rbTravelClassBusiness\"\r\n                        [ngClass]=\"{ active: travelClassName == 'Business' }\"\r\n                        >Business</label\r\n                      >\r\n                    </li>\r\n                    <li>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"travel-class\"\r\n                        id=\"rbTravelClassFirst\"\r\n                        value=\"F\"\r\n                        class=\"Adult Business\"\r\n                        [(ngModel)]=\"travelClass\"\r\n                        (click)=\"getTravelClass()\"\r\n                      />\r\n                      <label\r\n                        for=\"rbTravelClassFirst\"\r\n                        [ngClass]=\"{ active: travelClassName == 'First' }\"\r\n                        >First</label\r\n                      >\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li\r\n              class=\"result-btn\"\r\n              *ngIf=\"\r\n                tripType !== tripTypeEnum.MultiCity &&\r\n                dropDownMultiSearch === false\r\n              \"\r\n            >\r\n              <a (click)=\"searchResults()\">SEARCH</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div\r\n          *ngIf=\"\r\n            tripType === tripTypeEnum.MultiCity && dropDownMultiSearch === true\r\n          \"\r\n        >\r\n          <app-shared-multicity\r\n            [showHomeSearch]=\"false\"\r\n            [showDefaultSearchRow]=\"showDefaultSearchRow\"\r\n            [multiCityValues]=\"multiCitiesValues\"\r\n            (onSearch)=\"searchResults()\"\r\n            (onUpdateMultiCity)=\"updateFromMultiCity()\"\r\n          ></app-shared-multicity>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section *ngIf=\"isLoaded\">\r\n  <div class=\"container mt-3\" *ngIf=\"searchResult\">\r\n    <p-carousel\r\n      [value]=\"list\"\r\n      [numVisible]=\"7\"\r\n      [numScroll]=\"7\"\r\n      [circular]=\"false\"\r\n      [showIndicators]=\"false\"\r\n      [responsiveOptions]=\"responsiveOptions\"\r\n    >\r\n      <ng-template let-date pTemplate=\"item\">\r\n        <div class=\"fare-item\">\r\n          <div class=\"fare-item-content cust-box-row\">\r\n            <div\r\n              [className]=\"\r\n                getSelected(date) ? 'cust-boxs shadow-sm active' : 'cust-boxs'\r\n              \"\r\n            >\r\n              <span (click)=\"selectDate(date)\">{{ date.label }}</span>\r\n            </div>\r\n            <div [className]=\"'cust-boxs cust-boxs-price'\">\r\n              <span (click)=\"selectDate(date)\"\r\n                >PKR\r\n                {{\r\n                  getSelected(date) ? getSelectedPrice(date) : getPrice(date)\r\n                }}</span\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </p-carousel>\r\n  </div>\r\n</section>\r\n\r\n<!-- search results -->\r\n<!-- <section class=\"hero-notification\" *ngIf=\"isLoaded\">\r\n  <div class=\"container\">\r\n    <div class=\"row cust-box-row\" *ngIf=\"searchResult\">\r\n      <div [className]=\"getSelected(date) ? 'cust-boxs shadow-sm active' : 'cust-boxs'\" *ngFor=\"let date of list\"\r\n        (click)=\"selectDate(date)\">\r\n        {{date.label}}\r\n      </div>\r\n      <div (click)=\"selectDate(date)\" [className]=\"'cust-boxs cust-boxs-price'\" *ngFor=\"let date of list\">\r\n        PKR {{getPrice(date) | number}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section> -->\r\n\r\n<!-- filter -->\r\n<section class=\"hero-filter\" *ngIf=\"isSearchResults\">\r\n  <div class=\"container\">\r\n    <div class=\"row\" *ngIf=\"!isLoaded\">\r\n      <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n        <img\r\n          class=\"flight-img\"\r\n          src=\"../../../assets/images/search/flights.gif\"\r\n        />\r\n        <h1 class=\"text-center\" style=\"padding-bottom: 150px\">\r\n          Hold on, we're fetching flights for you\r\n        </h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"isSearchResultsError\">\r\n      <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n        <div class=\"flt-details wow fadeIn\">\r\n          <div\r\n            class=\"alert alert-danger col-lg-12 col-sm-12 col-xs-12\"\r\n            role=\"alert\"\r\n          >\r\n            {{ searchResultsErrMsg }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-3 col-sm-12 col-xs-12\">\r\n        <div\r\n          class=\"header-offer-box sort-filter wow fadeInUp\"\r\n          *ngIf=\"\r\n            searchResult &&\r\n            ((searchResult.stopFilters &&\r\n              searchResult.stopFilters.length > 0) ||\r\n              (searchResult.airlineFliters &&\r\n                searchResult.airlineFliters.length > 0))\r\n          \"\r\n        >\r\n          <div class=\"offer-header\">\r\n            <div class=\"offer-title offer-title-2\">\r\n              <h5>\r\n                Filter by\r\n                <span *ngIf=\"searchResult && searchResult.flights && isLoaded\"\r\n                  >({{ searchResult.flights?.length }}\r\n                  <ng-container *ngIf=\"searchResult.flights?.length == 1\"\r\n                    >result</ng-container\r\n                  >\r\n                  <ng-container *ngIf=\"searchResult.flights?.length != 1\"\r\n                    >results</ng-container\r\n                  >\r\n                  found)\r\n                </span>\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter-cont\">\r\n            <div\r\n              class=\"flt-check\"\r\n              *ngIf=\"\r\n                searchResult.stopFilters && searchResult.stopFilters.length > 0\r\n              \"\r\n            >\r\n              <h5>Stops</h5>\r\n\r\n              <label\r\n                class=\"containerlabel\"\r\n                *ngFor=\"let filter of searchResult.stopFilters; let i = index\"\r\n              >\r\n                {{ filter.text }}\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"stop-filter_{{ i }}\"\r\n                  name=\"stop-filter\"\r\n                  [value]=\"filter.value\"\r\n                  [(ngModel)]=\"stopFilter\"\r\n                  (ngModelChange)=\"applyFilter()\"\r\n                />\r\n                <span class=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n            <div\r\n              class=\"flt-check\"\r\n              *ngIf=\"\r\n                searchResult.airlineFliters &&\r\n                searchResult.airlineFliters.length > 0\r\n              \"\r\n            >\r\n              <h5>Preffered Airlines</h5>\r\n\r\n              <label\r\n                class=\"containerlabel\"\r\n                *ngFor=\"\r\n                  let filter of searchResult.airlineFliters;\r\n                  let i = index\r\n                \"\r\n              >\r\n                <ng-container *ngIf=\"!filter.logo\">{{\r\n                  filter.name\r\n                }}</ng-container>\r\n                <img\r\n                  [src]=\"'assets/images/search/' + filter.logo\"\r\n                  class=\"img-fluid\"\r\n                  alt=\"\"\r\n                  *ngIf=\"filter.logo\"\r\n                  style=\"width: 40%\"\r\n                />\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"airline-filter_{{ i }}\"\r\n                  name=\"airline-filter\"\r\n                  [value]=\"filter.code\"\r\n                  [(ngModel)]=\"airlineFilter\"\r\n                  (ngModelChange)=\"applyFilter()\"\r\n                />\r\n                <span class=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"header-offer-box sort-filter Arrenge-box wow fadeInUp\"\r\n          *ngIf=\"\r\n            isLoaded &&\r\n            searchResult &&\r\n            searchResult.flights &&\r\n            searchResult.flights.length > 0\r\n          \"\r\n        >\r\n          <div class=\"offer-header\">\r\n            <div class=\"offer-title offer-title-2\">\r\n              <h5>Arrange by</h5>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter-cont\">\r\n            <div class=\"flt-check\">\r\n              <label class=\"containerlabel\">\r\n                Lowest Fare\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"arrange-by_lowest-fare\"\r\n                  name=\"arrange-by\"\r\n                  value=\"lowest_fare\"\r\n                  [(ngModel)]=\"arrangeFilter\"\r\n                  (ngModelChange)=\"applyFilter()\"\r\n                />\r\n                <span class=\"checkmark\"></span>\r\n              </label>\r\n\r\n              <label class=\"containerlabel\">\r\n                Shortest Travel Time\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"arrange-by_shortest-travel-time\"\r\n                  name=\"arrange-by\"\r\n                  value=\"shortest_travel_time\"\r\n                  [(ngModel)]=\"arrangeFilter\"\r\n                  (ngModelChange)=\"applyFilter()\"\r\n                />\r\n                <span class=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"mobile-sort\"\r\n          [routerLink]=\"['/sort-filter']\"\r\n          routerLinkActive=\"active\"\r\n        >\r\n          <div class=\"sort-result\">\r\n            <p>\r\n              <span\r\n                ><i class=\"fa fa-sort-amount-asc\" aria-hidden=\"true\"></i\r\n              ></span>\r\n              Sort Results\r\n            </p>\r\n          </div>\r\n          <div class=\"sort-result\">\r\n            <p>\r\n              <span><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\r\n              Filter Flights\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-9 col-sm-12 col-xs-12\">\r\n        <ng-container\r\n          *ngIf=\"\r\n            !isSearchResultsError &&\r\n            searchResult &&\r\n            searchResult.flights &&\r\n            searchResult.flights.length <= 0 &&\r\n            isLoaded\r\n          \"\r\n        >\r\n          <div class=\"flt-details wow fadeIn\">\r\n            <div\r\n              class=\"alert alert-danger col-lg-12 col-sm-12 col-xs-12\"\r\n              role=\"alert\"\r\n            >\r\n              No results found!\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container\r\n          *ngIf=\"\r\n            searchResult &&\r\n            searchResult.flights &&\r\n            searchResult.flights.length > 0\r\n          \"\r\n        >\r\n          <div\r\n            class=\"row\"\r\n            *ngFor=\"let flight of searchResult.flights; let i = index\"\r\n          >\r\n            <div class=\"flt-details wow fadeIn\">\r\n              <div class=\"flight-logo\">\r\n                <h2\r\n                  class=\"text-center\"\r\n                  style=\"color: #57b957\"\r\n                  *ngIf=\"!flight?.airlineLogo\"\r\n                >\r\n                  {{ flight?.airline }}\r\n                </h2>\r\n                <img\r\n                  [src]=\"'assets/images/search/' + flight?.airlineLogo\"\r\n                  class=\"img-fluid\"\r\n                  alt=\"\"\r\n                  *ngIf=\"flight?.airlineLogo\"\r\n                />\r\n              </div>\r\n              <div class=\"flight-cont\">\r\n                <div class=\"flt-cont-box\">\r\n                  <div class=\"flt-date\">\r\n                    <h5>\r\n                      {{ flight?.flightMini.departure.departureDateTimeFormat }}\r\n                    </h5>\r\n                    <p>{{ flight?.flightMini.departure.originLocation }}</p>\r\n                    <p>\r\n                      {{ flight?.flightMini.departure.departureDateFormat }}\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"flt-arrow\">\r\n                    <p>{{ flight?.elapsedTime }}</p>\r\n                    <img\r\n                      [src]=\"\r\n                        flight.flightMini.departure.travelRoute == 'Direct'\r\n                          ? 'assets/images/search/arrow-right.png'\r\n                          : 'assets/images/search/arrow-first.png'\r\n                      \"\r\n                      class=\"img-fluid\"\r\n                      alt=\"\"\r\n                      pTooltip=\"{{\r\n                        flight?.flightMini.departure.changePlanesNote\r\n                      }}\"\r\n                    />\r\n                    <p>{{ flight?.flightMini.departure.travelRoute }}</p>\r\n                  </div>\r\n                  <div class=\"flt-date\">\r\n                    <h5>\r\n                      {{ flight?.flightMini.departure.arrivalDateTimeFormat }}\r\n                    </h5>\r\n                    <p>\r\n                      {{ flight?.flightMini.departure.destinationLocation }}\r\n                    </p>\r\n                    <p>{{ flight?.flightMini.departure.arrivalDateFormat }}</p>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  class=\"flt-cont-box flt-cont-box-2\"\r\n                  *ngIf=\"\r\n                    flight?.tripType == 'Return' && flight?.flightMini.return\r\n                  \"\r\n                >\r\n                  <div class=\"flt-date\">\r\n                    <h5>\r\n                      {{ flight?.flightMini.return.departureDateTimeFormat }}\r\n                    </h5>\r\n                    <p>{{ flight?.flightMini.return.originLocation }}</p>\r\n                    <p>{{ flight?.flightMini.return.departureDateFormat }}</p>\r\n                  </div>\r\n                  <div class=\"flt-arrow\">\r\n                    <p>{{ flight?.flightMini.return.totalDuration }}</p>\r\n                    <img\r\n                      src=\"assets/images/search/arrow-second.png\"\r\n                      class=\"img-fluid\"\r\n                      alt=\"\"\r\n                    />\r\n                    <p>{{ flight?.flightMini.return.travelRoute }}</p>\r\n                  </div>\r\n                  <div class=\"flt-date\">\r\n                    <h5>\r\n                      {{ flight?.flightMini.return.arrivalDateTimeFormat }}\r\n                    </h5>\r\n                    <p>{{ flight?.flightMini.return.destinationLocation }}</p>\r\n                    <p>{{ flight?.flightMini.return.arrivalDateFormat }}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"flt-pkr\">\r\n                <h5>\r\n                  {{ flight?.currencyCode }} {{ flight?.totalFare | number }}\r\n                </h5>\r\n                <div *ngIf=\"flight.airlineType === 'sabre'\">\r\n                  <div class=\"flt-pkr-btn\">\r\n                    <a\r\n                      (click)=\"reviewBooking(flight, -1)\"\r\n                      style=\"cursor: pointer\"\r\n                      >Book Now</a\r\n                    >\r\n                    <div class=\"flt-arrowbtn\">\r\n                      <svg\r\n                        width=\"8\"\r\n                        height=\"14\"\r\n                        viewBox=\"0 0 8 14\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fill-rule=\"evenodd\"\r\n                          clip-rule=\"evenodd\"\r\n                          d=\"M0.292893 1.70712C-0.0976311 1.3166 -0.0976311 0.683433 0.292893 0.292909C0.683418 -0.0976158 1.31658 -0.0976158 1.70711 0.292909L7.70711 6.29291C8.09763 6.68343 8.09763 7.3166 7.70711 7.70712L1.70711 13.7071C1.31658 14.0976 0.683417 14.0976 0.292893 13.7071C-0.0976316 13.3166 -0.0976316 12.6834 0.292893 12.2929L5.58579 7.00002L0.292893 1.70712Z\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    class=\"flt-pkr-btn switch\"\r\n                    *ngIf=\"flight?.childs?.length > 0\"\r\n                  >\r\n                    <a\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseExample{{ i }}\"\r\n                      style=\"cursor: pointer\"\r\n                      >{{ flight?.childs?.length }} more option available\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  class=\"flt-pkr-btn switch\"\r\n                  *ngIf=\"flight.airlineType === 'LCC'\"\r\n                >\r\n                  <a\r\n                    data-toggle=\"collapse\"\r\n                    href=\"#collapseBudgetAirline{{ i }}\"\r\n                    style=\"cursor: pointer\"\r\n                    >View Prices\r\n                  </a>\r\n                  <div class=\"flt-arrowbtn\">\r\n                    <svg\r\n                      width=\"8\"\r\n                      height=\"14\"\r\n                      viewBox=\"0 0 8 14\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        fill-rule=\"evenodd\"\r\n                        clip-rule=\"evenodd\"\r\n                        d=\"M0.292893 1.70712C-0.0976311 1.3166 -0.0976311 0.683433 0.292893 0.292909C0.683418 -0.0976158 1.31658 -0.0976158 1.70711 0.292909L7.70711 6.29291C8.09763 6.68343 8.09763 7.3166 7.70711 7.70712L1.70711 13.7071C1.31658 14.0976 0.683417 14.0976 0.292893 13.7071C-0.0976316 13.3166 -0.0976316 12.6834 0.292893 12.2929L5.58579 7.00002L0.292893 1.70712Z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"col-md-12 collapse p-0\"\r\n              id=\"collapseBudgetAirline{{ i }}\"\r\n            >\r\n              <div\r\n                class=\"flt-details wow fadeIn child\"\r\n                *ngFor=\"let farePrice of flight.farePrices; let i = index\"\r\n              >\r\n                <div class=\"flight-logo\">\r\n                  <h1 style=\"color: #57b957\">\r\n                    <img\r\n                      [src]=\"'assets/images/search/' + flight?.airlineLogo\"\r\n                      class=\"img-fluid\"\r\n                      alt=\"\"\r\n                      *ngIf=\"flight?.airlineLogo\"\r\n                    />\r\n                  </h1>\r\n                </div>\r\n                <div class=\"flight-cont\">\r\n                  <h3>\r\n                    {{ farePrice.familyName }}\r\n                  </h3>\r\n                  <!-- <p>{{ farePrice.familyDescription }}</p> -->\r\n                </div>\r\n                <div class=\"flt-pkr\">\r\n                  <h5>\r\n                    {{ farePrice.currencyCode }}\r\n                    {{ farePrice.grandTotal | number }}\r\n                  </h5>\r\n                  <div class=\"flt-pkr-btn\">\r\n                    <a\r\n                      (click)=\"reviewBooking(flight, i)\"\r\n                      style=\"cursor: pointer\"\r\n                      >Book Now</a\r\n                    >\r\n                    <div class=\"flt-arrowbtn\">\r\n                      <svg\r\n                        width=\"8\"\r\n                        height=\"14\"\r\n                        viewBox=\"0 0 8 14\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fill-rule=\"evenodd\"\r\n                          clip-rule=\"evenodd\"\r\n                          d=\"M0.292893 1.70712C-0.0976311 1.3166 -0.0976311 0.683433 0.292893 0.292909C0.683418 -0.0976158 1.31658 -0.0976158 1.70711 0.292909L7.70711 6.29291C8.09763 6.68343 8.09763 7.3166 7.70711 7.70712L1.70711 13.7071C1.31658 14.0976 0.683417 14.0976 0.292893 13.7071C-0.0976316 13.3166 -0.0976316 12.6834 0.292893 12.2929L5.58579 7.00002L0.292893 1.70712Z\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 collapse p-0\" id=\"collapseExample{{ i }}\">\r\n              <div\r\n                class=\"flt-details wow fadeIn child\"\r\n                *ngFor=\"let child of flight?.childs\"\r\n              >\r\n                <div class=\"flight-logo\">\r\n                  <h2\r\n                    class=\"text-center\"\r\n                    style=\"color: #57b957\"\r\n                    *ngIf=\"!child.airlineLogo\"\r\n                  >\r\n                    {{ child.airline }}\r\n                  </h2>\r\n                  <img\r\n                    [src]=\"'assets/images/search/' + child.airlineLogo\"\r\n                    class=\"img-fluid-Logo\"\r\n                    alt=\"\"\r\n                    *ngIf=\"child.airlineLogo\"\r\n                  />\r\n                </div>\r\n                <div class=\"flight-cont\">\r\n                  <div class=\"flt-cont-box\">\r\n                    <div class=\"flt-date\">\r\n                      <h5>\r\n                        {{ child.flightMini.departure.departureDateTimeFormat }}\r\n                      </h5>\r\n                      <p>{{ child.flightMini.departure.originLocation }}</p>\r\n                      <p>\r\n                        {{ child.flightMini.departure.departureDateFormat }}\r\n                      </p>\r\n                    </div>\r\n                    <div class=\"flt-arrow\">\r\n                      <p>{{ child.flightMini.departure.totalDuration }}</p>\r\n                      <img\r\n                        [src]=\"\r\n                          getImageWeight(child.flightMini.departure.travelRoute)\r\n                        \"\r\n                        class=\"img-fluid\"\r\n                        alt=\"\"\r\n                      />\r\n                      <p>{{ child.flightMini.departure.travelRoute }}</p>\r\n                    </div>\r\n                    <div class=\"flt-date\">\r\n                      <h5>\r\n                        {{ child.flightMini.departure.arrivalDateTimeFormat }}\r\n                      </h5>\r\n                      <p>\r\n                        {{ child.flightMini.departure.destinationLocation }}\r\n                      </p>\r\n                      <p>{{ child.flightMini.departure.arrivalDateFormat }}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    class=\"flt-cont-box flt-cont-box-2\"\r\n                    *ngIf=\"\r\n                      child.tripType == 'Return' && child.flightMini.return\r\n                    \"\r\n                  >\r\n                    <div class=\"flt-date\">\r\n                      <h5>\r\n                        {{ child.flightMini.return.departureDateTimeFormat }}\r\n                      </h5>\r\n                      <p>{{ child.flightMini.return.originLocation }}</p>\r\n                      <p>{{ child.flightMini.return.departureDateFormat }}</p>\r\n                    </div>\r\n                    <div class=\"flt-arrow\">\r\n                      <p>{{ child.flightMini.return.totalDuration }}</p>\r\n                      <img\r\n                        src=\"assets/images/search/arrow-second.png\"\r\n                        class=\"img-fluid\"\r\n                        alt=\"\"\r\n                      />\r\n                      <p>{{ child.flightMini.return.travelRoute }}</p>\r\n                    </div>\r\n                    <div class=\"flt-date\">\r\n                      <h5>\r\n                        {{ child.flightMini.return.arrivalDateTimeFormat }}\r\n                      </h5>\r\n                      <p>{{ child.flightMini.return.destinationLocation }}</p>\r\n                      <p>{{ child.flightMini.return.arrivalDateFormat }}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"flt-pkr\">\r\n                  <h5>\r\n                    {{ child.currencyCode }} {{ child.totalFare | number }}\r\n                  </h5>\r\n                  <div class=\"flt-pkr-btn\">\r\n                    <a\r\n                      (click)=\"reviewBooking(child, -1)\"\r\n                      style=\"cursor: pointer\"\r\n                      >Book Now</a\r\n                    >\r\n                    <div class=\"flt-arrowbtn\">\r\n                      <svg\r\n                        width=\"8\"\r\n                        height=\"14\"\r\n                        viewBox=\"0 0 8 14\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fill-rule=\"evenodd\"\r\n                          clip-rule=\"evenodd\"\r\n                          d=\"M0.292893 1.70712C-0.0976311 1.3166 -0.0976311 0.683433 0.292893 0.292909C0.683418 -0.0976158 1.31658 -0.0976158 1.70711 0.292909L7.70711 6.29291C8.09763 6.68343 8.09763 7.3166 7.70711 7.70712L1.70711 13.7071C1.31658 14.0976 0.683417 14.0976 0.292893 13.7071C-0.0976316 13.3166 -0.0976316 12.6834 0.292893 12.2929L5.58579 7.00002L0.292893 1.70712Z\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  HostListener,\r\n  OnDestroy,\r\n  Input,\r\n  ViewChild,\r\n  Inject,\r\n  LOCALE_ID,\r\n  EventEmitter,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport Lightpick from 'src/assets/js/lightpick.min.js';\r\nimport * as _ from 'lodash';\r\n\r\nimport { ToasterService } from 'src/app/services/toastr-service';\r\nimport { Common } from 'src/app/models/common';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as moment from 'moment';\r\nimport { AirportEntity } from 'src/app/home/entities/airport-entity.model';\r\nimport { FlightFiltersModel } from 'src/app/home/models/flight-filters.model';\r\nimport { FlightModel } from 'src/app/home/models/flight.model';\r\nimport {\r\n  SearchResultModel,\r\n  AirlineFliterModel,\r\n  StopFilterModel,\r\n} from 'src/app/home/models/search-result.model';\r\nimport { HomeService } from 'src/app/home/shared/home.service';\r\nimport { TripType } from 'src/app/models/enums.model';\r\nimport { SharedMulticityComponent } from '../shared-multicity/shared-multicity.component';\r\nimport { AuthService } from 'src/app/auth/shared/auth.service';\r\nimport { DecimalPipe, formatNumber } from '@angular/common';\r\ndeclare var $: any;\r\ndeclare function Home_init();\r\n\r\n@Component({\r\n  selector: 'app-shared-search-results',\r\n  templateUrl: './shared-search-results.component.html',\r\n  styleUrls: ['./shared-search-results.component.scss'],\r\n})\r\nexport class SharedSearchResultsComponent\r\n  implements OnInit, AfterViewInit, OnDestroy {\r\n    isShow:boolean;\r\n    isShowed = true;\r\n    isdisplayed:boolean\r\n  get Travellers(): number {\r\n    return (\r\n      // tslint:disable-next-line: radix\r\n      parseInt(this.adult?.toString()) +\r\n      parseInt(this.child?.toString()) +\r\n      parseInt(this.infant?.toString())\r\n    );\r\n  }\r\n\r\n  get TripTypeName(): string {\r\n    return Common.getTripTypeName(this.tripType);\r\n    // return this.commonService.getTripTypeName(this.tripType);\r\n  }\r\n\r\n  constructor(\r\n    private homeService: HomeService,\r\n    private router: Router,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n    private datePipe: DatePipe,\r\n    @Inject(LOCALE_ID) private locale: string,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.responsiveOptions = [\r\n      {\r\n        breakpoint: '1024px',\r\n        numVisible: 3,\r\n        numScroll: 3,\r\n      },\r\n      {\r\n        breakpoint: '768px',\r\n        numVisible: 2,\r\n        numScroll: 2,\r\n      },\r\n      {\r\n        breakpoint: '560px',\r\n        numVisible: 1,\r\n        numScroll: 1,\r\n      },\r\n    ];\r\n\r\n    this.getAirports();\r\n    if (this.router.getCurrentNavigation().extras.state !== undefined) {\r\n      this.searchfilters = JSON.stringify(this.router.getCurrentNavigation().extras.state);\r\n    }\r\n  }\r\n\r\n  // Filters\r\n  flights: any[] = [];\r\n  altDaysFlights: any[] = [];\r\n  tripType: TripType;\r\n  originLocation: string;\r\n  destinationLocation: string;\r\n  travelClass: string;\r\n  adult = 0;\r\n  child = 0;\r\n  infant: number;\r\n  leaveDate: Date;\r\n  returnDate?: Date;\r\n  selectedLeaveDate: Date;\r\n  selectedReturnDate?: Date;\r\n  multiCities: string;\r\n  multiCitiesValues: any = [];\r\n  showDefaultSearchRow = true;\r\n  dropDownMultiSearch = false;\r\n  monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  tripTypeEnum = TripType;\r\n  departureCity: string;\r\n  arrivalCity: string;\r\n  departureAirportName: string;\r\n  departureTitle: string;\r\n  arrivalAirportName: string;\r\n  arrivalTitle: string;\r\n\r\n  airports: Array<AirportEntity>;\r\n  departureAirportResults: Array<AirportEntity>;\r\n  arrivalAirportResults: Array<AirportEntity>;\r\n\r\n  // setup before functions\r\n  typingTimer: any; // timer identifier\r\n  doneTypingInterval = 1000; // time in ms (1 second)\r\n\r\n  travelClassName: string;\r\n  singlePicker: any;\r\n  rangePicker: any;\r\n\r\n  searchResult: SearchResultModel;\r\n  flightResult: any;\r\n  // flights: Array<FlightModel>;\r\n  isSearchResultsError: boolean;\r\n  isSearchResults: boolean;\r\n  searchResultsErrMsg: string;\r\n\r\n  airlineFilter: string;\r\n  stopFilter: string;\r\n  arrangeFilter: string;\r\n  responsiveOptions;\r\n  isLoaded: boolean;\r\n\r\n  bestFlight: FlightModel;\r\n  cheapestFlight: FlightModel;\r\n  fastestFlight: FlightModel;\r\n  popularCities = [];\r\n  isSuggest = true;\r\n  selectedRange = false;\r\n  list: any[] = [];\r\n  locationResult:[];\r\n\r\n  multiCityFromName = 'Select City';\r\n\r\n  @Input() searchfilters: string;\r\n  @Output() searchResultEvent = new EventEmitter<string>();\r\n  @ViewChild(SharedMulticityComponent)\r\n  sharedMulticityData: SharedMulticityComponent;\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.keyCode === 27) {\r\n      this.hideDepartureAirportResults();\r\n      this.hideArrivalAirportResults();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    setTimeout(() => {\r\n      Home_init();\r\n    }, 1000);\r\n    window.scrollTo(0, 0);\r\n    this.searchResult = new SearchResultModel();\r\n    this.searchResult.flights = new Array<FlightModel>();\r\n    this.searchResult.airlineFliters = new Array<AirlineFliterModel>();\r\n    this.clear();\r\n    this.tripType = TripType.OneWay;\r\n\r\n    this.originLocation = 'LHE';\r\n    this.departureCity = 'Lahore';\r\n    this.arrivalCity = 'Dubai';\r\n    this.departureAirportName = 'LHE, Alama Iqbal International...';\r\n    this.departureTitle = 'LHE, Alama Iqbal International Airport Pakistan';\r\n    this.destinationLocation = 'DXB';\r\n    this.arrivalAirportName = 'DXB, Dubai International Airpo...';\r\n    this.arrivalTitle = 'DXB, Dubai International Airport United Arab Emirates';\r\n    this.departureAirportResults = new Array<AirportEntity>();\r\n    this.arrivalAirportResults = new Array<AirportEntity>();\r\n    this.travelClass = 'Y'; // Economy\r\n    this.travelClassName = Common.getTravelClassName(this.travelClass);\r\n    this.adult = 1;\r\n    this.child = 0;\r\n    this.infant = 0;\r\n    this.leaveDate = moment().add(1, 'days').toDate();\r\n    this.airlineFilter = 'ALL';\r\n    this.stopFilter = 'ALL';\r\n    this.arrangeFilter = 'lowest_fare';\r\n    //this.singleDatePicker(true);\r\n    this.isLoaded = false;\r\n\r\n    if (this.searchfilters === undefined) {\r\n      if (this.route.snapshot.queryParams['destinationLocation'] && this.route.snapshot.queryParams['originLocation']) {\r\n        const multiCityData = [];\r\n        const filters = {\r\n          trip: this.GetTripName(this.route.snapshot.queryParams['trip']),\r\n          originLocation: this.route.snapshot.queryParams['originLocation'],\r\n          destinationLocation: this.route.snapshot.queryParams['destinationLocation'],\r\n          leaveDate: this.datePipe.transform(\r\n            this.route.snapshot.queryParams['leaveDate'],\r\n            'yyyy-MM-ddTHH:mm:ss'\r\n          ),\r\n          returnDate: this.route.snapshot.queryParams['returnDate'] != 'null'\r\n            ? this.datePipe.transform(this.route.snapshot.queryParams['returnDate'], 'yyyy-MM-ddTHH:mm:ss')\r\n            : null,\r\n          isDirectFlightOnly: this.route.snapshot.queryParams['isDirectFlightOnly'],\r\n          travelClass: this.route.snapshot.queryParams['travelClass'],\r\n          child: parseInt(this.route.snapshot.queryParams['child']),\r\n          infant: parseInt(this.route.snapshot.queryParams['infant']),\r\n          adult: parseInt(this.route.snapshot.queryParams['adult']),\r\n          multiCities: JSON.stringify(multiCityData),\r\n        };\r\n        filters.leaveDate = this.datePipe.transform(\r\n          this.route.snapshot.queryParams['leaveDate'],\r\n          'yyyy-MM-ddTHH:mm:ss'\r\n        );\r\n        filters.returnDate = this.route.snapshot.queryParams['returnDate'] != 'null'\r\n          ? this.datePipe.transform(this.route.snapshot.queryParams['returnDate'], 'yyyy-MM-ddTHH:mm:ss')\r\n          : null;\r\n        this.searchfilters = JSON.stringify(filters);\r\n        this.loadFilters();\r\n      }\r\n      else {\r\n        const filter = JSON.stringify(localStorage.getItem('filters'));\r\n        const model = <FlightFiltersModel>JSON.parse(JSON.parse(filter));\r\n        this.destinationLocation = model?.destinationLocation;\r\n        this.originLocation = model?.originLocation;\r\n        this.isSearchResults = false;\r\n        //this.searchResults();\r\n      }\r\n    }\r\n    else {\r\n      this.loadFilters();\r\n    }\r\n\r\n\r\n    $(document).ready(() => {\r\n      $('[data-toggle=\"popover\"]').popover({ html: true });\r\n      $('.book-details1').click(function () {\r\n        $('.selectbox1').addClass('select1');\r\n        $('.selectbox2').removeClass('select2');\r\n      });\r\n    });\r\n    \r\n\r\n    $(document).ready(function () {\r\n      $('.book-details2').click(function () {\r\n        $('.selectbox1').removeClass('select1');\r\n        $('.selectbox2').addClass('select2');\r\n      });\r\n    });\r\n  }\r\n\r\n  departureClick() {\r\n    if(this.isdisplayed == true)\r\n    {     \r\n      document.getElementById('selectCity1').classList.add('select1');\r\n    }\r\n    if (\r\n      this.tripType === TripType.MultiCity &&\r\n      this.sharedMulticityData.multicityData !== undefined\r\n    ) {\r\n      this.sharedMulticityData.multicityData.forEach((mData: any, index) => {\r\n        this.sharedMulticityData.hideFromAirportResults(index);\r\n      });\r\n    }\r\n\r\n    $('#txtFrom').focus();\r\n  }\r\n\r\n  arrivalClick() {\r\n    if(this.isdisplayed == true)\r\n    {   \r\n      document.getElementById('selectCity').classList.add('select2')  \r\n    }\r\n    if (\r\n      this.tripType === TripType.MultiCity &&\r\n      this.sharedMulticityData.multicityData !== undefined\r\n    ) {\r\n      this.sharedMulticityData.multicityData.forEach((mData: any, index) => {\r\n        this.sharedMulticityData.hideFromToAirports(index);\r\n      });\r\n    }\r\n\r\n    $('#txtTo').focus();\r\n  }\r\n  multiSearchClick() {\r\n    this.dropDownMultiSearch = this.dropDownMultiSearch === true ? false : true;\r\n  }\r\n  searchDeparturePopup() {\r\n    clearTimeout(this.typingTimer);\r\n    this.typingTimer = setTimeout(() => {\r\n      this.searchDeparture();\r\n    }, this.doneTypingInterval);\r\n  }\r\n\r\n  searchArrivalPopup() {\r\n    clearTimeout(this.typingTimer);\r\n    this.typingTimer = setTimeout(() => {\r\n      this.searchArrival();\r\n    }, this.doneTypingInterval);\r\n  }\r\n\r\n  getAirports() {\r\n    this.airports = new Array<AirportEntity>();\r\n    this.homeService.getPopularAirports().subscribe((response) => {\r\n      if (response) {\r\n        if (response.status === 'success') {\r\n          if (response.data) {\r\n            this.airports = response.data;\r\n            this.popularCities = response.data;\r\n          }\r\n        } else {\r\n          if (response.message) {\r\n            // alert(response.message);\r\n            this.toasterService.showError(response.message, 'Error');\r\n          } else {\r\n            // alert(\"Something went wrong! Please try again.\");\r\n            this.toasterService.showError(\r\n              'Airports are not loaded! Please try again.',\r\n              'Error'\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        // alert(\"Something went wrong! Please try again.\");\r\n        this.toasterService.showError(\r\n          'Airports are not loaded! Please try again.',\r\n          'Error'\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  loadFilters() {\r\n    this.loadDates();\r\n    const filters = this.searchfilters; // localStorage.getItem('search-filters');\r\n\r\n    if (filters) {\r\n      const model = JSON.parse(filters) as FlightFiltersModel;\r\n      this.setDepartureData(model);\r\n      this.setArrivalData(model);\r\n      this.originLocation = model.originLocation;\r\n      this.destinationLocation = model.destinationLocation;\r\n      this.multiCities = model.multiCities;\r\n      this.showDefaultSearchRow = true;\r\n      this.leaveDate = model.leaveDate;\r\n      if (model.returnDate) {\r\n        this.returnDate = model.returnDate;\r\n      }\r\n      if (model.returnDate) {\r\n        this.tripType = TripType.RoundTrip;\r\n        //this.rangeDatePicker(true);\r\n      } else {\r\n        this.tripType = TripType.OneWay;\r\n        //this.singleDatePicker(true);\r\n      }\r\n      if (JSON.parse(model?.multiCities).length > 0) {\r\n        this.showDefaultSearchRow = false;\r\n        this.multiCitiesValues = JSON.parse(model.multiCities);\r\n        this.tripType = TripType.MultiCity;\r\n        this.updateFromMultiCity();\r\n      }\r\n      this.adult = model.adult;\r\n      if (model.child) {\r\n        this.child = model.child;\r\n      } else {\r\n        this.child = 0;\r\n      }\r\n      if (model.infant) {\r\n        this.infant = model.infant;\r\n      } else {\r\n        this.infant = 0;\r\n      }\r\n\r\n      this.travelClass = model.travelClass;\r\n      this.travelClassName = Common.getTravelClassName(this.travelClass);\r\n    } else {\r\n      this.isLoaded = false;\r\n    }\r\n\r\n    this.searchResults();\r\n  }\r\n\r\n  updateFromMultiCity() {\r\n    const mList = [];\r\n    for (let i = 1; i < this.multiCitiesValues.length; i++) {\r\n      mList.push(this.multiCitiesValues[i].departureCity + ',');\r\n    }\r\n    const list = mList.length === 0 ? '' : ' Via ' + mList.join(' ');\r\n    this.multiCityFromName =\r\n      this.multiCitiesValues[0].departureCity +\r\n      ' To ' +\r\n      this.multiCitiesValues[this.multiCitiesValues.length - 1].arrivalCity +\r\n      list;\r\n  }\r\n\r\n  setDepartureData(model: any) {\r\n    this.homeService\r\n      .getAirportByCode(model.originLocation)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          if (response.status === 'success') {\r\n            if (response.data) {\r\n              this.selectedOrigin(response.data);\r\n            }\r\n          } else {\r\n            if (response.message) {\r\n              this.toasterService.showError(response.message, 'Error');\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  setArrivalData(model: any) {\r\n    this.homeService\r\n      .getAirportByCode(model.destinationLocation)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          if (response.status === 'success') {\r\n            if (response.data) {\r\n              this.selectedDestination(response.data);\r\n            }\r\n          } else {\r\n            if (response.message) {\r\n              this.toasterService.showError(response.message, 'Error');\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  loadDates() {\r\n    const filters = this.searchfilters; // localStorage.getItem('search-filters');\r\n    if (filters) {\r\n      const model = JSON.parse(filters) as FlightFiltersModel;\r\n      if (model.returnDate) {\r\n        this.selectedLeaveDate = new Date(model.leaveDate);\r\n        this.selectedReturnDate = new Date(model.returnDate);\r\n        this.getDates(this.selectedLeaveDate, this.selectedReturnDate, 4);\r\n        const date = `${this.selectedLeaveDate.getDate()} ${this.monthNames[this.selectedLeaveDate.getMonth()]\r\n          } - ${this.selectedReturnDate.getDate()} ${this.monthNames[this.selectedReturnDate.getMonth()]\r\n          }`;\r\n        this.list.push({\r\n          label: date,\r\n          leaveDateOrignal: this.selectedLeaveDate,\r\n          returnDateOrignal: this.selectedReturnDate,\r\n          leaveDate: this.datePipe.transform(\r\n            this.selectedLeaveDate,\r\n            'yyyyMMdd'\r\n          ),\r\n          returnDate: this.datePipe.transform(\r\n            this.selectedReturnDate,\r\n            'yyyyMMdd'\r\n          ),\r\n        });\r\n        this.getDates(this.selectedLeaveDate, this.selectedReturnDate, -4);\r\n      } else {\r\n        this.selectedLeaveDate = new Date(model.leaveDate);\r\n        this.getOneWayDates(this.selectedLeaveDate, 4);\r\n        const date = `${this.selectedLeaveDate.getDate()} ${this.monthNames[this.selectedLeaveDate.getMonth()]\r\n          }`;\r\n        this.list.push({\r\n          label: date,\r\n          leaveDateOrignal: this.selectedLeaveDate,\r\n          returnDateOrignal: this.selectedReturnDate,\r\n          leaveDate: this.datePipe.transform(\r\n            this.selectedLeaveDate,\r\n            'yyyyMMdd'\r\n          ),\r\n        });\r\n        this.getOneWayDates(this.selectedLeaveDate, -4);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDates(leaveDate: Date, returnDate: Date, days: number) {\r\n    const fulureDates = [];\r\n    const pastDates = [];\r\n    for (let I = 0; I < Math.abs(days); I++) {\r\n      pastDates.push(\r\n        new Date(\r\n          leaveDate.getTime() -\r\n          (days >= 0 ? I : I - I - I) * 24 * 60 * 60 * 1000\r\n        )\r\n      );\r\n    }\r\n    for (let I = 0; I < Math.abs(days); I++) {\r\n      fulureDates.push(\r\n        new Date(\r\n          returnDate.getTime() -\r\n          (days >= 0 ? I : I - I - I) * 24 * 60 * 60 * 1000\r\n        )\r\n      );\r\n    }\r\n    if (days == 4) {\r\n      this.list = [];\r\n      for (let index = 1; index < 4; index++) {\r\n        const pastDate = pastDates[4 - index];\r\n        const futureDate = fulureDates[4 - index];\r\n        const date = `${pastDate.getDate()} ${this.monthNames[pastDate.getMonth()]\r\n          } - ${futureDate.getDate()} ${this.monthNames[futureDate.getMonth()]}`;\r\n\r\n        this.list.push({\r\n          label: date,\r\n          leaveDateOrignal: pastDate,\r\n          returnDateOrignal: futureDate,\r\n          leaveDate: this.datePipe.transform(pastDate, 'yyyyMMdd'),\r\n          returnDate: this.datePipe.transform(futureDate, 'yyyyMMdd'),\r\n        });\r\n      }\r\n    } else {\r\n      for (let index = 1; index < 4; index++) {\r\n        const pastDate = pastDates[index];\r\n        const futureDate = fulureDates[index];\r\n        const date = `${pastDate.getDate()} ${this.monthNames[pastDate.getMonth()]\r\n          } - ${futureDate.getDate()} ${this.monthNames[futureDate.getMonth()]}`;\r\n        this.list.push({\r\n          label: date,\r\n          leaveDateOrignal: pastDate,\r\n          returnDateOrignal: futureDate,\r\n          leaveDate: this.datePipe.transform(pastDate, 'yyyyMMdd'),\r\n          returnDate: this.datePipe.transform(futureDate, 'yyyyMMdd'),\r\n        });\r\n      }\r\n    }\r\n    return this.list;\r\n  }\r\n\r\n  getOneWayDates(leaveDate: Date, days: number) {\r\n    const dates = [];\r\n    for (let I = 0; I < Math.abs(days); I++) {\r\n      dates.push(\r\n        new Date(\r\n          leaveDate.getTime() -\r\n          (days >= 0 ? I : I - I - I) * 24 * 60 * 60 * 1000\r\n        )\r\n      );\r\n    }\r\n    if (days == 4) {\r\n      this.list = [];\r\n      for (let index = 1; index < 4; index++) {\r\n        const pastDate = dates[4 - index];\r\n        const date = `${pastDate.getDate()} ${this.monthNames[pastDate.getMonth()]\r\n          }`;\r\n        this.list.push({\r\n          label: date,\r\n          leaveDateOrignal: pastDate,\r\n          leaveDate: this.datePipe.transform(pastDate, 'yyyyMMdd'),\r\n        });\r\n      }\r\n    } else {\r\n      for (let index = 1; index < 4; index++) {\r\n        const pastDate = dates[index];\r\n        const date = `${pastDate.getDate()} ${this.monthNames[pastDate.getMonth()]\r\n          }`;\r\n        this.list.push({\r\n          label: date,\r\n          leaveDateOrignal: pastDate,\r\n          leaveDate: this.datePipe.transform(pastDate, 'yyyyMMdd'),\r\n        });\r\n      }\r\n    }\r\n\r\n    return this.list;\r\n  }\r\n\r\n  searchDeparture() {\r\n    const value = $('#txtFrom').val();\r\n    if (value) {\r\n      this.isSuggest = false;\r\n\r\n      this.homeService.getAirportsSearch(value).subscribe((response) => {\r\n        if (response) {\r\n          if (response.status === 'success') {\r\n            if (response.data) {\r\n              this.departureAirportResults = response.data;\r\n            }\r\n          } else {\r\n            if (response.message) {\r\n              this.toasterService.showError(response.message, 'Error');\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.isSuggest = true;\r\n\r\n      this.departureAirportResults = new Array<AirportEntity>();\r\n    }\r\n  }\r\n\r\n  selectedOrigin(airport: AirportEntity) {\r\n    this.originLocation = airport.code;\r\n    this.departureCity = airport.city;\r\n    this.departureTitle =\r\n      airport.code + ', ' + airport.name + ' ' + airport.country;\r\n    if (this.departureTitle.length > 18) {\r\n      this.departureAirportName = this.departureTitle.substr(0, 18) + '...';\r\n    } else {\r\n      this.departureAirportName = this.departureTitle;\r\n    }\r\n    this.departureAirportResults = new Array<AirportEntity>();\r\n    $('#txtFrom').val('');\r\n    this.validateOriginLocation();\r\n    this.validateFromAndToAirports();\r\n  }\r\n\r\n  searchArrival() {\r\n    const value = $('#txtTo').val();\r\n    if (value) {\r\n      this.isSuggest = false;\r\n      this.homeService.getAirportsSearch(value).subscribe((response) => {\r\n        if (response) {\r\n          if (response.status === 'success') {\r\n            if (response.data) {\r\n              this.arrivalAirportResults = response.data;\r\n            }\r\n          } else {\r\n            if (response.message) {\r\n              this.toasterService.showError(response.message, 'Error');\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.arrivalAirportResults = new Array<AirportEntity>();\r\n      this.isSuggest = true;\r\n    }\r\n  }\r\n\r\n  selectedDestination(airport: AirportEntity) {\r\n    this.destinationLocation = airport.code;\r\n    this.arrivalCity = airport.city;\r\n    this.arrivalTitle =\r\n      airport.code + ', ' + airport.name + ' ' + airport.country;\r\n    if (this.arrivalTitle.length > 18) {\r\n      this.arrivalAirportName = this.arrivalTitle.substr(0, 18) + '...';\r\n    } else {\r\n      this.arrivalAirportName = this.arrivalTitle;\r\n    }\r\n    this.arrivalAirportResults = new Array<AirportEntity>();\r\n    $('#txtTo').val('');\r\n    this.validateFromAndToAirports();\r\n  }\r\n\r\n  swapLocations() {\r\n    const destinationLocation = this.destinationLocation;\r\n    const arrivalCity = this.arrivalCity;\r\n    const arrivalTitle = this.arrivalTitle;\r\n    const arrivalAirportName = this.arrivalAirportName;\r\n\r\n    this.destinationLocation = this.originLocation;\r\n    this.arrivalCity = this.departureCity;\r\n    this.arrivalTitle = this.departureTitle;\r\n    this.arrivalAirportName = this.departureAirportName;\r\n\r\n    this.originLocation = destinationLocation;\r\n    this.departureCity = arrivalCity;\r\n    this.departureTitle = arrivalTitle;\r\n    this.departureAirportName = arrivalAirportName;\r\n  }\r\n\r\n  getTravelClass() {\r\n    setTimeout(() => {\r\n      this.travelClassName = Common.getTravelClassName(this.travelClass);\r\n      // this.travelClassName = this.commonService.getTravelClassName(this.travelClass);\r\n      $(document).ready(function () {\r\n        $('.book-peron2').removeClass('economy');\r\n      });\r\n    });\r\n  }\r\n  singleDatePicker(isInitial: boolean = false) {\r\n    if (this.rangePicker) {\r\n      this.rangePicker.destroy();\r\n    } // destroy old picker object\r\n\r\n    if (this.singlePicker) {\r\n      this.singlePicker.destroy();\r\n    } // destroy old picker object\r\n\r\n    if (this.returnDate) {\r\n      this.returnDate = null;\r\n    }\r\n\r\n  this.singlePicker = new Lightpick({\r\n    field: this.isdisplayed ==true? document.getElementById('dpLeaveDate1'):document.getElementById('dpLeaveDate'),\r\n    numberOfMonths: 2,\r\n    startDate: new Date(this.leaveDate),\r\n    minDate: moment().toDate(),\r\n    onSelect: (date) => {\r\n      this.leaveDate = date;\r\n      this.returnDate =\r\n        this.tripType === TripType.RoundTrip\r\n          ? moment(this.leaveDate).add(1, 'days').toDate()\r\n          : null;\r\n    },\r\n  });\r\n\r\n    if (!isInitial) {\r\n      this.singlePicker.show();\r\n    }\r\n\r\n    // if (this.tripType === TripType.RoundTrip) {\r\n    //   this.returnDate = moment(this.leaveDate).add(1, 'days').toDate();\r\n    //   this.rangePicker.setDateRange(this.leaveDate, this.returnDate);\r\n    //    this.rangePicker.show();\r\n    // }else{\r\n    //   if (!isInitial) {\r\n    //     this.singlePicker.show();\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  rangeDatePicker(isInitial: boolean = false, returnDate: Date = null) {\r\n    if (this.singlePicker) {\r\n      this.singlePicker.destroy();\r\n    } // destroy old picker object\r\n    if (this.rangePicker) {\r\n      this.rangePicker.destroy();\r\n    } // destroy old picker object\r\n    if (!this.returnDate) {\r\n      this.returnDate = moment(this.leaveDate).add(1, 'days').toDate();\r\n    }\r\n  \r\n    this.rangePicker = new Lightpick({\r\n      field: this.isdisplayed== true? document.getElementById('dpLeaveDate1'): document.getElementById('dpLeaveDate'),\r\n      secondField:this.isdisplayed== true? document.getElementById('dpReturnDate1'):document.getElementById('dpReturnDate'),\r\n      // singleDate: true,\r\n      repick: true,\r\n      singleDate: true,\r\n\r\n      numberOfMonths: 2,\r\n      startDate: this.leaveDate,\r\n      endDate: returnDate\r\n        ? returnDate\r\n        : moment(this.leaveDate).add(1, 'days').toDate(),\r\n      minDate: this.leaveDate ? this.leaveDate : moment().toDate(),\r\n      onSelect: (start, end) => {\r\n        // this.leaveDate = start;\r\n        this.returnDate = end;\r\n        // this.rangePicker.hide();\r\n      },\r\n    });\r\n    this.rangePicker.setDateRange(this.leaveDate, this.returnDate);\r\n    if (!isInitial) {\r\n      // this.rangePicker.setDateRange(this.leaveDate, this.returnDate);\r\n      this.rangePicker.show();\r\n    } else {\r\n      // this.rangePicker.setDateRange(this.leaveDate, moment(this.leaveDate).add(1, 'days').toDate());\r\n    }\r\n    this.tripType = TripType.RoundTrip;\r\n  }\r\n\r\n  onTripTypeChanged(tripType: TripType) {\r\n    this.tripType = tripType;\r\n    this.dropDownMultiSearch = false;\r\n    if (this.tripType === TripType.OneWay) {\r\n      this.singleDatePicker(true);\r\n    } else if (this.tripType === TripType.RoundTrip) {\r\n      this.rangeDatePicker(true);\r\n    } else if (this.tripType === this.tripTypeEnum.MultiCity) {\r\n      this.dropDownMultiSearch = true;\r\n      if (this.returnDate) {\r\n        this.returnDate = null;\r\n      }\r\n    }\r\n\r\n    this.loadDates();\r\n  }\r\n\r\n  GetTripName(tripType: TripType): string {\r\n    if (this.tripType === TripType.OneWay) {\r\n      return \"one_way\"\r\n    } else if (this.tripType === TripType.RoundTrip) {\r\n      return \"round_trip\"\r\n    }\r\n  }\r\n\r\n  validateOriginLocation() {\r\n    if (!this.originLocation) {\r\n      $('#liDeparture').popover('show');\r\n    } else {\r\n      $('#liDeparture').popover('hide');\r\n    }\r\n  }\r\n\r\n  validateFromAndToAirports() {\r\n    if (this.originLocation && this.destinationLocation) {\r\n      if (_.isEqual(this.originLocation, this.destinationLocation)) {\r\n        this.toasterService.showError(\r\n          \"<span><i class='fa fa-exclamation-triangle'></i> From & To airports cannot be the same</span>\",\r\n          'Error'\r\n        );\r\n      } else {\r\n        $('#liArrival').popover('hide');\r\n      }\r\n    }\r\n  }\r\n\r\n  validateTravellers() {\r\n    if (this.Travellers > 9) {\r\n      $('#liTravellers').popover('show');\r\n    } else {\r\n      // $('#liTravellers').popover('hide');\r\n    }\r\n  }\r\n\r\n  applyTravellers() {\r\n    if (this.Travellers > 9) {\r\n      $('#liTravellers').popover('show');\r\n    } else {\r\n      $('#liTravellers').popover('hide');\r\n      $('.book-peron1').removeClass('bookon');\r\n    }\r\n  }\r\n\r\n  getPrice(date: any) {\r\n    let price = 0;\r\n    if (this.searchResult.altDaysFlights !== undefined) {\r\n      for (const element of this.searchResult?.altDaysFlights.sort((a, b) => a.totalFare - b.totalFare)) {\r\n        if (date.returnDate) {\r\n          if (\r\n            this.datePipe.transform(\r\n              element?.flightMini?.departure?.departureDateTime,\r\n              'yyyyMMdd'\r\n            ) === date.leaveDate &&\r\n            this.datePipe.transform(\r\n              element?.flightMini?.return?.departureDateTime,\r\n              'yyyyMMdd'\r\n            ) === date.returnDate\r\n          ) {\r\n            price = element.flightMini.totalFare;\r\n            break;\r\n          }\r\n        } else {\r\n          if (\r\n            this.datePipe.transform(\r\n              element?.flightMini?.departure?.departureDateTime,\r\n              'yyyyMMdd'\r\n            ) === date.leaveDate\r\n          ) {\r\n            price = element.flightMini.totalFare;\r\n            break;\r\n          }\r\n          if (\r\n            this.datePipe.transform(\r\n              this.searchResult?.cheapestFlight?.flightMini?.departure\r\n                ?.departureDateTime,\r\n              'yyyyMMdd'\r\n            ) === date.leaveDate\r\n          ) {\r\n            price = this.searchResult?.cheapestFlight?.flightMini?.totalFare;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return price === 0 ? null : formatNumber(price, this.locale, '1.0');\r\n  }\r\n  getSelectedPrice(date: any) {\r\n    let price = 0;\r\n    if (this.searchResult.flights !== undefined) {\r\n      for (const element of this.searchResult?.flights) {\r\n        if (date.returnDate) {\r\n          if (\r\n            this.datePipe.transform(\r\n              element?.flightMini?.departure?.departureDateTime,\r\n              'yyyyMMdd'\r\n            ) === date.leaveDate &&\r\n            this.datePipe.transform(\r\n              element?.flightMini?.return?.departureDateTime,\r\n              'yyyyMMdd'\r\n            ) === date.returnDate\r\n          ) {\r\n            price = element.flightMini.totalFare;\r\n            break;\r\n          }\r\n        } else {\r\n          if (\r\n            this.datePipe.transform(\r\n              element?.flightMini?.departure?.departureDateTime,\r\n              'yyyyMMdd'\r\n            ) === date.leaveDate\r\n          ) {\r\n            price = element.flightMini.totalFare;\r\n            break;\r\n          }\r\n          if (\r\n            this.datePipe.transform(\r\n              this.searchResult?.cheapestFlight?.flightMini?.departure\r\n                ?.departureDateTime,\r\n              'yyyyMMdd'\r\n            ) === date.leaveDate\r\n          ) {\r\n            price = this.searchResult?.cheapestFlight?.flightMini?.totalFare;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return price === 0 ? null : formatNumber(price, this.locale, '1.0');\r\n  }\r\n\r\n  showSearch()\r\n  {\r\n    this.isdisplayed=true;   \r\n  }\r\n  closeSearch()\r\n  {\r\n    this.isdisplayed=false;\r\n  }\r\n  public showDiv:boolean = true\r\n  searchResults(date?: any) {\r\n  \r\n    this.showDiv = false;\r\n    if(this.showDiv == false){\r\n      //document.getElementById('search-div').classList.add('display-n');\r\n      document.getElementById('search-div').setAttribute('style', 'display:none');\r\n    }\r\n    //this.isShowed= false\r\n    this.isdisplayed = false\r\n    this.isLoaded = false;\r\n    this.isSearchResults = true;\r\n    let isValid = true;\r\n    if (this.tripType === this.tripTypeEnum.MultiCity) {\r\n      if (this.multiCitiesValues && this.multiCitiesValues.length > 0) {\r\n        this.originLocation = this.multiCitiesValues[0].departureCode;\r\n        this.destinationLocation = this.multiCitiesValues[0].arrivalCode;\r\n      }\r\n    }\r\n    if (!this.originLocation) {\r\n      $('#liDeparture').popover('show');\r\n      isValid = false;\r\n    } else {\r\n      $('#liDeparture').popover('hide');\r\n    }\r\n\r\n    if (!this.destinationLocation) {\r\n      $('#liArrival').popover('show');\r\n      isValid = false;\r\n    } else {\r\n      $('#liArrival').popover('hide');\r\n    }\r\n\r\n    if (this.originLocation && this.destinationLocation) {\r\n      if (_.isEqual(this.originLocation, this.destinationLocation)) {\r\n        this.toasterService.showError(\r\n          \"<span><i class='fa fa-exclamation-triangle'></i> From & To airports cannot be the same</span>\",\r\n          'Error'\r\n        );\r\n        isValid = false;\r\n      } else {\r\n        $('#liArrival').popover('hide');\r\n      }\r\n    }\r\n\r\n    if (this.Travellers > 9) {\r\n      $('#liTravellers').popover('show');\r\n      isValid = false;\r\n    } else {\r\n      $('#liTravellers').popover('hide');\r\n    }\r\n\r\n    if (!isValid) {\r\n      this.isLoaded = true;\r\n      return;\r\n    }\r\n\r\n    if (date) {\r\n      this.leaveDate = date.leaveDateOrignal;\r\n      if (date.returnDateOrignal) {\r\n        this.returnDate = date.returnDateOrignal;\r\n      }\r\n    }\r\n    const multiCityData = [];\r\n    if (this.tripType === TripType.MultiCity) {\r\n      this.showDefaultSearchRow = false;\r\n      for (const item of this.multiCitiesValues) {\r\n        multiCityData.push({\r\n          originLocation: item.departureCode,\r\n          destinationLocation: item.arrivalCode,\r\n          departureDateTime: item.departureDate,\r\n          departureCode: item.departureCode,\r\n          departureCity: item.departureCity,\r\n          departureAirportName: '',\r\n          arrivalCode: item.arrivalCode,\r\n          arrivalCity: item.arrivalCity,\r\n          arrivalAirportName: item.arrivalAirportName,\r\n          departureDate: item.departureDate,\r\n          departureDisplayDate: item.departureDate,\r\n        });\r\n      }\r\n    }\r\n    const filters = {\r\n      trip: this.GetTripName(this.tripType),\r\n      originLocation: this.originLocation,\r\n      destinationLocation: this.destinationLocation,\r\n      leaveDate: new Date(this.leaveDate).toISOString(),\r\n      returnDate: this.returnDate\r\n        ? new Date(this.returnDate).toISOString()\r\n        : null,\r\n      isDirectFlightOnly: true,\r\n      travelClass: this.travelClass,\r\n      child: parseInt(this.child.toString()),\r\n      infant: parseInt(this.infant.toString()),\r\n      adult: parseInt(this.adult.toString()),\r\n      multiCities: JSON.stringify(multiCityData),\r\n      roleName: this.authService.getRole(),\r\n    };\r\n    filters.leaveDate = this.datePipe.transform(\r\n      this.leaveDate,\r\n      'yyyy-MM-ddTHH:mm:ss'\r\n    );\r\n    filters.returnDate = this.returnDate\r\n      ? this.datePipe.transform(this.returnDate, 'yyyy-MM-ddTHH:mm:ss')\r\n      : null;\r\n    // localStorage.setItem('search-filters', JSON.stringify(filters));    \r\n    this.searchfilters = JSON.stringify(filters);\r\n    this.searchResult = new SearchResultModel();\r\n    this.searchResult.flights = new Array<FlightModel>();\r\n    this.searchResult.airlineFliters = new Array<AirlineFliterModel>();\r\n    this.searchResult.stopFilters = new Array<StopFilterModel>();\r\n    this.clear();\r\n    sessionStorage.removeItem('flights');\r\n    this.homeService.searchFlights(filters).subscribe((response) => {\r\n      this.isLoaded = true;\r\n      if (response) {\r\n        if (response.status === 'success') {\r\n          this.showDiv = true;\r\n          this.isShow=true;\r\n          document.getElementById('search-div').classList.add('d-lg-block')\r\n          //document.getElementById('search-div').setAttribute('style', 'display:none');\r\n          if (response.data) {\r\n            //localStorage.setItem('flightResult', response.data);\r\n            this.locationResult = response.data.bestFlight;\r\n            this.searchResultEvent.emit(response.data);\r\n            this.searchResult = JSON.parse(JSON.stringify(response.data));\r\n            this.flightResult = JSON.parse(JSON.stringify(response.data));\r\n            this.flights = [];\r\n            this.altDaysFlights = JSON.parse(\r\n              JSON.stringify(response.data.altDaysFlights)\r\n            );\r\n            const flightsArray = [];\r\n            this.searchResult.flights.sort((a, b) => a.totalFare - b.totalFare).forEach((o) => {\r\n              // flightsArray.push(o);\r\n              const list = this.searchResult.flights.filter(\r\n                (i) =>\r\n                  i.originLocation === o.originLocation &&\r\n                  i.destinationLocation === o.destinationLocation &&\r\n                  i.totalFare === o.totalFare\r\n              );\r\n              const finalResult = list.sort((a, b) => a.totalFare - b.totalFare).filter((x) => x.flightId != o.flightId);\r\n              flightsArray.push(...finalResult);\r\n              const isExist = flightsArray.find(\r\n                (x) => x.flightId == o.flightId\r\n              );\r\n              if (!isExist) {\r\n                this.flights.push({\r\n                  ...o,\r\n                  childs: finalResult,\r\n                });\r\n              }\r\n            });\r\n            this.searchResult.flights = JSON.parse(\r\n              JSON.stringify(this.flights.sort((a, b) => a.totalFare - b.totalFare))\r\n            );\r\n            const allAirline = new AirlineFliterModel();\r\n            allAirline.code = 'ALL';\r\n            allAirline.name = 'All';\r\n            this.searchResult.airlineFliters.unshift(allAirline);\r\n            const allStop = new StopFilterModel();\r\n            allStop.value = 'ALL';\r\n            allStop.text = 'All';\r\n            this.searchResult.stopFilters.unshift(allStop);\r\n            this.bestFlight = this.searchResult.bestFlight;\r\n            this.cheapestFlight = this.searchResult.cheapestFlight;\r\n            this.fastestFlight = this.searchResult.fastestFlight;\r\n            sessionStorage.setItem(\r\n              'flights',\r\n              JSON.stringify(this.searchResult.flights)\r\n            );\r\n            this.loadDates();\r\n          }\r\n        } else {\r\n          this.searchResult.flights = new Array<FlightModel>();\r\n          if (response.message) {\r\n            this.searchResultsErrMsg = response.message;\r\n          } else {\r\n            this.isLoaded = false;\r\n            // this.searchResultsErrMsg ='Something went wrong! Please try again.';\r\n            this.toasterService.showError(\r\n              'Search Result Err 1: Unknown; Try Again',\r\n              'Error'\r\n            );\r\n          }\r\n          // this.isSearchResultsError = true;\r\n        }\r\n      } else {\r\n        // this.isSearchResultsError = true;\r\n        // this.searchResultsErrMsg = 'Something went wrong! Please try again.';\r\n        this.searchResult.flights = new Array<FlightModel>();\r\n        this.isLoaded = false;\r\n        this.toasterService.showError(\r\n          'Search Result Err 2: Unknown; Try Again',\r\n          'Error'\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  loadResults() {\r\n    this.isLoaded = false;\r\n    this.searchResult = new SearchResultModel();\r\n    this.searchResult.flights = new Array<FlightModel>();\r\n    this.searchResult.airlineFliters = new Array<AirlineFliterModel>();\r\n    this.searchResult.stopFilters = new Array<StopFilterModel>();\r\n    //const flightResult = JSON.parse(localStorage.getItem('flightResult'));\r\n\r\n    this.searchResult = JSON.parse(JSON.stringify(this.flightResult));\r\n    this.flights = [];\r\n    this.altDaysFlights = this.searchResult.altDaysFlights;\r\n    const flightsArray = [];\r\n    this.searchResult.flights.forEach((o) => {\r\n      const list = this.searchResult.flights.filter(\r\n        (i) =>\r\n          i.originLocation === o.originLocation &&\r\n          i.destinationLocation === o.destinationLocation &&\r\n          i.totalFare === o.totalFare\r\n      );\r\n      const finalResult = list.filter((x) => x.flightId != o.flightId);\r\n      flightsArray.push(...finalResult);\r\n      const isExist = flightsArray.find((x) => x.flightId == o.flightId);\r\n      if (!isExist) {\r\n        this.flights.push({\r\n          ...o,\r\n          childs: finalResult,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  applyFilter() {\r\n    // Stop Filter\r\n    const flights = JSON.parse(sessionStorage.getItem('flights'));\r\n    if (this.stopFilter === 'ALL') {\r\n      this.searchResult.flights = flights;\r\n    } else if (this.stopFilter === '0') {\r\n      if (this.tripType === TripType.RoundTrip) {\r\n        this.searchResult.flights = flights.filter(\r\n          (x) => !x.flightMini.departure.stops && !x.flightMini.return.stops\r\n        );\r\n      } else {\r\n        this.searchResult.flights = flights.filter(\r\n          (x) => !x.flightMini.departure.stops\r\n        );\r\n      }\r\n    } else if (this.stopFilter === '1') {\r\n      if (this.tripType === TripType.RoundTrip) {\r\n        this.searchResult.flights = flights.filter(\r\n          (x) =>\r\n            x.flightMini.departure.stops &&\r\n            x.flightMini.departure.stops === 1 &&\r\n            x.flightMini.return.stops &&\r\n            x.flightMini.return.stops === 1\r\n        );\r\n      } else {\r\n        this.searchResult.flights = flights.filter(\r\n          (x) =>\r\n            x.flightMini.departure.stops && x.flightMini.departure.stops === 1\r\n        );\r\n      }\r\n    } else if (this.stopFilter === '1+') {\r\n      if (this.tripType === TripType.RoundTrip) {\r\n        this.searchResult.flights = flights.filter(\r\n          (x) =>\r\n            x.flightMini.departure.stops &&\r\n            x.flightMini.departure.stops > 1 &&\r\n            x.flightMini.return.stops &&\r\n            x.flightMini.return.stops > 1\r\n        );\r\n      } else {\r\n        this.searchResult.flights = flights.filter(\r\n          (x) =>\r\n            x.flightMini.departure.stops && x.flightMini.departure.stops > 1\r\n        );\r\n      }\r\n    }\r\n\r\n    // Airline Filter\r\n    if (this.airlineFilter === 'ALL') {\r\n      this.searchResult.flights = this.searchResult.flights;\r\n    } else {\r\n      const result = this.searchResult.flights.filter(\r\n        (x) => x.airlineCode === this.airlineFilter\r\n      );\r\n      this.searchResult.flights = result;\r\n    }\r\n\r\n    // Arrange By Filter\r\n    if (this.arrangeFilter === 'lowest_fare') {\r\n      const result = this.searchResult.flights.sort((a, b) => {\r\n        return 0 - (a.totalFare > b.totalFare ? -1 : 1);\r\n      });\r\n      this.searchResult.flights = result;\r\n    } else if (this.arrangeFilter === 'shortest_travel_time') {\r\n      const result = this.searchResult.flights.sort((a, b) => {\r\n        return (\r\n          0 -\r\n          (a.flightMini.totalElapsedTime > b.flightMini.totalElapsedTime\r\n            ? -1\r\n            : 1)\r\n        );\r\n      });\r\n      this.searchResult.flights = result;\r\n    }\r\n  }\r\n\r\n  reviewBooking(flight: any, fareIndex: any) {\r\n    if (fareIndex >= 0) {\r\n      flight.fareDetails.farePrices = Object.assign({}, flight.farePrices[fareIndex])\r\n      if (flight.airlineType == 'LCC' && flight.flightSegments) {\r\n        flight.flightSegments[0].baggage.familyDescription = flight.fareDetails.farePrices.familyDescription;\r\n        flight.flightSegments[0].baggage.familyName = flight.fareDetails.farePrices.familyName;\r\n        flight.flightSegments[0].baggage.cabinName = flight.fareDetails.farePrices.cabinName;\r\n      }\r\n    }\r\n    sessionStorage.setItem('selectedFlight', JSON.stringify(flight));\r\n    if (flight) {\r\n      const url = this.router.serializeUrl(\r\n        this.router.createUrlTree(['/review-booking/' + flight.flightId])\r\n      );\r\n      window.open(url, '_blank');\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.isSearchResultsError = false;\r\n    this.searchResultsErrMsg = '';\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n    // Add 'implements AfterViewInit' to the class.\r\n    // add class and remove class\r\n    setTimeout(() => {\r\n      Home_init();\r\n    }, 100);\r\n\r\n    /*-------------------------------------------\r\n    add class active\r\n    --------------------------------------------*/\r\n    $('.book-peron .buisness li a').click(function () {\r\n      if ($(this).hasClass('active')) {\r\n        $(this).removeClass('active');\r\n      } else {\r\n        $('.book-peron .buisness li a.active').removeClass('active');\r\n        $(this).addClass('active');\r\n      }\r\n    });\r\n  }\r\n\r\n  hideDepartureAirportResults() {\r\n    $('.selectbox1').removeClass('select1');\r\n  }\r\n\r\n  hideArrivalAirportResults() {\r\n    $('.selectbox2').removeClass('select2');\r\n  }\r\n\r\n  getSelected(date) {\r\n    if (\r\n      date.leaveDate ===\r\n      this.datePipe.transform(this.selectedLeaveDate, 'yyyyMMdd')\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  selectDate(date) {\r\n    this.selectedLeaveDate = date.leaveDateOrignal;\r\n    this.selectedReturnDate = date.returnDateOrignal\r\n      ? date.returnDateOrignal\r\n      : null;\r\n    this.searchResults(date);\r\n    this.loadDates();\r\n  }\r\n\r\n  public getImageWeight(value) {\r\n    if (value == 'Direct') {\r\n      return 'assets/images/search/arrow-right.png';\r\n    } else {\r\n      return 'assets/images/search/arrow-first.png';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //this.searchfilters = '';\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ScrollStrategy} from './scroll-strategy';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {coerceCssPixelValue} from '@angular/cdk/coercion';\nimport {supportsScrollBehavior} from '@angular/cdk/platform';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nexport class BlockScrollStrategy implements ScrollStrategy {\n  private _previousHTMLStyles = {top: '', left: ''};\n  private _previousScrollPosition: {top: number, left: number};\n  private _isEnabled = false;\n  private _document: Document;\n\n  constructor(private _viewportRuler: ViewportRuler, document: any) {\n    this._document = document;\n  }\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach() {}\n\n  /** Blocks page-level scroll while the attached overlay is open. */\n  enable() {\n    if (this._canBeEnabled()) {\n      const root = this._document.documentElement!;\n\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left || '';\n      this._previousHTMLStyles.top = root.style.top || '';\n\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n      root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n\n  /** Unblocks page-level scroll while the attached overlay is open. */\n  disable() {\n    if (this._isEnabled) {\n      const html = this._document.documentElement!;\n      const body = this._document.body!;\n      const htmlStyle = html.style;\n      const bodyStyle = body.style;\n      const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n      const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n\n      this._isEnabled = false;\n\n      htmlStyle.left = this._previousHTMLStyles.left;\n      htmlStyle.top = this._previousHTMLStyles.top;\n      html.classList.remove('cdk-global-scrollblock');\n\n      // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n      // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n      // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n      // because it can throw off feature detections in `supportsScrollBehavior` which\n      // checks for `'scrollBehavior' in documentElement.style`.\n      if (scrollBehaviorSupported) {\n        htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n      }\n\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n\n      if (scrollBehaviorSupported) {\n        htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n        bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n      }\n    }\n  }\n\n  private _canBeEnabled(): boolean {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    const html = this._document.documentElement!;\n\n    if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n\n    const body = this._document.body;\n    const viewport = this._viewportRuler.getViewportSize();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgZone} from '@angular/core';\nimport {ScrollStrategy, getMatScrollStrategyAlreadyAttachedError} from './scroll-strategy';\nimport {OverlayReference} from '../overlay-reference';\nimport {Subscription} from 'rxjs';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\n\n/**\n * Config options for the CloseScrollStrategy.\n */\nexport interface CloseScrollStrategyConfig {\n  /** Amount of pixels the user has to scroll before the overlay is closed. */\n  threshold?: number;\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nexport class CloseScrollStrategy implements ScrollStrategy {\n  private _scrollSubscription: Subscription|null = null;\n  private _overlayRef: OverlayReference;\n  private _initialScrollPosition: number;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _ngZone: NgZone,\n    private _viewportRuler: ViewportRuler,\n    private _config?: CloseScrollStrategyConfig) {}\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef: OverlayReference) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n\n    this._overlayRef = overlayRef;\n  }\n\n  /** Enables the closing of the attached overlay on scroll. */\n  enable() {\n    if (this._scrollSubscription) {\n      return;\n    }\n\n    const stream = this._scrollDispatcher.scrolled(0);\n\n    if (this._config && this._config.threshold && this._config.threshold > 1) {\n      this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n\n      this._scrollSubscription = stream.subscribe(() => {\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n\n        if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config!.threshold!) {\n          this._detach();\n        } else {\n          this._overlayRef.updatePosition();\n        }\n      });\n    } else {\n      this._scrollSubscription = stream.subscribe(this._detach);\n    }\n  }\n\n  /** Disables the closing the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n\n  detach() {\n    this.disable();\n    this._overlayRef = null!;\n  }\n\n  /** Detaches the overlay ref and disables the scroll strategy. */\n  private _detach = () => {\n    this.disable();\n\n    if (this._overlayRef.hasAttached()) {\n      this._ngZone.run(() => this._overlayRef.detach());\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ScrollStrategy} from './scroll-strategy';\n\n/** Scroll strategy that doesn't do anything. */\nexport class NoopScrollStrategy implements ScrollStrategy {\n  /** Does nothing, as this scroll strategy is a no-op. */\n  enable() { }\n  /** Does nothing, as this scroll strategy is a no-op. */\n  disable() { }\n  /** Does nothing, as this scroll strategy is a no-op. */\n  attach() { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nexport function isElementScrolledOutsideView(element: ClientRect, scrollContainers: ClientRect[]) {\n  return scrollContainers.some(containerBounds => {\n    const outsideAbove = element.bottom < containerBounds.top;\n    const outsideBelow = element.top > containerBounds.bottom;\n    const outsideLeft = element.right < containerBounds.left;\n    const outsideRight = element.left > containerBounds.right;\n\n    return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n  });\n}\n\n\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nexport function isElementClippedByScrolling(element: ClientRect, scrollContainers: ClientRect[]) {\n  return scrollContainers.some(scrollContainerRect => {\n    const clippedAbove = element.top < scrollContainerRect.top;\n    const clippedBelow = element.bottom > scrollContainerRect.bottom;\n    const clippedLeft = element.left < scrollContainerRect.left;\n    const clippedRight = element.right > scrollContainerRect.right;\n\n    return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {ScrollStrategy, getMatScrollStrategyAlreadyAttachedError} from './scroll-strategy';\nimport {OverlayReference} from '../overlay-reference';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\nimport {isElementScrolledOutsideView} from '../position/scroll-clip';\n\n/**\n * Config options for the RepositionScrollStrategy.\n */\nexport interface RepositionScrollStrategyConfig {\n  /** Time in milliseconds to throttle the scroll events. */\n  scrollThrottle?: number;\n\n  /** Whether to close the overlay once the user has scrolled away completely. */\n  autoClose?: boolean;\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nexport class RepositionScrollStrategy implements ScrollStrategy {\n  private _scrollSubscription: Subscription|null = null;\n  private _overlayRef: OverlayReference;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewportRuler: ViewportRuler,\n    private _ngZone: NgZone,\n    private _config?: RepositionScrollStrategyConfig) { }\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef: OverlayReference) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n\n    this._overlayRef = overlayRef;\n  }\n\n  /** Enables repositioning of the attached overlay on scroll. */\n  enable() {\n    if (!this._scrollSubscription) {\n      const throttle = this._config ? this._config.scrollThrottle : 0;\n\n      this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n        this._overlayRef.updatePosition();\n\n        // TODO(crisbeto): make `close` on by default once all components can handle it.\n        if (this._config && this._config.autoClose) {\n          const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n          const {width, height} = this._viewportRuler.getViewportSize();\n\n          // TODO(crisbeto): include all ancestor scroll containers here once\n          // we have a way of exposing the trigger element to the scroll strategy.\n          const parentRects = [{width, height, bottom: height, right: width, top: 0, left: 0}];\n\n          if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n            this.disable();\n            this._ngZone.run(() => this._overlayRef.detach());\n          }\n        }\n      });\n    }\n  }\n\n  /** Disables repositioning of the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n\n  detach() {\n    this.disable();\n    this._overlayRef = null!;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {BlockScrollStrategy} from './block-scroll-strategy';\nimport {CloseScrollStrategy, CloseScrollStrategyConfig} from './close-scroll-strategy';\nimport {NoopScrollStrategy} from './noop-scroll-strategy';\nimport {\n  RepositionScrollStrategy,\n  RepositionScrollStrategyConfig,\n} from './reposition-scroll-strategy';\n\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollStrategyOptions {\n  private _document: Document;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewportRuler: ViewportRuler,\n    private _ngZone: NgZone,\n    @Inject(DOCUMENT) document: any) {\n      this._document = document;\n    }\n\n  /** Do nothing on scroll. */\n  noop = () => new NoopScrollStrategy();\n\n  /**\n   * Close the overlay as soon as the user scrolls.\n   * @param config Configuration to be used inside the scroll strategy.\n   */\n  close = (config?: CloseScrollStrategyConfig) => new CloseScrollStrategy(this._scrollDispatcher,\n      this._ngZone, this._viewportRuler, config)\n\n  /** Block scrolling. */\n  block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n\n  /**\n   * Update the overlay's position on scroll.\n   * @param config Configuration to be used inside the scroll strategy.\n   * Allows debouncing the reposition calls.\n   */\n  reposition = (config?: RepositionScrollStrategyConfig) => new RepositionScrollStrategy(\n      this._scrollDispatcher, this._viewportRuler, this._ngZone, config)\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position/position-strategy';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {ScrollStrategy, NoopScrollStrategy} from './scroll/index';\n\n\n/** Initial configuration used when creating an overlay. */\nexport class OverlayConfig {\n  /** Strategy with which to position the overlay. */\n  positionStrategy?: PositionStrategy;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  scrollStrategy?: ScrollStrategy = new NoopScrollStrategy();\n\n  /** Custom class to add to the overlay pane. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the overlay has a backdrop. */\n  hasBackdrop?: boolean = false;\n\n  /** Custom class to add to the backdrop */\n  backdropClass?: string | string[] = 'cdk-overlay-dark-backdrop';\n\n  /** The width of the overlay panel. If a number is provided, pixel units are assumed. */\n  width?: number | string;\n\n  /** The height of the overlay panel. If a number is provided, pixel units are assumed. */\n  height?: number | string;\n\n  /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. */\n  minWidth?: number | string;\n\n  /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. */\n  minHeight?: number | string;\n\n  /** The max-width of the overlay panel. If a number is provided, pixel units are assumed. */\n  maxWidth?: number | string;\n\n  /** The max-height of the overlay panel. If a number is provided, pixel units are assumed. */\n  maxHeight?: number | string;\n\n  /**\n   * Direction of the text in the overlay panel. If a `Directionality` instance\n   * is passed in, the overlay will handle changes to its value automatically.\n   */\n  direction?: Direction | Directionality;\n\n  /**\n   * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  disposeOnNavigation?: boolean = false;\n\n  constructor(config?: OverlayConfig) {\n    if (config) {\n      // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n      // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n      // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n      const configKeys =\n          Object.keys(config) as Iterable<keyof OverlayConfig> & (keyof OverlayConfig)[];\n      for (const key of configKeys) {\n        if (config[key] !== undefined) {\n          // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n          // as \"I don't know *which* key this is, so the only valid value is the intersection\n          // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n          // is not smart enough to see that the right-hand-side is actually an access of the same\n          // exact type with the same exact key, meaning that the value type must be identical.\n          // So we use `any` to work around this.\n          this[key] = config[key] as any;\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Horizontal dimension of a connection point on the perimeter of the origin or overlay element. */\nimport {Optional} from '@angular/core';\nexport type HorizontalConnectionPos = 'start' | 'center' | 'end';\n\n/** Vertical dimension of a connection point on the perimeter of the origin or overlay element. */\nexport type VerticalConnectionPos = 'top' | 'center' | 'bottom';\n\n\n/** A connection point on the origin element. */\nexport interface OriginConnectionPosition {\n  originX: HorizontalConnectionPos;\n  originY: VerticalConnectionPos;\n}\n\n/** A connection point on the overlay element. */\nexport interface OverlayConnectionPosition {\n  overlayX: HorizontalConnectionPos;\n  overlayY: VerticalConnectionPos;\n}\n\n/** The points of the origin element and the overlay element to connect. */\nexport class ConnectionPositionPair {\n  /** X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'. */\n  originX: HorizontalConnectionPos;\n  /** Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'. */\n  originY: VerticalConnectionPos;\n  /** X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'. */\n  overlayX: HorizontalConnectionPos;\n  /** Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'. */\n  overlayY: VerticalConnectionPos;\n\n  constructor(\n    origin: OriginConnectionPosition,\n    overlay: OverlayConnectionPosition,\n    /** Offset along the X axis. */\n    public offsetX?: number,\n    /** Offset along the Y axis. */\n    public offsetY?: number,\n    /** Class(es) to be applied to the panel while this position is active. */\n    public panelClass?: string | string[]) {\n\n    this.originX = origin.originX;\n    this.originY = origin.originY;\n    this.overlayX = overlay.overlayX;\n    this.overlayY = overlay.overlayY;\n  }\n}\n\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nexport class ScrollingVisibility {\n  isOriginClipped: boolean;\n  isOriginOutsideView: boolean;\n  isOverlayClipped: boolean;\n  isOverlayOutsideView: boolean;\n}\n\n/** The change event emitted by the strategy when a fallback position is used. */\nexport class ConnectedOverlayPositionChange {\n  constructor(\n      /** The position used as a result of this change. */\n      public connectionPair: ConnectionPositionPair,\n      /** @docs-private */\n      @Optional() public scrollableViewProperties: ScrollingVisibility) {}\n}\n\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nexport function validateVerticalPosition(property: string, value: VerticalConnectionPos) {\n  if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n                `Expected \"top\", \"bottom\" or \"center\".`);\n  }\n}\n\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nexport function validateHorizontalPosition(property: string, value: HorizontalConnectionPos) {\n  if (value !== 'start' && value !== 'end' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n                `Expected \"start\", \"end\" or \"center\".`);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {OverlayReference} from '../overlay-reference';\n\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\n@Injectable({providedIn: 'root'})\nexport abstract class BaseOverlayDispatcher implements OnDestroy {\n\n  /** Currently attached overlays in the order they were attached. */\n  _attachedOverlays: OverlayReference[] = [];\n\n  protected _document: Document;\n  protected _isAttached: boolean;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  ngOnDestroy(): void {\n    this.detach();\n  }\n\n  /** Add a new overlay to the list of attached overlay refs. */\n  add(overlayRef: OverlayReference): void {\n    // Ensure that we don't get the same overlay multiple times.\n    this.remove(overlayRef);\n    this._attachedOverlays.push(overlayRef);\n  }\n\n  /** Remove an overlay from the list of attached overlay refs. */\n  remove(overlayRef: OverlayReference): void {\n    const index = this._attachedOverlays.indexOf(overlayRef);\n\n    if (index > -1) {\n      this._attachedOverlays.splice(index, 1);\n    }\n\n    // Remove the global listener once there are no more overlays.\n    if (this._attachedOverlays.length === 0) {\n      this.detach();\n    }\n  }\n\n  /** Detaches the global event listener. */\n  protected abstract detach(): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {OverlayReference} from '../overlay-reference';\nimport {BaseOverlayDispatcher} from './base-overlay-dispatcher';\n\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\n@Injectable({providedIn: 'root'})\nexport class OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    super(document);\n  }\n\n  /** Add a new overlay to the list of attached overlay refs. */\n  override add(overlayRef: OverlayReference): void {\n    super.add(overlayRef);\n\n    // Lazily start dispatcher once first overlay is added\n    if (!this._isAttached) {\n      this._document.body.addEventListener('keydown', this._keydownListener);\n      this._isAttached = true;\n    }\n  }\n\n  /** Detaches the global keyboard event listener. */\n  protected detach() {\n    if (this._isAttached) {\n      this._document.body.removeEventListener('keydown', this._keydownListener);\n      this._isAttached = false;\n    }\n  }\n\n  /** Keyboard event listener that will be attached to the body. */\n  private _keydownListener = (event: KeyboardEvent) => {\n    const overlays = this._attachedOverlays;\n\n    for (let i = overlays.length - 1; i > -1; i--) {\n      // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n      // We want to target the most recent overlay, rather than trying to match where the event came\n      // from, because some components might open an overlay, but keep focus on a trigger element\n      // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n      // because we don't want overlays that don't handle keyboard events to block the ones below\n      // them that do.\n      if (overlays[i]._keydownEvents.observers.length > 0) {\n        overlays[i]._keydownEvents.next(event);\n        break;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {OverlayReference} from '../overlay-reference';\nimport {Platform, _getEventTarget} from '@angular/cdk/platform';\nimport {BaseOverlayDispatcher} from './base-overlay-dispatcher';\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\n@Injectable({providedIn: 'root'})\nexport class OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n  private _cursorOriginalValue: string;\n  private _cursorStyleIsSet = false;\n  private _pointerDownEventTarget: EventTarget | null;\n\n  constructor(@Inject(DOCUMENT) document: any, private _platform: Platform) {\n    super(document);\n  }\n\n  /** Add a new overlay to the list of attached overlay refs. */\n  override add(overlayRef: OverlayReference): void {\n    super.add(overlayRef);\n\n    // Safari on iOS does not generate click events for non-interactive\n    // elements. However, we want to receive a click for any element outside\n    // the overlay. We can force a \"clickable\" state by setting\n    // `cursor: pointer` on the document body. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n    // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n    if (!this._isAttached) {\n      const body = this._document.body;\n      body.addEventListener('pointerdown', this._pointerDownListener, true);\n      body.addEventListener('click', this._clickListener, true);\n      body.addEventListener('auxclick', this._clickListener, true);\n      body.addEventListener('contextmenu', this._clickListener, true);\n\n      // click event is not fired on iOS. To make element \"clickable\" we are\n      // setting the cursor to pointer\n      if (this._platform.IOS && !this._cursorStyleIsSet) {\n        this._cursorOriginalValue = body.style.cursor;\n        body.style.cursor = 'pointer';\n        this._cursorStyleIsSet = true;\n      }\n\n      this._isAttached = true;\n    }\n  }\n\n  /** Detaches the global keyboard event listener. */\n  protected detach() {\n    if (this._isAttached) {\n      const body = this._document.body;\n      body.removeEventListener('pointerdown', this._pointerDownListener, true);\n      body.removeEventListener('click', this._clickListener, true);\n      body.removeEventListener('auxclick', this._clickListener, true);\n      body.removeEventListener('contextmenu', this._clickListener, true);\n      if (this._platform.IOS && this._cursorStyleIsSet) {\n        body.style.cursor = this._cursorOriginalValue;\n        this._cursorStyleIsSet = false;\n      }\n      this._isAttached = false;\n    }\n  }\n\n  /** Store pointerdown event target to track origin of click. */\n  private _pointerDownListener = (event: PointerEvent) => {\n    this._pointerDownEventTarget = _getEventTarget(event);\n  }\n\n  /** Click event listener that will be attached to the body propagate phase. */\n  private _clickListener = (event: MouseEvent) => {\n    const target = _getEventTarget(event);\n    // In case of a click event, we want to check the origin of the click\n    // (e.g. in case where a user starts a click inside the overlay and\n    // releases the click outside of it).\n    // This is done by using the event target of the preceding pointerdown event.\n    // Every click event caused by a pointer device has a preceding pointerdown\n    // event, unless the click was programmatically triggered (e.g. in a unit test).\n    const origin = event.type === 'click' && this._pointerDownEventTarget\n      ? this._pointerDownEventTarget : target;\n    // Reset the stored pointerdown event target, to avoid having it interfere\n    // in subsequent events.\n    this._pointerDownEventTarget = null;\n\n    // We copy the array because the original may be modified asynchronously if the\n    // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n    // the for loop.\n    const overlays = this._attachedOverlays.slice();\n\n    // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n    // We want to target all overlays for which the click could be considered as outside click.\n    // As soon as we reach an overlay for which the click is not outside click we break off\n    // the loop.\n    for (let i = overlays.length - 1; i > -1; i--) {\n      const overlayRef = overlays[i];\n      if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n        continue;\n      }\n\n      // If it's a click inside the overlay, just break - we should do nothing\n      // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n      // and proceed with the next overlay\n      if (overlayRef.overlayElement.contains(target as Node) ||\n          overlayRef.overlayElement.contains(origin as Node)) {\n        break;\n      }\n\n      overlayRef._outsidePointerEvents.next(event);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {Platform, _isTestEnvironment} from '@angular/cdk/platform';\n\n/** Container inside which all overlays will render. */\n@Injectable({providedIn: 'root'})\nexport class OverlayContainer implements OnDestroy {\n  protected _containerElement: HTMLElement;\n  protected _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any, protected _platform: Platform) {\n    this._document = document;\n  }\n\n  ngOnDestroy() {\n    const container = this._containerElement;\n\n    if (container && container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n  }\n\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  protected _createContainer(): void {\n    const containerClass = 'cdk-overlay-container';\n\n    // TODO(crisbeto): remove the testing check once we have an overlay testing\n    // module or Angular starts tearing down the testing `NgModule`. See:\n    // https://github.com/angular/angular/issues/18831\n    if (this._platform.isBrowser || _isTestEnvironment()) {\n      const oppositePlatformContainers =\n          this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                                          `.${containerClass}[platform=\"test\"]`);\n\n      // Remove any old containers from the opposite platform.\n      // This can happen when transitioning from the server to the client.\n      for (let i = 0; i < oppositePlatformContainers.length; i++) {\n        oppositePlatformContainers[i].parentNode!.removeChild(oppositePlatformContainers[i]);\n      }\n    }\n\n    const container = this._document.createElement('div');\n    container.classList.add(containerClass);\n\n    // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n    // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n    // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n    // To mitigate the problem we made it so that only containers from a different platform are\n    // cleared, but the side-effect was that people started depending on the overly-aggressive\n    // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n    // module which does the cleanup, we try to detect that we're in a test environment and we\n    // always clear the container. See #17006.\n    // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n    if (_isTestEnvironment()) {\n      container.setAttribute('platform', 'test');\n    } else if (!this._platform.isBrowser) {\n      container.setAttribute('platform', 'server');\n    }\n\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {ComponentPortal, Portal, PortalOutlet, TemplatePortal} from '@angular/cdk/portal';\nimport {ComponentRef, EmbeddedViewRef, NgZone} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {Observable, Subject, merge, SubscriptionLike, Subscription} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {OverlayKeyboardDispatcher} from './dispatchers/overlay-keyboard-dispatcher';\nimport {OverlayOutsideClickDispatcher} from './dispatchers/overlay-outside-click-dispatcher';\nimport {OverlayConfig} from './overlay-config';\nimport {coerceCssPixelValue, coerceArray} from '@angular/cdk/coercion';\nimport {OverlayReference} from './overlay-reference';\nimport {PositionStrategy} from './position/position-strategy';\nimport {ScrollStrategy} from './scroll';\n\n\n/** An object where all of its properties cannot be written. */\nexport type ImmutableObject<T> = {\n  readonly [P in keyof T]: T[P];\n};\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef implements PortalOutlet, OverlayReference {\n  private _backdropElement: HTMLElement | null = null;\n  private readonly _backdropClick = new Subject<MouseEvent>();\n  private readonly _attachments = new Subject<void>();\n  private readonly _detachments = new Subject<void>();\n  private _positionStrategy: PositionStrategy | undefined;\n  private _scrollStrategy: ScrollStrategy | undefined;\n  private _locationChanges: SubscriptionLike = Subscription.EMPTY;\n  private _backdropClickHandler = (event: MouseEvent) => this._backdropClick.next(event);\n\n  /**\n   * Reference to the parent of the `_host` at the time it was detached. Used to restore\n   * the `_host` to its original position in the DOM when it gets re-attached.\n   */\n  private _previousHostParent: HTMLElement;\n\n  /** Stream of keydown events dispatched to this overlay. */\n  readonly _keydownEvents = new Subject<KeyboardEvent>();\n\n  /** Stream of mouse outside events dispatched to this overlay. */\n  readonly _outsidePointerEvents = new Subject<MouseEvent>();\n\n  constructor(\n      private _portalOutlet: PortalOutlet,\n      private _host: HTMLElement,\n      private _pane: HTMLElement,\n      private _config: ImmutableObject<OverlayConfig>,\n      private _ngZone: NgZone,\n      private _keyboardDispatcher: OverlayKeyboardDispatcher,\n      private _document: Document,\n      private _location: Location,\n      private _outsideClickDispatcher: OverlayOutsideClickDispatcher) {\n\n    if (_config.scrollStrategy) {\n      this._scrollStrategy = _config.scrollStrategy;\n      this._scrollStrategy.attach(this);\n    }\n\n    this._positionStrategy = _config.positionStrategy;\n  }\n\n  /** The overlay's HTML element */\n  get overlayElement(): HTMLElement {\n    return this._pane;\n  }\n\n  /** The overlay's backdrop HTML element. */\n  get backdropElement(): HTMLElement | null {\n    return this._backdropElement;\n  }\n\n  /**\n   * Wrapper around the panel element. Can be used for advanced\n   * positioning where a wrapper with specific styling is\n   * required around the overlay pane.\n   */\n  get hostElement(): HTMLElement {\n    return this._host;\n  }\n\n  attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n  attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\n  attach(portal: any): any;\n\n  /**\n   * Attaches content, given via a Portal, to the overlay.\n   * If the overlay is configured to have a backdrop, it will be created.\n   *\n   * @param portal Portal instance to which to attach the overlay.\n   * @returns The portal attachment result.\n   */\n  attach(portal: Portal<any>): any {\n    let attachResult = this._portalOutlet.attach(portal);\n\n    // Update the pane element with the given configuration.\n    if (!this._host.parentElement && this._previousHostParent) {\n      this._previousHostParent.appendChild(this._host);\n    }\n\n    if (this._positionStrategy) {\n      this._positionStrategy.attach(this);\n    }\n\n    this._updateStackingOrder();\n    this._updateElementSize();\n    this._updateElementDirection();\n\n    if (this._scrollStrategy) {\n      this._scrollStrategy.enable();\n    }\n\n    // Update the position once the zone is stable so that the overlay will be fully rendered\n    // before attempting to position it, as the position may depend on the size of the rendered\n    // content.\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => {\n        // The overlay could've been detached before the zone has stabilized.\n        if (this.hasAttached()) {\n          this.updatePosition();\n        }\n      });\n\n    // Enable pointer events for the overlay pane element.\n    this._togglePointerEvents(true);\n\n    if (this._config.hasBackdrop) {\n      this._attachBackdrop();\n    }\n\n    if (this._config.panelClass) {\n      this._toggleClasses(this._pane, this._config.panelClass, true);\n    }\n\n    // Only emit the `attachments` event once all other setup is done.\n    this._attachments.next();\n\n    // Track this overlay by the keyboard dispatcher\n    this._keyboardDispatcher.add(this);\n\n    if (this._config.disposeOnNavigation) {\n      this._locationChanges = this._location.subscribe(() => this.dispose());\n    }\n\n    this._outsideClickDispatcher.add(this);\n    return attachResult;\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns The portal detachment result.\n   */\n  detach(): any {\n    if (!this.hasAttached()) {\n      return;\n    }\n\n    this.detachBackdrop();\n\n    // When the overlay is detached, the pane element should disable pointer events.\n    // This is necessary because otherwise the pane element will cover the page and disable\n    // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n    this._togglePointerEvents(false);\n\n    if (this._positionStrategy && this._positionStrategy.detach) {\n      this._positionStrategy.detach();\n    }\n\n    if (this._scrollStrategy) {\n      this._scrollStrategy.disable();\n    }\n\n    const detachmentResult = this._portalOutlet.detach();\n\n    // Only emit after everything is detached.\n    this._detachments.next();\n\n    // Remove this overlay from keyboard dispatcher tracking.\n    this._keyboardDispatcher.remove(this);\n\n    // Keeping the host element in the DOM can cause scroll jank, because it still gets\n    // rendered, even though it's transparent and unclickable which is why we remove it.\n    this._detachContentWhenStable();\n    this._locationChanges.unsubscribe();\n    this._outsideClickDispatcher.remove(this);\n    return detachmentResult;\n  }\n\n  /** Cleans up the overlay from the DOM. */\n  dispose(): void {\n    const isAttached = this.hasAttached();\n\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n\n    this._disposeScrollStrategy();\n    this._disposeBackdrop(this._backdropElement);\n    this._locationChanges.unsubscribe();\n    this._keyboardDispatcher.remove(this);\n    this._portalOutlet.dispose();\n    this._attachments.complete();\n    this._backdropClick.complete();\n    this._keydownEvents.complete();\n    this._outsidePointerEvents.complete();\n    this._outsideClickDispatcher.remove(this);\n\n    if (this._host && this._host.parentNode) {\n      this._host.parentNode.removeChild(this._host);\n      this._host = null!;\n    }\n\n    this._previousHostParent = this._pane = null!;\n\n    if (isAttached) {\n      this._detachments.next();\n    }\n\n    this._detachments.complete();\n  }\n\n  /** Whether the overlay has attached content. */\n  hasAttached(): boolean {\n    return this._portalOutlet.hasAttached();\n  }\n\n  /** Gets an observable that emits when the backdrop has been clicked. */\n  backdropClick(): Observable<MouseEvent> {\n    return this._backdropClick;\n  }\n\n  /** Gets an observable that emits when the overlay has been attached. */\n  attachments(): Observable<void> {\n    return this._attachments;\n  }\n\n  /** Gets an observable that emits when the overlay has been detached. */\n  detachments(): Observable<void> {\n    return this._detachments;\n  }\n\n  /** Gets an observable of keydown events targeted to this overlay. */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._keydownEvents;\n  }\n\n  /** Gets an observable of pointer events targeted outside this overlay. */\n  outsidePointerEvents(): Observable<MouseEvent> {\n    return this._outsidePointerEvents;\n  }\n\n  /** Gets the current overlay configuration, which is immutable. */\n  getConfig(): OverlayConfig {\n    return this._config;\n  }\n\n  /** Updates the position of the overlay based on the position strategy. */\n  updatePosition(): void {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n\n  /** Switches to a new position strategy and updates the overlay position. */\n  updatePositionStrategy(strategy: PositionStrategy): void {\n    if (strategy === this._positionStrategy) {\n      return;\n    }\n\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n\n    this._positionStrategy = strategy;\n\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      this.updatePosition();\n    }\n  }\n\n  /** Update the size properties of the overlay. */\n  updateSize(sizeConfig: OverlaySizeConfig): void {\n    this._config = {...this._config, ...sizeConfig};\n    this._updateElementSize();\n  }\n\n  /** Sets the LTR/RTL direction for the overlay. */\n  setDirection(dir: Direction | Directionality): void {\n    this._config = {...this._config, direction: dir};\n    this._updateElementDirection();\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): void {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, true);\n    }\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): void {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, false);\n    }\n  }\n\n  /**\n   * Returns the layout direction of the overlay panel.\n   */\n  getDirection(): Direction {\n    const direction = this._config.direction;\n\n    if (!direction) {\n      return 'ltr';\n    }\n\n    return typeof direction === 'string' ? direction : direction.value;\n  }\n\n  /** Switches to a new scroll strategy. */\n  updateScrollStrategy(strategy: ScrollStrategy): void {\n    if (strategy === this._scrollStrategy) {\n      return;\n    }\n\n    this._disposeScrollStrategy();\n    this._scrollStrategy = strategy;\n\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      strategy.enable();\n    }\n  }\n\n  /** Updates the text direction of the overlay panel. */\n  private _updateElementDirection() {\n    this._host.setAttribute('dir', this.getDirection());\n  }\n\n  /** Updates the size of the overlay element based on the overlay config. */\n  private _updateElementSize() {\n    if (!this._pane) {\n      return;\n    }\n\n    const style = this._pane.style;\n\n    style.width = coerceCssPixelValue(this._config.width);\n    style.height = coerceCssPixelValue(this._config.height);\n    style.minWidth = coerceCssPixelValue(this._config.minWidth);\n    style.minHeight = coerceCssPixelValue(this._config.minHeight);\n    style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n    style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n  }\n\n  /** Toggles the pointer events for the overlay pane element. */\n  private _togglePointerEvents(enablePointer: boolean) {\n    this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n  }\n\n  /** Attaches a backdrop for this overlay. */\n  private _attachBackdrop() {\n    const showingClass = 'cdk-overlay-backdrop-showing';\n\n    this._backdropElement = this._document.createElement('div');\n    this._backdropElement.classList.add('cdk-overlay-backdrop');\n\n    if (this._config.backdropClass) {\n      this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n    }\n\n    // Insert the backdrop before the pane in the DOM order,\n    // in order to handle stacked overlays properly.\n    this._host.parentElement!.insertBefore(this._backdropElement, this._host);\n\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n    // action desired when such a click occurs (usually closing the overlay).\n    this._backdropElement.addEventListener('click', this._backdropClickHandler);\n\n    // Add class to fade-in the backdrop after one frame.\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          if (this._backdropElement) {\n            this._backdropElement.classList.add(showingClass);\n          }\n        });\n      });\n    } else {\n      this._backdropElement.classList.add(showingClass);\n    }\n  }\n\n  /**\n   * Updates the stacking order of the element, moving it to the top if necessary.\n   * This is required in cases where one overlay was detached, while another one,\n   * that should be behind it, was destroyed. The next time both of them are opened,\n   * the stacking will be wrong, because the detached element's pane will still be\n   * in its original DOM position.\n   */\n  private _updateStackingOrder() {\n    if (this._host.nextSibling) {\n      this._host.parentNode!.appendChild(this._host);\n    }\n  }\n\n  /** Detaches the backdrop (if any) associated with the overlay. */\n  detachBackdrop(): void {\n    const backdropToDetach = this._backdropElement;\n\n    if (!backdropToDetach) {\n      return;\n    }\n\n    let timeoutId: number;\n    const finishDetach = () => {\n      // It may not be attached to anything in certain cases (e.g. unit tests).\n      if (backdropToDetach) {\n        backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n        backdropToDetach.removeEventListener('transitionend', finishDetach);\n        this._disposeBackdrop(backdropToDetach);\n      }\n\n      if (this._config.backdropClass) {\n        this._toggleClasses(backdropToDetach!, this._config.backdropClass, false);\n      }\n\n      clearTimeout(timeoutId);\n    };\n\n    backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n\n    this._ngZone.runOutsideAngular(() => {\n      backdropToDetach!.addEventListener('transitionend', finishDetach);\n    });\n\n    // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n    // In this case we make it unclickable and we try to remove it after a delay.\n    backdropToDetach.style.pointerEvents = 'none';\n\n    // Run this outside the Angular zone because there's nothing that Angular cares about.\n    // If it were to run inside the Angular zone, every test that used Overlay would have to be\n    // either async or fakeAsync.\n    timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n  }\n\n  /** Toggles a single CSS class or an array of classes on an element. */\n  private _toggleClasses(element: HTMLElement, cssClasses: string | string[], isAdd: boolean) {\n    const classList = element.classList;\n\n    coerceArray(cssClasses).forEach(cssClass => {\n      // We can't do a spread here, because IE doesn't support setting multiple classes.\n      // Also trying to add an empty string to a DOMTokenList will throw.\n      if (cssClass) {\n        isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n      }\n    });\n  }\n\n  /** Detaches the overlay content next time the zone stabilizes. */\n  private _detachContentWhenStable() {\n    // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n    // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n    // be patched to run inside the zone, which will throw us into an infinite loop.\n    this._ngZone.runOutsideAngular(() => {\n      // We can't remove the host here immediately, because the overlay pane's content\n      // might still be animating. This stream helps us avoid interrupting the animation\n      // by waiting for the pane to become empty.\n      const subscription = this._ngZone.onStable\n        .pipe(takeUntil(merge(this._attachments, this._detachments)))\n        .subscribe(() => {\n          // Needs a couple of checks for the pane and host, because\n          // they may have been removed by the time the zone stabilizes.\n          if (!this._pane || !this._host || this._pane.children.length === 0) {\n            if (this._pane && this._config.panelClass) {\n              this._toggleClasses(this._pane, this._config.panelClass, false);\n            }\n\n            if (this._host && this._host.parentElement) {\n              this._previousHostParent = this._host.parentElement;\n              this._previousHostParent.removeChild(this._host);\n            }\n\n            subscription.unsubscribe();\n          }\n        });\n    });\n  }\n\n  /** Disposes of a scroll strategy. */\n  private _disposeScrollStrategy() {\n    const scrollStrategy = this._scrollStrategy;\n\n    if (scrollStrategy) {\n      scrollStrategy.disable();\n\n      if (scrollStrategy.detach) {\n        scrollStrategy.detach();\n      }\n    }\n  }\n\n  /** Removes a backdrop element from the DOM. */\n  private _disposeBackdrop(backdrop: HTMLElement | null) {\n    if (backdrop) {\n      if (backdrop.parentNode) {\n        backdrop.parentNode.removeChild(backdrop);\n      }\n\n      // It is possible that a new portal has been attached to this overlay since we started\n      // removing the backdrop. If that is the case, only clear the backdrop reference if it\n      // is still the same instance that we started to remove.\n      if (this._backdropElement === backdrop) {\n        this._backdropElement = null;\n      }\n    }\n  }\n}\n\n\n/** Size properties for an overlay. */\nexport interface OverlaySizeConfig {\n  width?: number | string;\n  height?: number | string;\n  minWidth?: number | string;\n  minHeight?: number | string;\n  maxWidth?: number | string;\n  maxHeight?: number | string;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position-strategy';\nimport {ElementRef} from '@angular/core';\nimport {ViewportRuler, CdkScrollable, ViewportScrollPosition} from '@angular/cdk/scrolling';\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n  ScrollingVisibility,\n  validateHorizontalPosition,\n  validateVerticalPosition,\n} from './connected-position';\nimport {Observable, Subscription, Subject} from 'rxjs';\nimport {OverlayReference} from '../overlay-reference';\nimport {isElementScrolledOutsideView, isElementClippedByScrolling} from './scroll-clip';\nimport {coerceCssPixelValue, coerceArray} from '@angular/cdk/coercion';\nimport {Platform} from '@angular/cdk/platform';\nimport {OverlayContainer} from '../overlay-container';\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n\n/** Possible values that can be set as the origin of a FlexibleConnectedPositionStrategy. */\nexport type FlexibleConnectedPositionStrategyOrigin = ElementRef | Element | Point & {\n  width?: number;\n  height?: number;\n};\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nexport class FlexibleConnectedPositionStrategy implements PositionStrategy {\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayReference;\n\n  /** Whether we're performing the very first positioning of the overlay. */\n  private _isInitialRender: boolean;\n\n  /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n  private _lastBoundingBoxSize = {width: 0, height: 0};\n\n  /** Whether the overlay was pushed in a previous positioning. */\n  private _isPushed = false;\n\n  /** Whether the overlay can be pushed on-screen on the initial open. */\n  private _canPush = true;\n\n  /** Whether the overlay can grow via flexible width/height after the initial open. */\n  private _growAfterOpen = false;\n\n  /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n  private _hasFlexibleDimensions = true;\n\n  /** Whether the overlay position is locked. */\n  private _positionLocked = false;\n\n  /** Cached origin dimensions */\n  private _originRect: ClientRect;\n\n  /** Cached overlay dimensions */\n  private _overlayRect: ClientRect;\n\n  /** Cached viewport dimensions */\n  private _viewportRect: ClientRect;\n\n  /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n  private _viewportMargin = 0;\n\n  /** The Scrollable containers used to check scrollable view properties on position change. */\n  private _scrollables: CdkScrollable[] = [];\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  _preferredPositions: ConnectionPositionPair[] = [];\n\n  /** The origin element against which the overlay will be positioned. */\n  private _origin: FlexibleConnectedPositionStrategyOrigin;\n\n  /** The overlay pane element. */\n  private _pane: HTMLElement;\n\n  /** Whether the strategy has been disposed of already. */\n  private _isDisposed: boolean;\n\n  /**\n   * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n   * within the viewport.\n   */\n  private _boundingBox: HTMLElement | null;\n\n  /** The last position to have been calculated as the best fit position. */\n  private _lastPosition: ConnectedPosition | null;\n\n  /** Subject that emits whenever the position changes. */\n  private readonly _positionChanges = new Subject<ConnectedOverlayPositionChange>();\n\n  /** Subscription to viewport size changes. */\n  private _resizeSubscription = Subscription.EMPTY;\n\n  /** Default offset for the overlay along the x axis. */\n  private _offsetX = 0;\n\n  /** Default offset for the overlay along the y axis. */\n  private _offsetY = 0;\n\n  /** Selector to be used when finding the elements on which to set the transform origin. */\n  private _transformOriginSelector: string;\n\n  /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n  private _appliedPanelClasses: string[] = [];\n\n  /** Amount by which the overlay was pushed in each axis during the last time it was positioned. */\n  private _previousPushAmount: {x: number, y: number} | null;\n\n  /** Observable sequence of position changes. */\n  positionChanges: Observable<ConnectedOverlayPositionChange> = this._positionChanges;\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions(): ConnectionPositionPair[] {\n    return this._preferredPositions;\n  }\n\n  constructor(\n      connectedTo: FlexibleConnectedPositionStrategyOrigin, private _viewportRuler: ViewportRuler,\n      private _document: Document, private _platform: Platform,\n      private _overlayContainer: OverlayContainer) {\n    this.setOrigin(connectedTo);\n  }\n\n  /** Attaches this position strategy to an overlay. */\n  attach(overlayRef: OverlayReference): void {\n    if (this._overlayRef && overlayRef !== this._overlayRef &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('This position strategy is already attached to an overlay');\n    }\n\n    this._validatePositions();\n\n    overlayRef.hostElement.classList.add(boundingBoxClass);\n\n    this._overlayRef = overlayRef;\n    this._boundingBox = overlayRef.hostElement;\n    this._pane = overlayRef.overlayElement;\n    this._isDisposed = false;\n    this._isInitialRender = true;\n    this._lastPosition = null;\n    this._resizeSubscription.unsubscribe();\n    this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n      // When the window is resized, we want to trigger the next reposition as if it\n      // was an initial render, in order for the strategy to pick a new optimal position,\n      // otherwise position locking will cause it to stay at the old one.\n      this._isInitialRender = true;\n      this.apply();\n    });\n  }\n\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin best fits on-screen.\n   *\n   * The selection of a position goes as follows:\n   *  - If any positions fit completely within the viewport as-is,\n   *      choose the first position that does so.\n   *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n   *      choose the position with the greatest available size modified by the positions' weight.\n   *  - If pushing is enabled, take the position that went off-screen the least and push it\n   *      on-screen.\n   *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n   * @docs-private\n   */\n  apply(): void {\n    // We shouldn't do anything if the strategy was disposed or we're on the server.\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n\n    // If the position has been applied already (e.g. when the overlay was opened) and the\n    // consumer opted into locking in the position, re-use the old position, in order to\n    // prevent the overlay from jumping around.\n    if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n      this.reapplyLastPosition();\n      return;\n    }\n\n    this._clearPanelClasses();\n    this._resetOverlayElementStyles();\n    this._resetBoundingBoxStyles();\n\n    // We need the bounding rects for the origin and the overlay to determine how to position\n    // the overlay relative to the origin.\n    // We use the viewport rect to determine whether a position would go off-screen.\n    this._viewportRect = this._getNarrowedViewportRect();\n    this._originRect = this._getOriginRect();\n    this._overlayRect = this._pane.getBoundingClientRect();\n\n    const originRect = this._originRect;\n    const overlayRect = this._overlayRect;\n    const viewportRect = this._viewportRect;\n\n    // Positions where the overlay will fit with flexible dimensions.\n    const flexibleFits: FlexibleFit[] = [];\n\n    // Fallback if none of the preferred positions fit within the viewport.\n    let fallback: FallbackPosition | undefined;\n\n    // Go through each of the preferred positions looking for a good fit.\n    // If a good fit is found, it will be applied immediately.\n    for (let pos of this._preferredPositions) {\n      // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n      let originPoint = this._getOriginPoint(originRect, pos);\n\n      // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n      // overlay in this position. We use the top-left corner for calculations and later translate\n      // this into an appropriate (top, left, bottom, right) style.\n      let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n\n      // Calculate how well the overlay would fit into the viewport with this point.\n      let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n\n      // If the overlay, without any further work, fits into the viewport, use this position.\n      if (overlayFit.isCompletelyWithinViewport) {\n        this._isPushed = false;\n        this._applyPosition(pos, originPoint);\n        return;\n      }\n\n      // If the overlay has flexible dimensions, we can use this position\n      // so long as there's enough space for the minimum dimensions.\n      if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n        // Save positions where the overlay will fit with flexible dimensions. We will use these\n        // if none of the positions fit *without* flexible dimensions.\n        flexibleFits.push({\n          position: pos,\n          origin: originPoint,\n          overlayRect,\n          boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n        });\n\n        continue;\n      }\n\n      // If the current preferred position does not fit on the screen, remember the position\n      // if it has more visible area on-screen than we've seen and move onto the next preferred\n      // position.\n      if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n        fallback = {overlayFit, overlayPoint, originPoint, position: pos, overlayRect};\n      }\n    }\n\n    // If there are any positions where the overlay would fit with flexible dimensions, choose the\n    // one that has the greatest area available modified by the position's weight\n    if (flexibleFits.length) {\n      let bestFit: FlexibleFit | null = null;\n      let bestScore = -1;\n      for (const fit of flexibleFits) {\n        const score =\n            fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n        if (score > bestScore) {\n          bestScore = score;\n          bestFit = fit;\n        }\n      }\n\n      this._isPushed = false;\n      this._applyPosition(bestFit!.position, bestFit!.origin);\n      return;\n    }\n\n    // When none of the preferred positions fit within the viewport, take the position\n    // that went off-screen the least and attempt to push it on-screen.\n    if (this._canPush) {\n      // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n      this._isPushed = true;\n      this._applyPosition(fallback!.position, fallback!.originPoint);\n      return;\n    }\n\n    // All options for getting the overlay within the viewport have been exhausted, so go with the\n    // position that went off-screen the least.\n    this._applyPosition(fallback!.position, fallback!.originPoint);\n  }\n\n  detach(): void {\n    this._clearPanelClasses();\n    this._lastPosition = null;\n    this._previousPushAmount = null;\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /** Cleanup after the element gets destroyed. */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n\n    // We can't use `_resetBoundingBoxStyles` here, because it resets\n    // some properties to zero, rather than removing them.\n    if (this._boundingBox) {\n      extendStyles(this._boundingBox.style, {\n        top: '',\n        left: '',\n        right: '',\n        bottom: '',\n        height: '',\n        width: '',\n        alignItems: '',\n        justifyContent: '',\n      } as CSSStyleDeclaration);\n    }\n\n    if (this._pane) {\n      this._resetOverlayElementStyles();\n    }\n\n    if (this._overlayRef) {\n      this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n    }\n\n    this.detach();\n    this._positionChanges.complete();\n    this._overlayRef = this._boundingBox = null!;\n    this._isDisposed = true;\n  }\n\n  /**\n   * This re-aligns the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  reapplyLastPosition(): void {\n    if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n      this._originRect = this._getOriginRect();\n      this._overlayRect = this._pane.getBoundingClientRect();\n      this._viewportRect = this._getNarrowedViewportRect();\n\n      const lastPosition = this._lastPosition || this._preferredPositions[0];\n      const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n\n      this._applyPosition(lastPosition, originPoint);\n    }\n  }\n\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables: CdkScrollable[]): this {\n    this._scrollables = scrollables;\n    return this;\n  }\n\n  /**\n   * Adds new preferred positions.\n   * @param positions List of positions options for this overlay.\n   */\n  withPositions(positions: ConnectedPosition[]): this {\n    this._preferredPositions = positions;\n\n    // If the last calculated position object isn't part of the positions anymore, clear\n    // it in order to avoid it being picked up if the consumer tries to re-apply.\n    if (positions.indexOf(this._lastPosition!) === -1) {\n      this._lastPosition = null;\n    }\n\n    this._validatePositions();\n\n    return this;\n  }\n\n  /**\n   * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n   * @param margin Required margin between the overlay and the viewport edge in pixels.\n   */\n  withViewportMargin(margin: number): this {\n    this._viewportMargin = margin;\n    return this;\n  }\n\n  /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n  withFlexibleDimensions(flexibleDimensions = true): this {\n    this._hasFlexibleDimensions = flexibleDimensions;\n    return this;\n  }\n\n  /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n  withGrowAfterOpen(growAfterOpen = true): this {\n    this._growAfterOpen = growAfterOpen;\n    return this;\n  }\n\n  /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n  withPush(canPush = true): this {\n    this._canPush = canPush;\n    return this;\n  }\n\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked = true): this {\n    this._positionLocked = isLocked;\n    return this;\n  }\n\n  /**\n   * Sets the origin, relative to which to position the overlay.\n   * Using an element origin is useful for building components that need to be positioned\n   * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n   * used for cases like contextual menus which open relative to the user's pointer.\n   * @param origin Reference to the new origin.\n   */\n  setOrigin(origin: FlexibleConnectedPositionStrategyOrigin): this {\n    this._origin = origin;\n    return this;\n  }\n\n  /**\n   * Sets the default offset for the overlay's connection point on the x-axis.\n   * @param offset New offset in the X axis.\n   */\n  withDefaultOffsetX(offset: number): this {\n    this._offsetX = offset;\n    return this;\n  }\n\n  /**\n   * Sets the default offset for the overlay's connection point on the y-axis.\n   * @param offset New offset in the Y axis.\n   */\n  withDefaultOffsetY(offset: number): this {\n    this._offsetY = offset;\n    return this;\n  }\n\n  /**\n   * Configures that the position strategy should set a `transform-origin` on some elements\n   * inside the overlay, depending on the current position that is being applied. This is\n   * useful for the cases where the origin of an animation can change depending on the\n   * alignment of the overlay.\n   * @param selector CSS selector that will be used to find the target\n   *    elements onto which to set the transform origin.\n   */\n  withTransformOriginOn(selector: string): this {\n    this._transformOriginSelector = selector;\n    return this;\n  }\n\n  /**\n   * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n   */\n  private _getOriginPoint(originRect: ClientRect, pos: ConnectedPosition): Point {\n    let x: number;\n    if (pos.originX == 'center') {\n      // Note: when centering we should always use the `left`\n      // offset, otherwise the position will be wrong in RTL.\n      x = originRect.left + (originRect.width / 2);\n    } else {\n      const startX = this._isRtl() ? originRect.right : originRect.left;\n      const endX = this._isRtl() ? originRect.left : originRect.right;\n      x = pos.originX == 'start' ? startX : endX;\n    }\n\n    let y: number;\n    if (pos.originY == 'center') {\n      y = originRect.top + (originRect.height / 2);\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n\n    return {x, y};\n  }\n\n\n  /**\n   * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n   * origin point to which the overlay should be connected.\n   */\n  private _getOverlayPoint(\n      originPoint: Point,\n      overlayRect: ClientRect,\n      pos: ConnectedPosition): Point {\n\n    // Calculate the (overlayStartX, overlayStartY), the start of the\n    // potential overlay position relative to the origin point.\n    let overlayStartX: number;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n    }\n\n    let overlayStartY: number;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n\n    // The (x, y) coordinates of the overlay.\n    return {\n      x: originPoint.x + overlayStartX,\n      y: originPoint.y + overlayStartY,\n    };\n  }\n\n  /** Gets how well an overlay at the given point will fit within the viewport. */\n  private _getOverlayFit(point: Point, rawOverlayRect: ClientRect, viewport: ClientRect,\n    position: ConnectedPosition): OverlayFit {\n\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    let {x, y} = point;\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n\n    // Account for the offsets since they could push the overlay out of the viewport.\n    if (offsetX) {\n      x += offsetX;\n    }\n\n    if (offsetY) {\n      y += offsetY;\n    }\n\n    // How much the overlay would overflow at this position, on each side.\n    let leftOverflow = 0 - x;\n    let rightOverflow = (x + overlay.width) - viewport.width;\n    let topOverflow = 0 - y;\n    let bottomOverflow = (y + overlay.height) - viewport.height;\n\n    // Visible parts of the element on each axis.\n    let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n    let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n    let visibleArea = visibleWidth * visibleHeight;\n\n    return {\n      visibleArea,\n      isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n      fitsInViewportVertically: visibleHeight === overlay.height,\n      fitsInViewportHorizontally: visibleWidth == overlay.width,\n    };\n  }\n\n  /**\n   * Whether the overlay can fit within the viewport when it may resize either its width or height.\n   * @param fit How well the overlay fits in the viewport at some position.\n   * @param point The (x, y) coordinates of the overlat at some position.\n   * @param viewport The geometry of the viewport.\n   */\n  private _canFitWithFlexibleDimensions(fit: OverlayFit, point: Point, viewport: ClientRect) {\n    if (this._hasFlexibleDimensions) {\n      const availableHeight = viewport.bottom - point.y;\n      const availableWidth = viewport.right - point.x;\n      const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n      const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n\n      const verticalFit = fit.fitsInViewportVertically ||\n          (minHeight != null && minHeight <= availableHeight);\n      const horizontalFit = fit.fitsInViewportHorizontally ||\n          (minWidth != null && minWidth <= availableWidth);\n\n      return verticalFit && horizontalFit;\n    }\n    return false;\n  }\n\n  /**\n   * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n   * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n   * right and bottom).\n   *\n   * @param start Starting point from which the overlay is pushed.\n   * @param overlay Dimensions of the overlay.\n   * @param scrollPosition Current viewport scroll position.\n   * @returns The point at which to position the overlay after pushing. This is effectively a new\n   *     originPoint.\n   */\n  private _pushOverlayOnScreen(start: Point,\n                               rawOverlayRect: ClientRect,\n                               scrollPosition: ViewportScrollPosition): Point {\n    // If the position is locked and we've pushed the overlay already, reuse the previous push\n    // amount, rather than pushing it again. If we were to continue pushing, the element would\n    // remain in the viewport, which goes against the expectations when position locking is enabled.\n    if (this._previousPushAmount && this._positionLocked) {\n      return {\n        x: start.x + this._previousPushAmount.x,\n        y: start.y + this._previousPushAmount.y\n      };\n    }\n\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    const viewport = this._viewportRect;\n\n    // Determine how much the overlay goes outside the viewport on each\n    // side, which we'll use to decide which direction to push it.\n    const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n    const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n    const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n    const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n\n    // Amount by which to push the overlay in each axis such that it remains on-screen.\n    let pushX = 0;\n    let pushY = 0;\n\n    // If the overlay fits completely within the bounds of the viewport, push it from whichever\n    // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n    // viewport and allow for the trailing end of the overlay to go out of bounds.\n    if (overlay.width <= viewport.width) {\n      pushX = overflowLeft || -overflowRight;\n    } else {\n      pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n    }\n\n    if (overlay.height <= viewport.height) {\n      pushY = overflowTop || -overflowBottom;\n    } else {\n      pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n    }\n\n    this._previousPushAmount = {x: pushX, y: pushY};\n\n    return {\n      x: start.x + pushX,\n      y: start.y + pushY,\n    };\n  }\n\n  /**\n   * Applies a computed position to the overlay and emits a position change.\n   * @param position The position preference\n   * @param originPoint The point on the origin element where the overlay is connected.\n   */\n  private _applyPosition(position: ConnectedPosition, originPoint: Point) {\n    this._setTransformOrigin(position);\n    this._setOverlayElementStyles(originPoint, position);\n    this._setBoundingBoxStyles(originPoint, position);\n\n    if (position.panelClass) {\n      this._addPanelClasses(position.panelClass);\n    }\n\n    // Save the last connected position in case the position needs to be re-calculated.\n    this._lastPosition = position;\n\n    // Notify that the position has been changed along with its change properties.\n    // We only emit if we've got any subscriptions, because the scroll visibility\n    // calculcations can be somewhat expensive.\n    if (this._positionChanges.observers.length) {\n      const scrollableViewProperties = this._getScrollVisibility();\n      const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n      this._positionChanges.next(changeEvent);\n    }\n\n    this._isInitialRender = false;\n  }\n\n  /** Sets the transform origin based on the configured selector and the passed-in position.  */\n  private _setTransformOrigin(position: ConnectedPosition) {\n    if (!this._transformOriginSelector) {\n      return;\n    }\n\n    const elements: NodeListOf<HTMLElement> =\n        this._boundingBox!.querySelectorAll(this._transformOriginSelector);\n    let xOrigin: 'left' | 'right' | 'center';\n    let yOrigin: 'top' | 'bottom' | 'center' = position.overlayY;\n\n    if (position.overlayX === 'center') {\n      xOrigin = 'center';\n    } else if (this._isRtl()) {\n      xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n    } else {\n      xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n    }\n  }\n\n  /**\n   * Gets the position and size of the overlay's sizing container.\n   *\n   * This method does no measuring and applies no styles so that we can cheaply compute the\n   * bounds for all positions and choose the best fit based on these results.\n   */\n  private _calculateBoundingBoxRect(origin: Point, position: ConnectedPosition): BoundingBoxRect {\n    const viewport = this._viewportRect;\n    const isRtl = this._isRtl();\n    let height: number, top: number, bottom: number;\n\n    if (position.overlayY === 'top') {\n      // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n      top = origin.y;\n      height = viewport.height - top + this._viewportMargin;\n    } else if (position.overlayY === 'bottom') {\n      // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n      // the viewport margin back in, because the viewport rect is narrowed down to remove the\n      // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n      bottom = viewport.height - origin.y + this._viewportMargin * 2;\n      height = viewport.height - bottom + this._viewportMargin;\n    } else {\n      // If neither top nor bottom, it means that the overlay is vertically centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n      // `origin.y - viewport.top`.\n      const smallestDistanceToViewportEdge =\n          Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n\n      const previousHeight = this._lastBoundingBoxSize.height;\n\n      height = smallestDistanceToViewportEdge * 2;\n      top = origin.y - smallestDistanceToViewportEdge;\n\n      if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n        top = origin.y - (previousHeight / 2);\n      }\n    }\n\n    // The overlay is opening 'right-ward' (the content flows to the right).\n    const isBoundedByRightViewportEdge =\n        (position.overlayX === 'start' && !isRtl) ||\n        (position.overlayX === 'end' && isRtl);\n\n    // The overlay is opening 'left-ward' (the content flows to the left).\n    const isBoundedByLeftViewportEdge =\n        (position.overlayX === 'end' && !isRtl) ||\n        (position.overlayX === 'start' && isRtl);\n\n    let width: number, left: number, right: number;\n\n    if (isBoundedByLeftViewportEdge) {\n      right = viewport.width - origin.x + this._viewportMargin;\n      width = origin.x - this._viewportMargin;\n    } else if (isBoundedByRightViewportEdge) {\n      left = origin.x;\n      width = viewport.right - origin.x;\n    } else {\n      // If neither start nor end, it means that the overlay is horizontally centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.right - origin.x` and\n      // `origin.x - viewport.left`.\n      const smallestDistanceToViewportEdge =\n          Math.min(viewport.right - origin.x + viewport.left, origin.x);\n      const previousWidth = this._lastBoundingBoxSize.width;\n\n      width = smallestDistanceToViewportEdge * 2;\n      left = origin.x - smallestDistanceToViewportEdge;\n\n      if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n        left = origin.x - (previousWidth / 2);\n      }\n    }\n\n    return {top: top!, left: left!, bottom: bottom!, right: right!, width, height};\n  }\n\n  /**\n   * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n   * origin's connection point and stetches to the bounds of the viewport.\n   *\n   * @param origin The point on the origin element where the overlay is connected.\n   * @param position The position preference\n   */\n  private _setBoundingBoxStyles(origin: Point, position: ConnectedPosition): void {\n    const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n\n    // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n    // when applying a new size.\n    if (!this._isInitialRender && !this._growAfterOpen) {\n      boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n      boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n    }\n\n    const styles = {} as CSSStyleDeclaration;\n\n    if (this._hasExactPosition()) {\n      styles.top = styles.left = '0';\n      styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n      styles.width = styles.height = '100%';\n    } else {\n      const maxHeight = this._overlayRef.getConfig().maxHeight;\n      const maxWidth = this._overlayRef.getConfig().maxWidth;\n\n      styles.height = coerceCssPixelValue(boundingBoxRect.height);\n      styles.top = coerceCssPixelValue(boundingBoxRect.top);\n      styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n      styles.width = coerceCssPixelValue(boundingBoxRect.width);\n      styles.left = coerceCssPixelValue(boundingBoxRect.left);\n      styles.right = coerceCssPixelValue(boundingBoxRect.right);\n\n      // Push the pane content towards the proper direction.\n      if (position.overlayX === 'center') {\n        styles.alignItems = 'center';\n      } else {\n        styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n      }\n\n      if (position.overlayY === 'center') {\n        styles.justifyContent = 'center';\n      } else {\n        styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n      }\n\n      if (maxHeight) {\n        styles.maxHeight = coerceCssPixelValue(maxHeight);\n      }\n\n      if (maxWidth) {\n        styles.maxWidth = coerceCssPixelValue(maxWidth);\n      }\n    }\n\n    this._lastBoundingBoxSize = boundingBoxRect;\n\n    extendStyles(this._boundingBox!.style, styles);\n  }\n\n  /** Resets the styles for the bounding box so that a new positioning can be computed. */\n  private _resetBoundingBoxStyles() {\n    extendStyles(this._boundingBox!.style, {\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      height: '',\n      width: '',\n      alignItems: '',\n      justifyContent: '',\n    } as CSSStyleDeclaration);\n  }\n\n  /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n  private _resetOverlayElementStyles() {\n    extendStyles(this._pane.style, {\n      top: '',\n      left: '',\n      bottom: '',\n      right: '',\n      position: '',\n      transform: '',\n    } as CSSStyleDeclaration);\n  }\n\n  /** Sets positioning styles to the overlay element. */\n  private _setOverlayElementStyles(originPoint: Point, position: ConnectedPosition): void {\n    const styles = {} as CSSStyleDeclaration;\n    const hasExactPosition = this._hasExactPosition();\n    const hasFlexibleDimensions = this._hasFlexibleDimensions;\n    const config = this._overlayRef.getConfig();\n\n    if (hasExactPosition) {\n      const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n      extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n      extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n    } else {\n      styles.position = 'static';\n    }\n\n    // Use a transform to apply the offsets. We do this because the `center` positions rely on\n    // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n    // off the position. We also can't use margins, because they won't have an effect in some\n    // cases where the element doesn't have anything to \"push off of\". Finally, this works\n    // better both with flexible and non-flexible positioning.\n    let transformString = '';\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n\n    if (offsetX) {\n      transformString += `translateX(${offsetX}px) `;\n    }\n\n    if (offsetY) {\n      transformString += `translateY(${offsetY}px)`;\n    }\n\n    styles.transform = transformString.trim();\n\n    // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n    // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n    // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n    // Note that this doesn't apply when we have an exact position, in which case we do want to\n    // apply them because they'll be cleared from the bounding box.\n    if (config.maxHeight) {\n      if (hasExactPosition) {\n        styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n      } else if (hasFlexibleDimensions) {\n        styles.maxHeight = '';\n      }\n    }\n\n    if (config.maxWidth) {\n      if (hasExactPosition) {\n        styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n      } else if (hasFlexibleDimensions) {\n        styles.maxWidth = '';\n      }\n    }\n\n    extendStyles(this._pane.style, styles);\n  }\n\n  /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n  private _getExactOverlayY(position: ConnectedPosition,\n                            originPoint: Point,\n                            scrollPosition: ViewportScrollPosition) {\n    // Reset any existing styles. This is necessary in case the\n    // preferred position has changed since the last `apply`.\n    let styles = {top: '', bottom: ''} as CSSStyleDeclaration;\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n\n    let virtualKeyboardOffset =\n        this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n\n    // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n    // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n    // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n    // otherwise our positioning will be thrown off.\n    overlayPoint.y -= virtualKeyboardOffset;\n\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n    // above or below the origin and the direction in which the element will expand.\n    if (position.overlayY === 'bottom') {\n      // When using `bottom`, we adjust the y position such that it is the distance\n      // from the bottom of the viewport rather than the top.\n      const documentHeight = this._document.documentElement!.clientHeight;\n      styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n    } else {\n      styles.top = coerceCssPixelValue(overlayPoint.y);\n    }\n\n    return styles;\n  }\n\n  /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n  private _getExactOverlayX(position: ConnectedPosition,\n                            originPoint: Point,\n                            scrollPosition: ViewportScrollPosition) {\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    let styles = {left: '', right: ''} as CSSStyleDeclaration;\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let horizontalStyleProperty: 'left' | 'right';\n\n    if (this._isRtl()) {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n    }\n\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    if (horizontalStyleProperty === 'right') {\n      const documentWidth = this._document.documentElement!.clientWidth;\n      styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n    } else {\n      styles.left = coerceCssPixelValue(overlayPoint.x);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Gets the view properties of the trigger and overlay, including whether they are clipped\n   * or completely outside the view of any of the strategy's scrollables.\n   */\n  private _getScrollVisibility(): ScrollingVisibility {\n    // Note: needs fresh rects since the position could've changed.\n    const originBounds = this._getOriginRect();\n    const overlayBounds =  this._pane.getBoundingClientRect();\n\n    // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n    // every time, we should be able to use the scrollTop of the containers if the size of those\n    // containers hasn't changed.\n    const scrollContainerBounds = this._scrollables.map(scrollable => {\n      return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n    });\n\n    return {\n      isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n      isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n    };\n  }\n\n  /** Subtracts the amount that an element is overflowing on an axis from its length. */\n  private _subtractOverflows(length: number, ...overflows: number[]): number {\n    return overflows.reduce((currentValue: number, currentOverflow: number) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n\n  /** Narrows the given viewport rect by the current _viewportMargin. */\n  private _getNarrowedViewportRect(): ClientRect {\n    // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n    // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n    // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n    // and `innerHeight` that do. This is necessary, because the overlay container uses\n    // 100% `width` and `height` which don't include the scrollbar either.\n    const width = this._document.documentElement!.clientWidth;\n    const height = this._document.documentElement!.clientHeight;\n    const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n    return {\n      top:    scrollPosition.top + this._viewportMargin,\n      left:   scrollPosition.left + this._viewportMargin,\n      right:  scrollPosition.left + width - this._viewportMargin,\n      bottom: scrollPosition.top + height - this._viewportMargin,\n      width:  width  - (2 * this._viewportMargin),\n      height: height - (2 * this._viewportMargin),\n    };\n  }\n\n  /** Whether the we're dealing with an RTL context */\n  private _isRtl() {\n    return this._overlayRef.getDirection() === 'rtl';\n  }\n\n  /** Determines whether the overlay uses exact or flexible positioning. */\n  private _hasExactPosition() {\n    return !this._hasFlexibleDimensions || this._isPushed;\n  }\n\n  /** Retrieves the offset of a position along the x or y axis. */\n  private _getOffset(position: ConnectedPosition, axis: 'x' | 'y') {\n    if (axis === 'x') {\n      // We don't do something like `position['offset' + axis]` in\n      // order to avoid breking minifiers that rename properties.\n      return position.offsetX == null ? this._offsetX : position.offsetX;\n    }\n\n    return position.offsetY == null ? this._offsetY : position.offsetY;\n  }\n\n  /** Validates that the current position match the expected values. */\n  private _validatePositions(): void {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._preferredPositions.length) {\n        throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n      }\n\n      // TODO(crisbeto): remove these once Angular's template type\n      // checking is advanced enough to catch these cases.\n      this._preferredPositions.forEach(pair => {\n        validateHorizontalPosition('originX', pair.originX);\n        validateVerticalPosition('originY', pair.originY);\n        validateHorizontalPosition('overlayX', pair.overlayX);\n        validateVerticalPosition('overlayY', pair.overlayY);\n      });\n    }\n  }\n\n  /** Adds a single CSS class or an array of classes on the overlay panel. */\n  private _addPanelClasses(cssClasses: string | string[]) {\n    if (this._pane) {\n      coerceArray(cssClasses).forEach(cssClass => {\n        if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n          this._appliedPanelClasses.push(cssClass);\n          this._pane.classList.add(cssClass);\n        }\n      });\n    }\n  }\n\n  /** Clears the classes that the position strategy has applied from the overlay panel. */\n  private _clearPanelClasses() {\n    if (this._pane) {\n      this._appliedPanelClasses.forEach(cssClass => {\n        this._pane.classList.remove(cssClass);\n      });\n      this._appliedPanelClasses = [];\n    }\n  }\n\n  /** Returns the ClientRect of the current origin. */\n  private _getOriginRect(): ClientRect {\n    const origin = this._origin;\n\n    if (origin instanceof ElementRef) {\n      return origin.nativeElement.getBoundingClientRect();\n    }\n\n    // Check for Element so SVG elements are also supported.\n    if (origin instanceof Element) {\n      return origin.getBoundingClientRect();\n    }\n\n    const width = origin.width || 0;\n    const height = origin.height || 0;\n\n    // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n    return {\n      top: origin.y,\n      bottom: origin.y + height,\n      left: origin.x,\n      right: origin.x + width,\n      height,\n      width\n    };\n  }\n}\n\n/** A simple (x, y) coordinate. */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/** Record of measurements for how an overlay (at a given position) fits into the viewport. */\ninterface OverlayFit {\n  /** Whether the overlay fits completely in the viewport. */\n  isCompletelyWithinViewport: boolean;\n\n  /** Whether the overlay fits in the viewport on the y-axis. */\n  fitsInViewportVertically: boolean;\n\n  /** Whether the overlay fits in the viewport on the x-axis. */\n  fitsInViewportHorizontally: boolean;\n\n  /** The total visible area (in px^2) of the overlay inside the viewport. */\n  visibleArea: number;\n}\n\n/** Record of the measurments determining whether an overlay will fit in a specific position. */\ninterface FallbackPosition {\n  position: ConnectedPosition;\n  originPoint: Point;\n  overlayPoint: Point;\n  overlayFit: OverlayFit;\n  overlayRect: ClientRect;\n}\n\n/** Position and size of the overlay sizing wrapper for a specific position. */\ninterface BoundingBoxRect {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  height: number;\n  width: number;\n}\n\n/** Record of measures determining how well a given position will fit with flexible dimensions. */\ninterface FlexibleFit {\n  position: ConnectedPosition;\n  origin: Point;\n  overlayRect: ClientRect;\n  boundingBoxRect: BoundingBoxRect;\n}\n\n/** A connected position as specified by the user. */\nexport interface ConnectedPosition {\n  originX: 'start' | 'center' | 'end';\n  originY: 'top' | 'center' | 'bottom';\n\n  overlayX: 'start' | 'center' | 'end';\n  overlayY: 'top' | 'center' | 'bottom';\n\n  weight?: number;\n  offsetX?: number;\n  offsetY?: number;\n  panelClass?: string | string[];\n}\n\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination: CSSStyleDeclaration,\n                      source: CSSStyleDeclaration): CSSStyleDeclaration {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      destination[key] = source[key];\n    }\n  }\n\n  return destination;\n}\n\n\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input: number|string|null|undefined): number|null {\n  if (typeof input !== 'number' && input != null) {\n    const [value, units] = input.split(cssUnitPattern);\n    return (!units || units === 'px') ? parseFloat(value) : null;\n  }\n\n  return input || null;\n}\n\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect: ClientRect): ClientRect {\n  return {\n    top: Math.floor(clientRect.top),\n    right: Math.floor(clientRect.right),\n    bottom: Math.floor(clientRect.bottom),\n    left: Math.floor(clientRect.left),\n    width: Math.floor(clientRect.width),\n    height: Math.floor(clientRect.height)\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {CdkScrollable, ViewportRuler} from '@angular/cdk/scrolling';\nimport {ElementRef} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {OverlayContainer} from '../overlay-container';\nimport {OverlayReference} from '../overlay-reference';\n\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n  OriginConnectionPosition,\n  OverlayConnectionPosition,\n} from './connected-position';\nimport {FlexibleConnectedPositionStrategy} from './flexible-connected-position-strategy';\nimport {PositionStrategy} from './position-strategy';\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nexport class ConnectedPositionStrategy implements PositionStrategy {\n  /**\n   * Reference to the underlying position strategy to which all the API calls are proxied.\n   * @docs-private\n   */\n  _positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayReference;\n\n  private _direction: Direction | null;\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  _preferredPositions: ConnectionPositionPair[] = [];\n\n  /** Emits an event when the connection point changes. */\n  readonly onPositionChange: Observable<ConnectedOverlayPositionChange>;\n\n  constructor(\n      originPos: OriginConnectionPosition, overlayPos: OverlayConnectionPosition,\n      connectedTo: ElementRef<HTMLElement>, viewportRuler: ViewportRuler, document: Document,\n      platform: Platform, overlayContainer: OverlayContainer) {\n    // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n    // the extra logic, we create an instance of the positioning strategy that has some\n    // defaults that make it behave as the old position strategy and to which we'll\n    // proxy all of the API calls.\n    this._positionStrategy = new FlexibleConnectedPositionStrategy(\n                                 connectedTo, viewportRuler, document, platform, overlayContainer)\n                                 .withFlexibleDimensions(false)\n                                 .withPush(false)\n                                 .withViewportMargin(0);\n\n    this.withFallbackPosition(originPos, overlayPos);\n    this.onPositionChange = this._positionStrategy.positionChanges;\n  }\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions(): ConnectionPositionPair[] {\n    return this._preferredPositions;\n  }\n\n  /** Attach this position strategy to an overlay. */\n  attach(overlayRef: OverlayReference): void {\n    this._overlayRef = overlayRef;\n    this._positionStrategy.attach(overlayRef);\n\n    if (this._direction) {\n      overlayRef.setDirection(this._direction);\n      this._direction = null;\n    }\n  }\n\n  /** Disposes all resources used by the position strategy. */\n  dispose() {\n    this._positionStrategy.dispose();\n  }\n\n  /** @docs-private */\n  detach() {\n    this._positionStrategy.detach();\n  }\n\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin fits on-screen.\n   * @docs-private\n   */\n  apply(): void {\n    this._positionStrategy.apply();\n  }\n\n  /**\n   * Re-positions the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  recalculateLastPosition(): void {\n    this._positionStrategy.reapplyLastPosition();\n  }\n\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables: CdkScrollable[]) {\n    this._positionStrategy.withScrollableContainers(scrollables);\n  }\n\n  /**\n   * Adds a new preferred fallback position.\n   * @param originPos\n   * @param overlayPos\n   */\n  withFallbackPosition(\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition,\n      offsetX?: number,\n      offsetY?: number): this {\n\n    const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n    this._preferredPositions.push(position);\n    this._positionStrategy.withPositions(this._preferredPositions);\n    return this;\n  }\n\n  /**\n   * Sets the layout direction so the overlay's position can be adjusted to match.\n   * @param dir New layout direction.\n   */\n  withDirection(dir: 'ltr' | 'rtl'): this {\n    // Since the direction might be declared before the strategy is attached,\n    // we save the value in a temporary property and we'll transfer it to the\n    // overlay ref on attachment.\n    if (this._overlayRef) {\n      this._overlayRef.setDirection(dir);\n    } else {\n      this._direction = dir;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets an offset for the overlay's connection point on the x-axis\n   * @param offset New offset in the X axis.\n   */\n  withOffsetX(offset: number): this {\n    this._positionStrategy.withDefaultOffsetX(offset);\n    return this;\n  }\n\n  /**\n   * Sets an offset for the overlay's connection point on the y-axis\n   * @param  offset New offset in the Y axis.\n   */\n  withOffsetY(offset: number): this {\n    this._positionStrategy.withDefaultOffsetY(offset);\n    return this;\n  }\n\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked: boolean): this {\n    this._positionStrategy.withLockedPosition(isLocked);\n    return this;\n  }\n\n  /**\n   * Overwrites the current set of positions with an array of new ones.\n   * @param positions Position pairs to be set on the strategy.\n   */\n  withPositions(positions: ConnectionPositionPair[]): this {\n    this._preferredPositions = positions.slice();\n    this._positionStrategy.withPositions(this._preferredPositions);\n    return this;\n  }\n\n  /**\n   * Sets the origin element, relative to which to position the overlay.\n   * @param origin Reference to the new origin element.\n   */\n  setOrigin(origin: ElementRef): this {\n    this._positionStrategy.setOrigin(origin);\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position-strategy';\nimport {OverlayReference} from '../overlay-reference';\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayReference;\n  private _cssPosition: string = 'static';\n  private _topOffset: string = '';\n  private _bottomOffset: string = '';\n  private _leftOffset: string = '';\n  private _rightOffset: string = '';\n  private _alignItems: string = '';\n  private _justifyContent: string = '';\n  private _width: string = '';\n  private _height: string = '';\n  private _isDisposed: boolean;\n\n  attach(overlayRef: OverlayReference): void {\n    const config = overlayRef.getConfig();\n\n    this._overlayRef = overlayRef;\n\n    if (this._width && !config.width) {\n      overlayRef.updateSize({width: this._width});\n    }\n\n    if (this._height && !config.height) {\n      overlayRef.updateSize({height: this._height});\n    }\n\n    overlayRef.hostElement.classList.add(wrapperClass);\n    this._isDisposed = false;\n  }\n\n  /**\n   * Sets the top position of the overlay. Clears any previously set vertical position.\n   * @param value New top offset.\n   */\n  top(value: string = ''): this {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\n   * @param value New left offset.\n   */\n  left(value: string = ''): this {\n    this._rightOffset = '';\n    this._leftOffset = value;\n    this._justifyContent = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\n   * @param value New bottom offset.\n   */\n  bottom(value: string = ''): this {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\n   * @param value New right offset.\n   */\n  right(value: string = ''): this {\n    this._leftOffset = '';\n    this._rightOffset = value;\n    this._justifyContent = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the overlay width and clears any previously set width.\n   * @param value New width for the overlay\n   * @deprecated Pass the `width` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  width(value: string = ''): this {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({width: value});\n    } else {\n      this._width = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the overlay height and clears any previously set height.\n   * @param value New height for the overlay\n   * @deprecated Pass the `height` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  height(value: string = ''): this {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({height: value});\n    } else {\n      this._height = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   *\n   * @param offset Overlay offset from the horizontal center.\n   */\n  centerHorizontally(offset: string = ''): this {\n    this.left(offset);\n    this._justifyContent = 'center';\n    return this;\n  }\n\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   *\n   * @param offset Overlay offset from the vertical center.\n   */\n  centerVertically(offset: string = ''): this {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n\n  /**\n   * Apply the position to the element.\n   * @docs-private\n   */\n  apply(): void {\n    // Since the overlay ref applies the strategy asynchronously, it could\n    // have been disposed before it ends up being applied. If that is the\n    // case, we shouldn't do anything.\n    if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n      return;\n    }\n\n    const styles = this._overlayRef.overlayElement.style;\n    const parentStyles = this._overlayRef.hostElement.style;\n    const config = this._overlayRef.getConfig();\n    const {width, height, maxWidth, maxHeight} = config;\n    const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n                                      (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n    const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n                                    (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n\n    styles.position = this._cssPosition;\n    styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n    styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = this._rightOffset;\n\n    if (shouldBeFlushHorizontally) {\n      parentStyles.justifyContent = 'flex-start';\n    } else if (this._justifyContent === 'center') {\n      parentStyles.justifyContent = 'center';\n    } else if (this._overlayRef.getConfig().direction === 'rtl') {\n      // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n      // don't want that because our positioning is explicitly `left` and `right`, hence\n      // why we do another inversion to ensure that the overlay stays in the same position.\n      // TODO: reconsider this if we add `start` and `end` methods.\n      if (this._justifyContent === 'flex-start') {\n        parentStyles.justifyContent = 'flex-end';\n      } else if (this._justifyContent === 'flex-end') {\n        parentStyles.justifyContent = 'flex-start';\n      }\n    } else {\n      parentStyles.justifyContent = this._justifyContent;\n    }\n\n    parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n  }\n\n  /**\n   * Cleans up the DOM changes from the position strategy.\n   * @docs-private\n   */\n  dispose(): void {\n    if (this._isDisposed || !this._overlayRef) {\n      return;\n    }\n\n    const styles = this._overlayRef.overlayElement.style;\n    const parent = this._overlayRef.hostElement;\n    const parentStyles = parent.style;\n\n    parent.classList.remove(wrapperClass);\n    parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n      styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n\n    this._overlayRef = null!;\n    this._isDisposed = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {DOCUMENT} from '@angular/common';\nimport {ElementRef, Inject, Injectable} from '@angular/core';\n\nimport {OverlayContainer} from '../overlay-container';\n\nimport {OriginConnectionPosition, OverlayConnectionPosition} from './connected-position';\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\nimport {\n  FlexibleConnectedPositionStrategy,\n  FlexibleConnectedPositionStrategyOrigin,\n} from './flexible-connected-position-strategy';\nimport {GlobalPositionStrategy} from './global-position-strategy';\n\n\n/** Builder for overlay position strategy. */\n@Injectable({providedIn: 'root'})\nexport class OverlayPositionBuilder {\n  constructor(\n      private _viewportRuler: ViewportRuler, @Inject(DOCUMENT) private _document: any,\n      private _platform: Platform, private _overlayContainer: OverlayContainer) {}\n\n  /**\n   * Creates a global position strategy.\n   */\n  global(): GlobalPositionStrategy {\n    return new GlobalPositionStrategy();\n  }\n\n  /**\n   * Creates a relative position strategy.\n   * @param elementRef\n   * @param originPos\n   * @param overlayPos\n   * @deprecated Use `flexibleConnectedTo` instead.\n   * @breaking-change 8.0.0\n   */\n  connectedTo(\n      elementRef: ElementRef,\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition): ConnectedPositionStrategy {\n    return new ConnectedPositionStrategy(\n        originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform,\n        this._overlayContainer);\n  }\n\n  /**\n   * Creates a flexible position strategy.\n   * @param origin Origin relative to which to position the overlay.\n   */\n  flexibleConnectedTo(origin: FlexibleConnectedPositionStrategyOrigin):\n    FlexibleConnectedPositionStrategy {\n    return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document,\n        this._platform, this._overlayContainer);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DomPortalOutlet} from '@angular/cdk/portal';\nimport {DOCUMENT, Location} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n} from '@angular/core';\nimport {OverlayKeyboardDispatcher} from './dispatchers/overlay-keyboard-dispatcher';\nimport {OverlayOutsideClickDispatcher} from './dispatchers/overlay-outside-click-dispatcher';\nimport {OverlayConfig} from './overlay-config';\nimport {OverlayContainer} from './overlay-container';\nimport {OverlayRef} from './overlay-ref';\nimport {OverlayPositionBuilder} from './position/overlay-position-builder';\nimport {ScrollStrategyOptions} from './scroll/index';\n\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\n@Injectable()\nexport class Overlay {\n  private _appRef: ApplicationRef;\n\n  constructor(\n              /** Scrolling strategies that can be used when creating an overlay. */\n              public scrollStrategies: ScrollStrategyOptions,\n              private _overlayContainer: OverlayContainer,\n              private _componentFactoryResolver: ComponentFactoryResolver,\n              private _positionBuilder: OverlayPositionBuilder,\n              private _keyboardDispatcher: OverlayKeyboardDispatcher,\n              private _injector: Injector,\n              private _ngZone: NgZone,\n              @Inject(DOCUMENT) private _document: any,\n              private _directionality: Directionality,\n              private _location: Location,\n              private _outsideClickDispatcher: OverlayOutsideClickDispatcher) { }\n\n  /**\n   * Creates an overlay.\n   * @param config Configuration applied to the overlay.\n   * @returns Reference to the created overlay.\n   */\n  create(config?: OverlayConfig): OverlayRef {\n    const host = this._createHostElement();\n    const pane = this._createPaneElement(host);\n    const portalOutlet = this._createPortalOutlet(pane);\n    const overlayConfig = new OverlayConfig(config);\n\n    overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n\n    return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone,\n      this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n  }\n\n  /**\n   * Gets a position builder that can be used, via fluent API,\n   * to construct and configure a position strategy.\n   * @returns An overlay position builder.\n   */\n  position(): OverlayPositionBuilder {\n    return this._positionBuilder;\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(host: HTMLElement): HTMLElement {\n    const pane = this._document.createElement('div');\n\n    pane.id = `cdk-overlay-${nextUniqueId++}`;\n    pane.classList.add('cdk-overlay-pane');\n    host.appendChild(pane);\n\n    return pane;\n  }\n\n  /**\n   * Creates the host element that wraps around an overlay\n   * and can be used for advanced positioning.\n   * @returns Newly-create host element.\n   */\n  private _createHostElement(): HTMLElement {\n    const host = this._document.createElement('div');\n    this._overlayContainer.getContainerElement().appendChild(host);\n    return host;\n  }\n\n  /**\n   * Create a DomPortalOutlet into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal outlet.\n   * @returns A portal outlet for the given DOM element.\n   */\n  private _createPortalOutlet(pane: HTMLElement): DomPortalOutlet {\n    // We have to resolve the ApplicationRef later in order to allow people\n    // to use overlay-based providers during app initialization.\n    if (!this._appRef) {\n      this._appRef = this._injector.get<ApplicationRef>(ApplicationRef);\n    }\n\n    return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector,\n                               this._document);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {takeWhile} from 'rxjs/operators';\nimport {Overlay} from './overlay';\nimport {OverlayConfig} from './overlay-config';\nimport {OverlayRef} from './overlay-ref';\nimport {ConnectedOverlayPositionChange} from './position/connected-position';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n} from './position/flexible-connected-position-strategy';\nimport {\n  RepositionScrollStrategy,\n  ScrollStrategy,\n} from './scroll/index';\n\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList: ConnectedPosition[] = [\n  {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top'\n  },\n  {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  },\n  {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom'\n  },\n  {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top'\n  }\n];\n\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nexport const CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('cdk-connected-overlay-scroll-strategy');\n\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n  exportAs: 'cdkOverlayOrigin',\n})\nexport class CdkOverlayOrigin {\n  constructor(\n      /** Reference to the element on which the directive is applied. */\n      public elementRef: ElementRef) { }\n}\n\n\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n  exportAs: 'cdkConnectedOverlay'\n})\nexport class CdkConnectedOverlay implements OnDestroy, OnChanges {\n  private _overlayRef: OverlayRef;\n  private _templatePortal: TemplatePortal;\n  private _hasBackdrop = false;\n  private _lockPosition = false;\n  private _growAfterOpen = false;\n  private _flexibleDimensions = false;\n  private _push = false;\n  private _backdropSubscription = Subscription.EMPTY;\n  private _attachSubscription = Subscription.EMPTY;\n  private _detachSubscription = Subscription.EMPTY;\n  private _positionSubscription = Subscription.EMPTY;\n  private _offsetX: number;\n  private _offsetY: number;\n  private _position: FlexibleConnectedPositionStrategy;\n  private _scrollStrategyFactory: () => ScrollStrategy;\n\n  /** Origin for the connected overlay. */\n  @Input('cdkConnectedOverlayOrigin') origin: CdkOverlayOrigin;\n\n  /** Registered connected position pairs. */\n  @Input('cdkConnectedOverlayPositions') positions: ConnectedPosition[];\n\n  /**\n   * This input overrides the positions input if specified. It lets users pass\n   * in arbitrary positioning strategies.\n   */\n  @Input('cdkConnectedOverlayPositionStrategy') positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** The offset in pixels for the overlay connection point on the x-axis */\n  @Input('cdkConnectedOverlayOffsetX')\n  get offsetX(): number { return this._offsetX; }\n  set offsetX(offsetX: number) {\n    this._offsetX = offsetX;\n\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n    }\n  }\n\n  /** The offset in pixels for the overlay connection point on the y-axis */\n  @Input('cdkConnectedOverlayOffsetY')\n  get offsetY() { return this._offsetY; }\n  set offsetY(offsetY: number) {\n    this._offsetY = offsetY;\n\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n    }\n  }\n\n  /** The width of the overlay panel. */\n  @Input('cdkConnectedOverlayWidth') width: number | string;\n\n  /** The height of the overlay panel. */\n  @Input('cdkConnectedOverlayHeight') height: number | string;\n\n  /** The min width of the overlay panel. */\n  @Input('cdkConnectedOverlayMinWidth') minWidth: number | string;\n\n  /** The min height of the overlay panel. */\n  @Input('cdkConnectedOverlayMinHeight') minHeight: number | string;\n\n  /** The custom class to be set on the backdrop element. */\n  @Input('cdkConnectedOverlayBackdropClass') backdropClass: string;\n\n  /** The custom class to add to the overlay pane element. */\n  @Input('cdkConnectedOverlayPanelClass') panelClass: string | string[];\n\n  /** Margin between the overlay and the viewport edges. */\n  @Input('cdkConnectedOverlayViewportMargin') viewportMargin: number = 0;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  @Input('cdkConnectedOverlayScrollStrategy') scrollStrategy: ScrollStrategy;\n\n  /** Whether the overlay is open. */\n  @Input('cdkConnectedOverlayOpen') open: boolean = false;\n\n  /** Whether the overlay can be closed by user interaction. */\n  @Input('cdkConnectedOverlayDisableClose') disableClose: boolean = false;\n\n  /** CSS selector which to set the transform origin. */\n  @Input('cdkConnectedOverlayTransformOriginOn') transformOriginSelector: string;\n\n  /** Whether or not the overlay should attach a backdrop. */\n  @Input('cdkConnectedOverlayHasBackdrop')\n  get hasBackdrop() { return this._hasBackdrop; }\n  set hasBackdrop(value: any) { this._hasBackdrop = coerceBooleanProperty(value); }\n\n  /** Whether or not the overlay should be locked when scrolling. */\n  @Input('cdkConnectedOverlayLockPosition')\n  get lockPosition() { return this._lockPosition; }\n  set lockPosition(value: any) { this._lockPosition = coerceBooleanProperty(value); }\n\n  /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n  @Input('cdkConnectedOverlayFlexibleDimensions')\n  get flexibleDimensions() { return this._flexibleDimensions; }\n  set flexibleDimensions(value: boolean) {\n    this._flexibleDimensions = coerceBooleanProperty(value);\n  }\n\n  /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n  @Input('cdkConnectedOverlayGrowAfterOpen')\n  get growAfterOpen() { return this._growAfterOpen; }\n  set growAfterOpen(value: boolean) { this._growAfterOpen = coerceBooleanProperty(value); }\n\n  /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n  @Input('cdkConnectedOverlayPush')\n  get push() { return this._push; }\n  set push(value: boolean) { this._push = coerceBooleanProperty(value); }\n\n  /** Event emitted when the backdrop is clicked. */\n  @Output() readonly backdropClick = new EventEmitter<MouseEvent>();\n\n  /** Event emitted when the position has changed. */\n  @Output() readonly positionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n\n  /** Event emitted when the overlay has been attached. */\n  @Output() readonly attach = new EventEmitter<void>();\n\n  /** Event emitted when the overlay has been detached. */\n  @Output() readonly detach = new EventEmitter<void>();\n\n  /** Emits when there are keyboard events that are targeted at the overlay. */\n  @Output() readonly overlayKeydown = new EventEmitter<KeyboardEvent>();\n\n  /** Emits when there are mouse outside click events that are targeted at the overlay. */\n  @Output() readonly overlayOutsideClick = new EventEmitter<MouseEvent>();\n\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n\n  constructor(\n      private _overlay: Overlay,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef,\n      @Inject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY) scrollStrategyFactory: any,\n      @Optional() private _dir: Directionality) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    this._scrollStrategyFactory = scrollStrategyFactory;\n    this.scrollStrategy = this._scrollStrategyFactory();\n  }\n\n  /** The associated overlay reference. */\n  get overlayRef(): OverlayRef {\n    return this._overlayRef;\n  }\n\n  /** The element's layout direction. */\n  get dir(): Direction {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n\n  ngOnDestroy() {\n    this._attachSubscription.unsubscribe();\n    this._detachSubscription.unsubscribe();\n    this._backdropSubscription.unsubscribe();\n    this._positionSubscription.unsubscribe();\n\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n      this._overlayRef.updateSize({\n        width: this.width,\n        minWidth: this.minWidth,\n        height: this.height,\n        minHeight: this.minHeight,\n      });\n\n      if (changes['origin'] && this.open) {\n        this._position.apply();\n      }\n    }\n\n    if (changes['open']) {\n      this.open ? this._attachOverlay() : this._detachOverlay();\n    }\n  }\n\n  /** Creates an overlay */\n  private _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n    this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n    this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n    overlayRef.keydownEvents().subscribe((event: KeyboardEvent) => {\n      this.overlayKeydown.next(event);\n\n      if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n        event.preventDefault();\n        this._detachOverlay();\n      }\n    });\n\n    this._overlayRef.outsidePointerEvents().subscribe((event: MouseEvent) => {\n      this.overlayOutsideClick.next(event);\n    });\n  }\n\n  /** Builds the overlay config based on the directive's inputs */\n  private _buildConfig(): OverlayConfig {\n    const positionStrategy = this._position =\n      this.positionStrategy || this._createPositionStrategy();\n    const overlayConfig = new OverlayConfig({\n      direction: this._dir,\n      positionStrategy,\n      scrollStrategy: this.scrollStrategy,\n      hasBackdrop: this.hasBackdrop\n    });\n\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n\n    if (this.panelClass) {\n      overlayConfig.panelClass = this.panelClass;\n    }\n\n    return overlayConfig;\n  }\n\n  /** Updates the state of a position strategy, based on the values of the directive inputs. */\n  private _updatePositionStrategy(positionStrategy: FlexibleConnectedPositionStrategy) {\n    const positions: ConnectedPosition[] = this.positions.map(currentPosition => ({\n      originX: currentPosition.originX,\n      originY: currentPosition.originY,\n      overlayX: currentPosition.overlayX,\n      overlayY: currentPosition.overlayY,\n      offsetX: currentPosition.offsetX || this.offsetX,\n      offsetY: currentPosition.offsetY || this.offsetY,\n      panelClass: currentPosition.panelClass || undefined,\n    }));\n\n    return positionStrategy\n      .setOrigin(this.origin.elementRef)\n      .withPositions(positions)\n      .withFlexibleDimensions(this.flexibleDimensions)\n      .withPush(this.push)\n      .withGrowAfterOpen(this.growAfterOpen)\n      .withViewportMargin(this.viewportMargin)\n      .withLockedPosition(this.lockPosition)\n      .withTransformOriginOn(this.transformOriginSelector);\n  }\n\n  /** Returns the position strategy of the overlay to be set on the overlay config */\n  private _createPositionStrategy(): FlexibleConnectedPositionStrategy {\n    const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n    this._updatePositionStrategy(strategy);\n    return strategy;\n  }\n\n  /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n  private _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    } else {\n      // Update the overlay size, in case the directive's inputs have changed\n      this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n    }\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n    }\n\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n        this.backdropClick.emit(event);\n      });\n    } else {\n      this._backdropSubscription.unsubscribe();\n    }\n\n    this._positionSubscription.unsubscribe();\n\n    // Only subscribe to `positionChanges` if requested, because putting\n    // together all the information for it can be expensive.\n    if (this.positionChange.observers.length > 0) {\n      this._positionSubscription = this._position.positionChanges\n        .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n        .subscribe(position => {\n          this.positionChange.emit(position);\n\n          if (this.positionChange.observers.length === 0) {\n            this._positionSubscription.unsubscribe();\n          }\n        });\n    }\n  }\n\n  /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n  private _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n\n    this._backdropSubscription.unsubscribe();\n    this._positionSubscription.unsubscribe();\n  }\n\n  static ngAcceptInputType_hasBackdrop: BooleanInput;\n  static ngAcceptInputType_lockPosition: BooleanInput;\n  static ngAcceptInputType_flexibleDimensions: BooleanInput;\n  static ngAcceptInputType_growAfterOpen: BooleanInput;\n  static ngAcceptInputType_push: BooleanInput;\n}\n\n\n/** @docs-private */\nexport function CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n  provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {NgModule} from '@angular/core';\nimport {Overlay} from './overlay';\nimport {\n  CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n  CdkConnectedOverlay,\n  CdkOverlayOrigin,\n} from './overlay-directives';\n\n\n@NgModule({\n  imports: [BidiModule, PortalModule, ScrollingModule],\n  exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n  declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n  providers: [\n    Overlay,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n  ],\n})\nexport class OverlayModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Inject, OnDestroy} from '@angular/core';\nimport {OverlayContainer} from './overlay-container';\nimport {DOCUMENT} from '@angular/common';\nimport {Platform} from '@angular/cdk/platform';\n\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\n@Injectable({providedIn: 'root'})\nexport class FullscreenOverlayContainer extends OverlayContainer implements OnDestroy {\n  private _fullScreenEventName: string | undefined;\n  private _fullScreenListener: () => void;\n\n  constructor(@Inject(DOCUMENT) _document: any, platform: Platform) {\n    super(_document, platform);\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n\n    if (this._fullScreenEventName && this._fullScreenListener) {\n      this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n    }\n  }\n\n  protected override _createContainer(): void {\n    super._createContainer();\n    this._adjustParentForFullscreenChange();\n    this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n  }\n\n  private _adjustParentForFullscreenChange(): void {\n    if (!this._containerElement) {\n      return;\n    }\n\n    const fullscreenElement = this.getFullscreenElement();\n    const parent = fullscreenElement || this._document.body;\n    parent.appendChild(this._containerElement);\n  }\n\n  private _addFullscreenChangeListener(fn: () => void) {\n    const eventName = this._getEventName();\n\n    if (eventName) {\n      if (this._fullScreenListener) {\n        this._document.removeEventListener(eventName, this._fullScreenListener);\n      }\n\n      this._document.addEventListener(eventName, fn);\n      this._fullScreenListener = fn;\n    }\n  }\n\n  private _getEventName(): string | undefined {\n    if (!this._fullScreenEventName) {\n      const _document = this._document as any;\n\n      if (_document.fullscreenEnabled) {\n        this._fullScreenEventName = 'fullscreenchange';\n      } else if (_document.webkitFullscreenEnabled) {\n        this._fullScreenEventName = 'webkitfullscreenchange';\n      } else if (_document.mozFullScreenEnabled) {\n        this._fullScreenEventName = 'mozfullscreenchange';\n      } else if (_document.msFullscreenEnabled) {\n        this._fullScreenEventName = 'MSFullscreenChange';\n      }\n    }\n\n    return this._fullScreenEventName;\n  }\n\n  /**\n   * When the page is put into fullscreen mode, a specific element is specified.\n   * Only that element and its children are visible when in fullscreen mode.\n   */\n  getFullscreenElement(): Element {\n    const _document = this._document as any;\n\n    return _document.fullscreenElement ||\n           _document.webkitFullscreenElement ||\n           _document.mozFullScreenElement ||\n           _document.msFullscreenElement ||\n           null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n  host: {'class': 'mat-card-content'}\n})\nexport class MatCardContent {}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n})\nexport class MatCardTitle {}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n})\nexport class MatCardSubtitle {}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n})\nexport class MatCardFooter {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n})\nexport class MatCardImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n})\nexport class MatCardSmImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n})\nexport class MatCardMdImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n})\nexport class MatCardLgImage {}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n@Component({\n  selector: 'mat-card',\n  exportAs: 'matCard',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-card mat-focus-indicator',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  }\n})\nexport class MatCard {\n  // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {}\n}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitleGroup,\n    MatCardContent,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardActions,\n    MatCardFooter,\n    MatCardSmImage,\n    MatCardMdImage,\n    MatCardLgImage,\n    MatCardImage,\n    MatCardXlImage,\n    MatCardAvatar,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n    MatCardXlImage, MatCardAvatar,\n  ],\n})\nexport class MatCardModule {}\n"],"x_google_ignoreList":[]}