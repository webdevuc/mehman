{"version":3,"file":"src_app_user_user_module_ts.js","mappings":"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","names":["BookingStatus","PassangerType","TripType","PaymentType","PaymentStatus","core","BookingsComponent","constructor","authService","service","userService","this","unsubscribeAll","Subject","ngOnInit","window","scrollTo","getBookings","userName","getUserEmail","getBookingStatus","rowData","status","enums_model","getPaymentType","paymentType","logout","loggedOut","subscribe","response","data","bookings","console","log","message","errorMessage","isError","bookingDetails","id","ngOnDestroy","next","complete","selectors","AuthGuardService","_authService","canActivate","state","isLoggedIn","isUserLoggedIn","role","getRole","setUserLoggedOut","factory","ManageAlertsComponent","routes","path","component","UserModule","common","fesm2020_forms","shared_module","primeng_table","router"],"sourceRoot":"webpack:///","sources":["./src/app/models/enums.model.ts","./src/app/user/bookings/bookings.component.html","./src/app/user/bookings/bookings.component.ts","./src/app/auth/guard/auth-guard.service.ts","./src/app/user/manage-alerts/manage-alerts.component.ts","./src/app/user/manage-alerts/manage-alerts.component.html","./src/app/user/user.module.ts"],"sourcesContent":["export enum BookingStatus {\r\n  Pending = 1,\r\n  Booked,\r\n  Expired,\r\n  Canceled,\r\n  Rejected,\r\n  Confirmed\r\n}\r\n\r\nexport enum PassangerType {\r\n  Adult = 1,\r\n  Child,\r\n  Infant\r\n}\r\n\r\nexport enum TripType {\r\n  RoundTrip= 1,\r\n  OneWay = 2 ,\r\n  MultiCity = 3\r\n}\r\n\r\nexport enum PaymentType {\r\n  PayAtBranch = 1,\r\n  PayPro = 2,\r\n  Credit = 3\r\n}\r\n\r\nexport enum PaymentStatus {\r\n  Pending = 1,\r\n  Paid\r\n}\r\n","<div class=\"row\" *ngIf=\"isError\">\r\n  <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n    <div class=\"flt-details wow fadeIn\">\r\n      <div class=\"alert alert-danger col-lg-12 col-sm-12 col-xs-12\" role=\"alert\">\r\n        {{ errorMessage }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row mb-5\">\r\n  <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n    <div class=\"manage-table\">\r\n      <div class=\"booking-table\">\r\n        <p-table [value]=\"bookings\" [rowHover]=\"true\" [responsive]=\"true\" responsiveLayout=\"scroll\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n          [rowsPerPageOptions]=\"[5, 10,25,50]\" [paginator]=\"true\"\r\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\r\n          <!-- <ng-template pTemplate=\"caption\">\r\n            Bookings\r\n          </ng-template> -->\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th pSortableColumn=\"id\">Booking Ref <p-sortIcon field=\"id\"></p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"pax\">No. of Passengers <p-sortIcon field=\"pax\"></p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"originLocation\">Origin <p-sortIcon field=\"originLocation\"></p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"destinationLocation\">Destination <p-sortIcon field=\"destinationLocation\">\r\n                </p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"paymentTypeName\">Payment Type <p-sortIcon field=\"paymentTypeName\">\r\n                </p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"bookingStatusName\">Booking Stage <p-sortIcon field=\"bookingStatusName\">\r\n                </p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"expiredOn\">Expired On <p-sortIcon field=\"expiredOn\"></p-sortIcon>\r\n              </th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-user>\r\n            <tr>\r\n              <td (click)=\"bookingDetails(user.id)\">{{user.pnr}}</td>\r\n              <td>{{user.pax}}</td>\r\n              <td>{{user.originLocation}}</td>\r\n              <td>{{user.destinationLocation}}</td>\r\n              <td>{{user.paymentTypeName}}</td>\r\n              <td>{{user.bookingStatusName}}</td>\r\n              <td>{{user.expiredOn | date :'d MMM yyyy'}}</td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n\r\n\r\n        <!-- <dx-data-grid id=\"gridContainer\" [dataSource]=\"bookings\" [showColumnLines]=\"false\" [showRowLines]=\"true\"\r\n          [showBorders]=\"true\" [columnAutoWidth]=\"true\" (onRowClick)=\"getBookingDetails($event)\">\r\n\r\n          <dxo-sorting mode=\"multiple\"></dxo-sorting>\r\n          <dxo-paging [pageSize]=\"10\"></dxo-paging>\r\n          <dxi-column dataField=\"pnr\" caption=\"Booking Ref\"></dxi-column>\r\n          <dxi-column alignment=\"center\" dataField=\"pax\" caption=\"No. of Passengers\">\r\n          </dxi-column>\r\n          <dxi-column dataField=\"originLocation\" caption=\"Origin\"></dxi-column>\r\n          <dxi-column dataField=\"destinationLocation\" caption=\"Destination\"></dxi-column>\r\n          <dxi-column [calculateCellValue]=\"getPaymentType\" caption=\"Payment Type\"></dxi-column>\r\n          <dxi-column alignment=\"center\" [calculateCellValue]=\"getBookingStatus\" caption=\"Booking Stage\"></dxi-column>\r\n          <dxi-column dataField=\"expiredOn\" dataType=\"date\" format=\"d MMM yyyy\" caption=\"Expired On\"></dxi-column>\r\n        </dx-data-grid> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/shared/auth.service';\r\nimport { BookingStatus, PaymentType } from 'src/app/models/enums.model';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { UserService } from 'src/app/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-bookings',\r\n  templateUrl: './bookings.component.html',\r\n  styleUrls: ['./bookings.component.scss'],\r\n})\r\nexport class BookingsComponent implements OnInit, OnDestroy {\r\n  bookings: any[];\r\n  isError: boolean;\r\n  errorMessage: string;\r\n  bookingStatus: BookingStatus;\r\n\r\n  // Private\r\n  private unsubscribeAll: Subject<any>;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private service: CommonService,\r\n    private userService: UserService\r\n  ) {\r\n    // Set the private defaults\r\n    this.unsubscribeAll = new Subject();\r\n  }\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  // @ Lifecycle hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    window.scrollTo(0, 0);\r\n    this.getBookings();\r\n  }\r\n\r\n  get userName(): string {\r\n    return this.authService.getUserEmail();\r\n  }\r\n\r\n  getBookingStatus(rowData) {\r\n    switch (rowData.status) {\r\n      case 1:\r\n        return BookingStatus[1];\r\n      case 2:\r\n        return BookingStatus[2];\r\n      case 3:\r\n        return BookingStatus[3];\r\n      case 4:\r\n        return BookingStatus[4];\r\n      case 5:\r\n        return BookingStatus[5];\r\n      case 6:\r\n        return BookingStatus[6];\r\n    }\r\n  }\r\n\r\n  getPaymentType(rowData) {\r\n    switch (rowData.paymentType) {\r\n      case 1:\r\n        return PaymentType[1];\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.loggedOut();\r\n  }\r\n\r\n  getBookings() {\r\n    this.userService.getBookings().subscribe((response) => {\r\n      if (response) {\r\n        if (response.status === 'success') {\r\n          if (response.data) {\r\n            this.bookings = response.data;\r\n            console.log('bookings', response.data);\r\n          }\r\n        } else {\r\n          if (response.message) {\r\n            this.errorMessage = response.message;\r\n          } else {\r\n            this.errorMessage = 'GetBookings Err 1: Unknown; Try Again';\r\n            this.isError = true;\r\n          }\r\n        }\r\n      } else {\r\n        this.errorMessage = 'GetBookings Err 2: Unknown; Try Again';\r\n        this.isError = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  bookingDetails(id: any) {\r\n    console.log(id);\r\n    //this.router.navigate(['/travel-agent/booking-detail', id]);\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this.unsubscribeAll.next(0);\r\n    this.unsubscribeAll.complete();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../shared/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(\r\n    private _authService: AuthService\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const isLoggedIn = this._authService.isUserLoggedIn();\r\n    const role = this._authService.getRole();\r\n    if (!isLoggedIn || (role == null || role === undefined || role === '')) {\r\n      this._authService.setUserLoggedOut();\r\n    }\r\n    else {\r\n      if (role === 'User') {\r\n        return isLoggedIn;\r\n      } else {\r\n        this._authService.setUserLoggedOut();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/shared/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-alerts',\r\n  templateUrl: './manage-alerts.component.html',\r\n  styleUrls: ['./manage-alerts.component.scss'],\r\n})\r\nexport class ManageAlertsComponent implements OnInit, OnDestroy {\r\n  alerts: any[];\r\n\r\n  // Private\r\n  private unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   */\r\n  constructor(\r\n    private authService: AuthService) {\r\n    // Set the private defaults\r\n    this.unsubscribeAll = new Subject();\r\n  }\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  // @ Lifecycle hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  get userName(): string {\r\n    return this.authService.getUserEmail();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.loggedOut();\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this.unsubscribeAll.next(0);\r\n    this.unsubscribeAll.complete();\r\n  }\r\n}\r\n","<div class=\"middle\">\r\n  <h1>COMING SOON...</h1>  \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { BookingsComponent } from './bookings/bookings.component';\r\nimport { AuthGuardService } from '../auth/guard/auth-guard.service';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { ManageAlertsComponent } from './manage-alerts/manage-alerts.component';\r\n// import { DxDataGridModule } from 'devextreme-angular/ui/data-grid';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nconst routes = [\r\n  {\r\n    path: 'bookings',\r\n    component: BookingsComponent,\r\n    canActivate: [AuthGuardService],\r\n  },\r\n  {\r\n    path: 'manage-alerts',\r\n    component: ManageAlertsComponent,\r\n    canActivate: [AuthGuardService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [BookingsComponent, ManageAlertsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    // DxDataGridModule,\r\n    TableModule,\r\n\r\n    RouterModule.forChild(routes),\r\n  ],\r\n})\r\nexport class UserModule { }\r\n"],"x_google_ignoreList":[]}